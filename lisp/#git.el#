<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'>
<head>
<title>git.git - The core git plumbing</title>
<meta name='generator' content='cgit v0.10.2'/>
<meta name='robots' content='index, nofollow'/>
<link rel='stylesheet' type='text/css' href='/cgit-korg-0.10.1.css'/>
<link rel='shortcut icon' href='/favicon.png'/>
<link rel='alternate' title='Atom feed' href='http://git.kernel.org/cgit/git/git.git/atom/contrib/emacs/git.el?h=master' type='application/atom+xml'/>
</head>
<body>
<div id='cgit'><table id='header'>
<tr>
<td class='logo' rowspan='2'><a href='/cgit/'><img src='/tux-cgit.png' alt='cgit logo'/></a></td>
<td class='main'><a href='/cgit/'>index</a> : <a title='git.git' href='/cgit/git/git.git/'>git.git</a></td><td class='form'><form method='get' action=''>
<select name='h' onchange='this.form.submit();'>
<option value='maint'>maint</option>
<option value='master' selected='selected'>master</option>
<option value='next'>next</option>
<option value='pu'>pu</option>
<option value='todo'>todo</option>
</select> <input type='submit' name='' value='switch'/></form></td></tr>
<tr><td class='sub'>The core git plumbing</td><td class='sub right'>Junio C. Hamano</td></tr></table>
<table class='tabs'><tr><td>
<a href='/cgit/git/git.git/'>summary</a><a href='/cgit/git/git.git/refs/'>refs</a><a href='/cgit/git/git.git/log/contrib/emacs/git.el'>log</a><a class='active' href='/cgit/git/git.git/tree/contrib/emacs/git.el'>tree</a><a href='/cgit/git/git.git/commit/contrib/emacs/git.el'>commit</a><a href='/cgit/git/git.git/diff/contrib/emacs/git.el'>diff</a><a href='/cgit/git/git.git/stats/contrib/emacs/git.el'>stats</a></td><td class='form'><form class='right' method='get' action='/cgit/git/git.git/log/contrib/emacs/git.el'>
<select name='qt'>
<option value='grep'>log msg</option>
<option value='author'>author</option>
<option value='committer'>committer</option>
<option value='range'>range</option>
</select>
<input class='txt' type='text' size='10' name='q' value=''/>
<input type='submit' value='search'/>
</form>
</td></tr></table>
<div class='path'>path: <a href='/cgit/git/git.git/tree/'>root</a>/<a href='/cgit/git/git.git/tree/contrib'>contrib</a>/<a href='/cgit/git/git.git/tree/contrib/emacs'>emacs</a>/<a href='/cgit/git/git.git/tree/contrib/emacs/git.el'>git.el</a></div><div class='content'>blob: 5ffc506f6d7e3e1b4c0a0919b1d2e9beb141444f (<a href='/cgit/git/git.git/plain/contrib/emacs/git.el'>plain</a>)
<table summary='blob content' class='blob'>
<tr><td class='linenumbers'><pre><a id='n1' href='#n1'>1</a>
<a id='n2' href='#n2'>2</a>
<a id='n3' href='#n3'>3</a>
<a id='n4' href='#n4'>4</a>
<a id='n5' href='#n5'>5</a>
<a id='n6' href='#n6'>6</a>
<a id='n7' href='#n7'>7</a>
<a id='n8' href='#n8'>8</a>
<a id='n9' href='#n9'>9</a>
<a id='n10' href='#n10'>10</a>
<a id='n11' href='#n11'>11</a>
<a id='n12' href='#n12'>12</a>
<a id='n13' href='#n13'>13</a>
<a id='n14' href='#n14'>14</a>
<a id='n15' href='#n15'>15</a>
<a id='n16' href='#n16'>16</a>
<a id='n17' href='#n17'>17</a>
<a id='n18' href='#n18'>18</a>
<a id='n19' href='#n19'>19</a>
<a id='n20' href='#n20'>20</a>
<a id='n21' href='#n21'>21</a>
<a id='n22' href='#n22'>22</a>
<a id='n23' href='#n23'>23</a>
<a id='n24' href='#n24'>24</a>
<a id='n25' href='#n25'>25</a>
<a id='n26' href='#n26'>26</a>
<a id='n27' href='#n27'>27</a>
<a id='n28' href='#n28'>28</a>
<a id='n29' href='#n29'>29</a>
<a id='n30' href='#n30'>30</a>
<a id='n31' href='#n31'>31</a>
<a id='n32' href='#n32'>32</a>
<a id='n33' href='#n33'>33</a>
<a id='n34' href='#n34'>34</a>
<a id='n35' href='#n35'>35</a>
<a id='n36' href='#n36'>36</a>
<a id='n37' href='#n37'>37</a>
<a id='n38' href='#n38'>38</a>
<a id='n39' href='#n39'>39</a>
<a id='n40' href='#n40'>40</a>
<a id='n41' href='#n41'>41</a>
<a id='n42' href='#n42'>42</a>
<a id='n43' href='#n43'>43</a>
<a id='n44' href='#n44'>44</a>
<a id='n45' href='#n45'>45</a>
<a id='n46' href='#n46'>46</a>
<a id='n47' href='#n47'>47</a>
<a id='n48' href='#n48'>48</a>
<a id='n49' href='#n49'>49</a>
<a id='n50' href='#n50'>50</a>
<a id='n51' href='#n51'>51</a>
<a id='n52' href='#n52'>52</a>
<a id='n53' href='#n53'>53</a>
<a id='n54' href='#n54'>54</a>
<a id='n55' href='#n55'>55</a>
<a id='n56' href='#n56'>56</a>
<a id='n57' href='#n57'>57</a>
<a id='n58' href='#n58'>58</a>
<a id='n59' href='#n59'>59</a>
<a id='n60' href='#n60'>60</a>
<a id='n61' href='#n61'>61</a>
<a id='n62' href='#n62'>62</a>
<a id='n63' href='#n63'>63</a>
<a id='n64' href='#n64'>64</a>
<a id='n65' href='#n65'>65</a>
<a id='n66' href='#n66'>66</a>
<a id='n67' href='#n67'>67</a>
<a id='n68' href='#n68'>68</a>
<a id='n69' href='#n69'>69</a>
<a id='n70' href='#n70'>70</a>
<a id='n71' href='#n71'>71</a>
<a id='n72' href='#n72'>72</a>
<a id='n73' href='#n73'>73</a>
<a id='n74' href='#n74'>74</a>
<a id='n75' href='#n75'>75</a>
<a id='n76' href='#n76'>76</a>
<a id='n77' href='#n77'>77</a>
<a id='n78' href='#n78'>78</a>
<a id='n79' href='#n79'>79</a>
<a id='n80' href='#n80'>80</a>
<a id='n81' href='#n81'>81</a>
<a id='n82' href='#n82'>82</a>
<a id='n83' href='#n83'>83</a>
<a id='n84' href='#n84'>84</a>
<a id='n85' href='#n85'>85</a>
<a id='n86' href='#n86'>86</a>
<a id='n87' href='#n87'>87</a>
<a id='n88' href='#n88'>88</a>
<a id='n89' href='#n89'>89</a>
<a id='n90' href='#n90'>90</a>
<a id='n91' href='#n91'>91</a>
<a id='n92' href='#n92'>92</a>
<a id='n93' href='#n93'>93</a>
<a id='n94' href='#n94'>94</a>
<a id='n95' href='#n95'>95</a>
<a id='n96' href='#n96'>96</a>
<a id='n97' href='#n97'>97</a>
<a id='n98' href='#n98'>98</a>
<a id='n99' href='#n99'>99</a>
<a id='n100' href='#n100'>100</a>
<a id='n101' href='#n101'>101</a>
<a id='n102' href='#n102'>102</a>
<a id='n103' href='#n103'>103</a>
<a id='n104' href='#n104'>104</a>
<a id='n105' href='#n105'>105</a>
<a id='n106' href='#n106'>106</a>
<a id='n107' href='#n107'>107</a>
<a id='n108' href='#n108'>108</a>
<a id='n109' href='#n109'>109</a>
<a id='n110' href='#n110'>110</a>
<a id='n111' href='#n111'>111</a>
<a id='n112' href='#n112'>112</a>
<a id='n113' href='#n113'>113</a>
<a id='n114' href='#n114'>114</a>
<a id='n115' href='#n115'>115</a>
<a id='n116' href='#n116'>116</a>
<a id='n117' href='#n117'>117</a>
<a id='n118' href='#n118'>118</a>
<a id='n119' href='#n119'>119</a>
<a id='n120' href='#n120'>120</a>
<a id='n121' href='#n121'>121</a>
<a id='n122' href='#n122'>122</a>
<a id='n123' href='#n123'>123</a>
<a id='n124' href='#n124'>124</a>
<a id='n125' href='#n125'>125</a>
<a id='n126' href='#n126'>126</a>
<a id='n127' href='#n127'>127</a>
<a id='n128' href='#n128'>128</a>
<a id='n129' href='#n129'>129</a>
<a id='n130' href='#n130'>130</a>
<a id='n131' href='#n131'>131</a>
<a id='n132' href='#n132'>132</a>
<a id='n133' href='#n133'>133</a>
<a id='n134' href='#n134'>134</a>
<a id='n135' href='#n135'>135</a>
<a id='n136' href='#n136'>136</a>
<a id='n137' href='#n137'>137</a>
<a id='n138' href='#n138'>138</a>
<a id='n139' href='#n139'>139</a>
<a id='n140' href='#n140'>140</a>
<a id='n141' href='#n141'>141</a>
<a id='n142' href='#n142'>142</a>
<a id='n143' href='#n143'>143</a>
<a id='n144' href='#n144'>144</a>
<a id='n145' href='#n145'>145</a>
<a id='n146' href='#n146'>146</a>
<a id='n147' href='#n147'>147</a>
<a id='n148' href='#n148'>148</a>
<a id='n149' href='#n149'>149</a>
<a id='n150' href='#n150'>150</a>
<a id='n151' href='#n151'>151</a>
<a id='n152' href='#n152'>152</a>
<a id='n153' href='#n153'>153</a>
<a id='n154' href='#n154'>154</a>
<a id='n155' href='#n155'>155</a>
<a id='n156' href='#n156'>156</a>
<a id='n157' href='#n157'>157</a>
<a id='n158' href='#n158'>158</a>
<a id='n159' href='#n159'>159</a>
<a id='n160' href='#n160'>160</a>
<a id='n161' href='#n161'>161</a>
<a id='n162' href='#n162'>162</a>
<a id='n163' href='#n163'>163</a>
<a id='n164' href='#n164'>164</a>
<a id='n165' href='#n165'>165</a>
<a id='n166' href='#n166'>166</a>
<a id='n167' href='#n167'>167</a>
<a id='n168' href='#n168'>168</a>
<a id='n169' href='#n169'>169</a>
<a id='n170' href='#n170'>170</a>
<a id='n171' href='#n171'>171</a>
<a id='n172' href='#n172'>172</a>
<a id='n173' href='#n173'>173</a>
<a id='n174' href='#n174'>174</a>
<a id='n175' href='#n175'>175</a>
<a id='n176' href='#n176'>176</a>
<a id='n177' href='#n177'>177</a>
<a id='n178' href='#n178'>178</a>
<a id='n179' href='#n179'>179</a>
<a id='n180' href='#n180'>180</a>
<a id='n181' href='#n181'>181</a>
<a id='n182' href='#n182'>182</a>
<a id='n183' href='#n183'>183</a>
<a id='n184' href='#n184'>184</a>
<a id='n185' href='#n185'>185</a>
<a id='n186' href='#n186'>186</a>
<a id='n187' href='#n187'>187</a>
<a id='n188' href='#n188'>188</a>
<a id='n189' href='#n189'>189</a>
<a id='n190' href='#n190'>190</a>
<a id='n191' href='#n191'>191</a>
<a id='n192' href='#n192'>192</a>
<a id='n193' href='#n193'>193</a>
<a id='n194' href='#n194'>194</a>
<a id='n195' href='#n195'>195</a>
<a id='n196' href='#n196'>196</a>
<a id='n197' href='#n197'>197</a>
<a id='n198' href='#n198'>198</a>
<a id='n199' href='#n199'>199</a>
<a id='n200' href='#n200'>200</a>
<a id='n201' href='#n201'>201</a>
<a id='n202' href='#n202'>202</a>
<a id='n203' href='#n203'>203</a>
<a id='n204' href='#n204'>204</a>
<a id='n205' href='#n205'>205</a>
<a id='n206' href='#n206'>206</a>
<a id='n207' href='#n207'>207</a>
<a id='n208' href='#n208'>208</a>
<a id='n209' href='#n209'>209</a>
<a id='n210' href='#n210'>210</a>
<a id='n211' href='#n211'>211</a>
<a id='n212' href='#n212'>212</a>
<a id='n213' href='#n213'>213</a>
<a id='n214' href='#n214'>214</a>
<a id='n215' href='#n215'>215</a>
<a id='n216' href='#n216'>216</a>
<a id='n217' href='#n217'>217</a>
<a id='n218' href='#n218'>218</a>
<a id='n219' href='#n219'>219</a>
<a id='n220' href='#n220'>220</a>
<a id='n221' href='#n221'>221</a>
<a id='n222' href='#n222'>222</a>
<a id='n223' href='#n223'>223</a>
<a id='n224' href='#n224'>224</a>
<a id='n225' href='#n225'>225</a>
<a id='n226' href='#n226'>226</a>
<a id='n227' href='#n227'>227</a>
<a id='n228' href='#n228'>228</a>
<a id='n229' href='#n229'>229</a>
<a id='n230' href='#n230'>230</a>
<a id='n231' href='#n231'>231</a>
<a id='n232' href='#n232'>232</a>
<a id='n233' href='#n233'>233</a>
<a id='n234' href='#n234'>234</a>
<a id='n235' href='#n235'>235</a>
<a id='n236' href='#n236'>236</a>
<a id='n237' href='#n237'>237</a>
<a id='n238' href='#n238'>238</a>
<a id='n239' href='#n239'>239</a>
<a id='n240' href='#n240'>240</a>
<a id='n241' href='#n241'>241</a>
<a id='n242' href='#n242'>242</a>
<a id='n243' href='#n243'>243</a>
<a id='n244' href='#n244'>244</a>
<a id='n245' href='#n245'>245</a>
<a id='n246' href='#n246'>246</a>
<a id='n247' href='#n247'>247</a>
<a id='n248' href='#n248'>248</a>
<a id='n249' href='#n249'>249</a>
<a id='n250' href='#n250'>250</a>
<a id='n251' href='#n251'>251</a>
<a id='n252' href='#n252'>252</a>
<a id='n253' href='#n253'>253</a>
<a id='n254' href='#n254'>254</a>
<a id='n255' href='#n255'>255</a>
<a id='n256' href='#n256'>256</a>
<a id='n257' href='#n257'>257</a>
<a id='n258' href='#n258'>258</a>
<a id='n259' href='#n259'>259</a>
<a id='n260' href='#n260'>260</a>
<a id='n261' href='#n261'>261</a>
<a id='n262' href='#n262'>262</a>
<a id='n263' href='#n263'>263</a>
<a id='n264' href='#n264'>264</a>
<a id='n265' href='#n265'>265</a>
<a id='n266' href='#n266'>266</a>
<a id='n267' href='#n267'>267</a>
<a id='n268' href='#n268'>268</a>
<a id='n269' href='#n269'>269</a>
<a id='n270' href='#n270'>270</a>
<a id='n271' href='#n271'>271</a>
<a id='n272' href='#n272'>272</a>
<a id='n273' href='#n273'>273</a>
<a id='n274' href='#n274'>274</a>
<a id='n275' href='#n275'>275</a>
<a id='n276' href='#n276'>276</a>
<a id='n277' href='#n277'>277</a>
<a id='n278' href='#n278'>278</a>
<a id='n279' href='#n279'>279</a>
<a id='n280' href='#n280'>280</a>
<a id='n281' href='#n281'>281</a>
<a id='n282' href='#n282'>282</a>
<a id='n283' href='#n283'>283</a>
<a id='n284' href='#n284'>284</a>
<a id='n285' href='#n285'>285</a>
<a id='n286' href='#n286'>286</a>
<a id='n287' href='#n287'>287</a>
<a id='n288' href='#n288'>288</a>
<a id='n289' href='#n289'>289</a>
<a id='n290' href='#n290'>290</a>
<a id='n291' href='#n291'>291</a>
<a id='n292' href='#n292'>292</a>
<a id='n293' href='#n293'>293</a>
<a id='n294' href='#n294'>294</a>
<a id='n295' href='#n295'>295</a>
<a id='n296' href='#n296'>296</a>
<a id='n297' href='#n297'>297</a>
<a id='n298' href='#n298'>298</a>
<a id='n299' href='#n299'>299</a>
<a id='n300' href='#n300'>300</a>
<a id='n301' href='#n301'>301</a>
<a id='n302' href='#n302'>302</a>
<a id='n303' href='#n303'>303</a>
<a id='n304' href='#n304'>304</a>
<a id='n305' href='#n305'>305</a>
<a id='n306' href='#n306'>306</a>
<a id='n307' href='#n307'>307</a>
<a id='n308' href='#n308'>308</a>
<a id='n309' href='#n309'>309</a>
<a id='n310' href='#n310'>310</a>
<a id='n311' href='#n311'>311</a>
<a id='n312' href='#n312'>312</a>
<a id='n313' href='#n313'>313</a>
<a id='n314' href='#n314'>314</a>
<a id='n315' href='#n315'>315</a>
<a id='n316' href='#n316'>316</a>
<a id='n317' href='#n317'>317</a>
<a id='n318' href='#n318'>318</a>
<a id='n319' href='#n319'>319</a>
<a id='n320' href='#n320'>320</a>
<a id='n321' href='#n321'>321</a>
<a id='n322' href='#n322'>322</a>
<a id='n323' href='#n323'>323</a>
<a id='n324' href='#n324'>324</a>
<a id='n325' href='#n325'>325</a>
<a id='n326' href='#n326'>326</a>
<a id='n327' href='#n327'>327</a>
<a id='n328' href='#n328'>328</a>
<a id='n329' href='#n329'>329</a>
<a id='n330' href='#n330'>330</a>
<a id='n331' href='#n331'>331</a>
<a id='n332' href='#n332'>332</a>
<a id='n333' href='#n333'>333</a>
<a id='n334' href='#n334'>334</a>
<a id='n335' href='#n335'>335</a>
<a id='n336' href='#n336'>336</a>
<a id='n337' href='#n337'>337</a>
<a id='n338' href='#n338'>338</a>
<a id='n339' href='#n339'>339</a>
<a id='n340' href='#n340'>340</a>
<a id='n341' href='#n341'>341</a>
<a id='n342' href='#n342'>342</a>
<a id='n343' href='#n343'>343</a>
<a id='n344' href='#n344'>344</a>
<a id='n345' href='#n345'>345</a>
<a id='n346' href='#n346'>346</a>
<a id='n347' href='#n347'>347</a>
<a id='n348' href='#n348'>348</a>
<a id='n349' href='#n349'>349</a>
<a id='n350' href='#n350'>350</a>
<a id='n351' href='#n351'>351</a>
<a id='n352' href='#n352'>352</a>
<a id='n353' href='#n353'>353</a>
<a id='n354' href='#n354'>354</a>
<a id='n355' href='#n355'>355</a>
<a id='n356' href='#n356'>356</a>
<a id='n357' href='#n357'>357</a>
<a id='n358' href='#n358'>358</a>
<a id='n359' href='#n359'>359</a>
<a id='n360' href='#n360'>360</a>
<a id='n361' href='#n361'>361</a>
<a id='n362' href='#n362'>362</a>
<a id='n363' href='#n363'>363</a>
<a id='n364' href='#n364'>364</a>
<a id='n365' href='#n365'>365</a>
<a id='n366' href='#n366'>366</a>
<a id='n367' href='#n367'>367</a>
<a id='n368' href='#n368'>368</a>
<a id='n369' href='#n369'>369</a>
<a id='n370' href='#n370'>370</a>
<a id='n371' href='#n371'>371</a>
<a id='n372' href='#n372'>372</a>
<a id='n373' href='#n373'>373</a>
<a id='n374' href='#n374'>374</a>
<a id='n375' href='#n375'>375</a>
<a id='n376' href='#n376'>376</a>
<a id='n377' href='#n377'>377</a>
<a id='n378' href='#n378'>378</a>
<a id='n379' href='#n379'>379</a>
<a id='n380' href='#n380'>380</a>
<a id='n381' href='#n381'>381</a>
<a id='n382' href='#n382'>382</a>
<a id='n383' href='#n383'>383</a>
<a id='n384' href='#n384'>384</a>
<a id='n385' href='#n385'>385</a>
<a id='n386' href='#n386'>386</a>
<a id='n387' href='#n387'>387</a>
<a id='n388' href='#n388'>388</a>
<a id='n389' href='#n389'>389</a>
<a id='n390' href='#n390'>390</a>
<a id='n391' href='#n391'>391</a>
<a id='n392' href='#n392'>392</a>
<a id='n393' href='#n393'>393</a>
<a id='n394' href='#n394'>394</a>
<a id='n395' href='#n395'>395</a>
<a id='n396' href='#n396'>396</a>
<a id='n397' href='#n397'>397</a>
<a id='n398' href='#n398'>398</a>
<a id='n399' href='#n399'>399</a>
<a id='n400' href='#n400'>400</a>
<a id='n401' href='#n401'>401</a>
<a id='n402' href='#n402'>402</a>
<a id='n403' href='#n403'>403</a>
<a id='n404' href='#n404'>404</a>
<a id='n405' href='#n405'>405</a>
<a id='n406' href='#n406'>406</a>
<a id='n407' href='#n407'>407</a>
<a id='n408' href='#n408'>408</a>
<a id='n409' href='#n409'>409</a>
<a id='n410' href='#n410'>410</a>
<a id='n411' href='#n411'>411</a>
<a id='n412' href='#n412'>412</a>
<a id='n413' href='#n413'>413</a>
<a id='n414' href='#n414'>414</a>
<a id='n415' href='#n415'>415</a>
<a id='n416' href='#n416'>416</a>
<a id='n417' href='#n417'>417</a>
<a id='n418' href='#n418'>418</a>
<a id='n419' href='#n419'>419</a>
<a id='n420' href='#n420'>420</a>
<a id='n421' href='#n421'>421</a>
<a id='n422' href='#n422'>422</a>
<a id='n423' href='#n423'>423</a>
<a id='n424' href='#n424'>424</a>
<a id='n425' href='#n425'>425</a>
<a id='n426' href='#n426'>426</a>
<a id='n427' href='#n427'>427</a>
<a id='n428' href='#n428'>428</a>
<a id='n429' href='#n429'>429</a>
<a id='n430' href='#n430'>430</a>
<a id='n431' href='#n431'>431</a>
<a id='n432' href='#n432'>432</a>
<a id='n433' href='#n433'>433</a>
<a id='n434' href='#n434'>434</a>
<a id='n435' href='#n435'>435</a>
<a id='n436' href='#n436'>436</a>
<a id='n437' href='#n437'>437</a>
<a id='n438' href='#n438'>438</a>
<a id='n439' href='#n439'>439</a>
<a id='n440' href='#n440'>440</a>
<a id='n441' href='#n441'>441</a>
<a id='n442' href='#n442'>442</a>
<a id='n443' href='#n443'>443</a>
<a id='n444' href='#n444'>444</a>
<a id='n445' href='#n445'>445</a>
<a id='n446' href='#n446'>446</a>
<a id='n447' href='#n447'>447</a>
<a id='n448' href='#n448'>448</a>
<a id='n449' href='#n449'>449</a>
<a id='n450' href='#n450'>450</a>
<a id='n451' href='#n451'>451</a>
<a id='n452' href='#n452'>452</a>
<a id='n453' href='#n453'>453</a>
<a id='n454' href='#n454'>454</a>
<a id='n455' href='#n455'>455</a>
<a id='n456' href='#n456'>456</a>
<a id='n457' href='#n457'>457</a>
<a id='n458' href='#n458'>458</a>
<a id='n459' href='#n459'>459</a>
<a id='n460' href='#n460'>460</a>
<a id='n461' href='#n461'>461</a>
<a id='n462' href='#n462'>462</a>
<a id='n463' href='#n463'>463</a>
<a id='n464' href='#n464'>464</a>
<a id='n465' href='#n465'>465</a>
<a id='n466' href='#n466'>466</a>
<a id='n467' href='#n467'>467</a>
<a id='n468' href='#n468'>468</a>
<a id='n469' href='#n469'>469</a>
<a id='n470' href='#n470'>470</a>
<a id='n471' href='#n471'>471</a>
<a id='n472' href='#n472'>472</a>
<a id='n473' href='#n473'>473</a>
<a id='n474' href='#n474'>474</a>
<a id='n475' href='#n475'>475</a>
<a id='n476' href='#n476'>476</a>
<a id='n477' href='#n477'>477</a>
<a id='n478' href='#n478'>478</a>
<a id='n479' href='#n479'>479</a>
<a id='n480' href='#n480'>480</a>
<a id='n481' href='#n481'>481</a>
<a id='n482' href='#n482'>482</a>
<a id='n483' href='#n483'>483</a>
<a id='n484' href='#n484'>484</a>
<a id='n485' href='#n485'>485</a>
<a id='n486' href='#n486'>486</a>
<a id='n487' href='#n487'>487</a>
<a id='n488' href='#n488'>488</a>
<a id='n489' href='#n489'>489</a>
<a id='n490' href='#n490'>490</a>
<a id='n491' href='#n491'>491</a>
<a id='n492' href='#n492'>492</a>
<a id='n493' href='#n493'>493</a>
<a id='n494' href='#n494'>494</a>
<a id='n495' href='#n495'>495</a>
<a id='n496' href='#n496'>496</a>
<a id='n497' href='#n497'>497</a>
<a id='n498' href='#n498'>498</a>
<a id='n499' href='#n499'>499</a>
<a id='n500' href='#n500'>500</a>
<a id='n501' href='#n501'>501</a>
<a id='n502' href='#n502'>502</a>
<a id='n503' href='#n503'>503</a>
<a id='n504' href='#n504'>504</a>
<a id='n505' href='#n505'>505</a>
<a id='n506' href='#n506'>506</a>
<a id='n507' href='#n507'>507</a>
<a id='n508' href='#n508'>508</a>
<a id='n509' href='#n509'>509</a>
<a id='n510' href='#n510'>510</a>
<a id='n511' href='#n511'>511</a>
<a id='n512' href='#n512'>512</a>
<a id='n513' href='#n513'>513</a>
<a id='n514' href='#n514'>514</a>
<a id='n515' href='#n515'>515</a>
<a id='n516' href='#n516'>516</a>
<a id='n517' href='#n517'>517</a>
<a id='n518' href='#n518'>518</a>
<a id='n519' href='#n519'>519</a>
<a id='n520' href='#n520'>520</a>
<a id='n521' href='#n521'>521</a>
<a id='n522' href='#n522'>522</a>
<a id='n523' href='#n523'>523</a>
<a id='n524' href='#n524'>524</a>
<a id='n525' href='#n525'>525</a>
<a id='n526' href='#n526'>526</a>
<a id='n527' href='#n527'>527</a>
<a id='n528' href='#n528'>528</a>
<a id='n529' href='#n529'>529</a>
<a id='n530' href='#n530'>530</a>
<a id='n531' href='#n531'>531</a>
<a id='n532' href='#n532'>532</a>
<a id='n533' href='#n533'>533</a>
<a id='n534' href='#n534'>534</a>
<a id='n535' href='#n535'>535</a>
<a id='n536' href='#n536'>536</a>
<a id='n537' href='#n537'>537</a>
<a id='n538' href='#n538'>538</a>
<a id='n539' href='#n539'>539</a>
<a id='n540' href='#n540'>540</a>
<a id='n541' href='#n541'>541</a>
<a id='n542' href='#n542'>542</a>
<a id='n543' href='#n543'>543</a>
<a id='n544' href='#n544'>544</a>
<a id='n545' href='#n545'>545</a>
<a id='n546' href='#n546'>546</a>
<a id='n547' href='#n547'>547</a>
<a id='n548' href='#n548'>548</a>
<a id='n549' href='#n549'>549</a>
<a id='n550' href='#n550'>550</a>
<a id='n551' href='#n551'>551</a>
<a id='n552' href='#n552'>552</a>
<a id='n553' href='#n553'>553</a>
<a id='n554' href='#n554'>554</a>
<a id='n555' href='#n555'>555</a>
<a id='n556' href='#n556'>556</a>
<a id='n557' href='#n557'>557</a>
<a id='n558' href='#n558'>558</a>
<a id='n559' href='#n559'>559</a>
<a id='n560' href='#n560'>560</a>
<a id='n561' href='#n561'>561</a>
<a id='n562' href='#n562'>562</a>
<a id='n563' href='#n563'>563</a>
<a id='n564' href='#n564'>564</a>
<a id='n565' href='#n565'>565</a>
<a id='n566' href='#n566'>566</a>
<a id='n567' href='#n567'>567</a>
<a id='n568' href='#n568'>568</a>
<a id='n569' href='#n569'>569</a>
<a id='n570' href='#n570'>570</a>
<a id='n571' href='#n571'>571</a>
<a id='n572' href='#n572'>572</a>
<a id='n573' href='#n573'>573</a>
<a id='n574' href='#n574'>574</a>
<a id='n575' href='#n575'>575</a>
<a id='n576' href='#n576'>576</a>
<a id='n577' href='#n577'>577</a>
<a id='n578' href='#n578'>578</a>
<a id='n579' href='#n579'>579</a>
<a id='n580' href='#n580'>580</a>
<a id='n581' href='#n581'>581</a>
<a id='n582' href='#n582'>582</a>
<a id='n583' href='#n583'>583</a>
<a id='n584' href='#n584'>584</a>
<a id='n585' href='#n585'>585</a>
<a id='n586' href='#n586'>586</a>
<a id='n587' href='#n587'>587</a>
<a id='n588' href='#n588'>588</a>
<a id='n589' href='#n589'>589</a>
<a id='n590' href='#n590'>590</a>
<a id='n591' href='#n591'>591</a>
<a id='n592' href='#n592'>592</a>
<a id='n593' href='#n593'>593</a>
<a id='n594' href='#n594'>594</a>
<a id='n595' href='#n595'>595</a>
<a id='n596' href='#n596'>596</a>
<a id='n597' href='#n597'>597</a>
<a id='n598' href='#n598'>598</a>
<a id='n599' href='#n599'>599</a>
<a id='n600' href='#n600'>600</a>
<a id='n601' href='#n601'>601</a>
<a id='n602' href='#n602'>602</a>
<a id='n603' href='#n603'>603</a>
<a id='n604' href='#n604'>604</a>
<a id='n605' href='#n605'>605</a>
<a id='n606' href='#n606'>606</a>
<a id='n607' href='#n607'>607</a>
<a id='n608' href='#n608'>608</a>
<a id='n609' href='#n609'>609</a>
<a id='n610' href='#n610'>610</a>
<a id='n611' href='#n611'>611</a>
<a id='n612' href='#n612'>612</a>
<a id='n613' href='#n613'>613</a>
<a id='n614' href='#n614'>614</a>
<a id='n615' href='#n615'>615</a>
<a id='n616' href='#n616'>616</a>
<a id='n617' href='#n617'>617</a>
<a id='n618' href='#n618'>618</a>
<a id='n619' href='#n619'>619</a>
<a id='n620' href='#n620'>620</a>
<a id='n621' href='#n621'>621</a>
<a id='n622' href='#n622'>622</a>
<a id='n623' href='#n623'>623</a>
<a id='n624' href='#n624'>624</a>
<a id='n625' href='#n625'>625</a>
<a id='n626' href='#n626'>626</a>
<a id='n627' href='#n627'>627</a>
<a id='n628' href='#n628'>628</a>
<a id='n629' href='#n629'>629</a>
<a id='n630' href='#n630'>630</a>
<a id='n631' href='#n631'>631</a>
<a id='n632' href='#n632'>632</a>
<a id='n633' href='#n633'>633</a>
<a id='n634' href='#n634'>634</a>
<a id='n635' href='#n635'>635</a>
<a id='n636' href='#n636'>636</a>
<a id='n637' href='#n637'>637</a>
<a id='n638' href='#n638'>638</a>
<a id='n639' href='#n639'>639</a>
<a id='n640' href='#n640'>640</a>
<a id='n641' href='#n641'>641</a>
<a id='n642' href='#n642'>642</a>
<a id='n643' href='#n643'>643</a>
<a id='n644' href='#n644'>644</a>
<a id='n645' href='#n645'>645</a>
<a id='n646' href='#n646'>646</a>
<a id='n647' href='#n647'>647</a>
<a id='n648' href='#n648'>648</a>
<a id='n649' href='#n649'>649</a>
<a id='n650' href='#n650'>650</a>
<a id='n651' href='#n651'>651</a>
<a id='n652' href='#n652'>652</a>
<a id='n653' href='#n653'>653</a>
<a id='n654' href='#n654'>654</a>
<a id='n655' href='#n655'>655</a>
<a id='n656' href='#n656'>656</a>
<a id='n657' href='#n657'>657</a>
<a id='n658' href='#n658'>658</a>
<a id='n659' href='#n659'>659</a>
<a id='n660' href='#n660'>660</a>
<a id='n661' href='#n661'>661</a>
<a id='n662' href='#n662'>662</a>
<a id='n663' href='#n663'>663</a>
<a id='n664' href='#n664'>664</a>
<a id='n665' href='#n665'>665</a>
<a id='n666' href='#n666'>666</a>
<a id='n667' href='#n667'>667</a>
<a id='n668' href='#n668'>668</a>
<a id='n669' href='#n669'>669</a>
<a id='n670' href='#n670'>670</a>
<a id='n671' href='#n671'>671</a>
<a id='n672' href='#n672'>672</a>
<a id='n673' href='#n673'>673</a>
<a id='n674' href='#n674'>674</a>
<a id='n675' href='#n675'>675</a>
<a id='n676' href='#n676'>676</a>
<a id='n677' href='#n677'>677</a>
<a id='n678' href='#n678'>678</a>
<a id='n679' href='#n679'>679</a>
<a id='n680' href='#n680'>680</a>
<a id='n681' href='#n681'>681</a>
<a id='n682' href='#n682'>682</a>
<a id='n683' href='#n683'>683</a>
<a id='n684' href='#n684'>684</a>
<a id='n685' href='#n685'>685</a>
<a id='n686' href='#n686'>686</a>
<a id='n687' href='#n687'>687</a>
<a id='n688' href='#n688'>688</a>
<a id='n689' href='#n689'>689</a>
<a id='n690' href='#n690'>690</a>
<a id='n691' href='#n691'>691</a>
<a id='n692' href='#n692'>692</a>
<a id='n693' href='#n693'>693</a>
<a id='n694' href='#n694'>694</a>
<a id='n695' href='#n695'>695</a>
<a id='n696' href='#n696'>696</a>
<a id='n697' href='#n697'>697</a>
<a id='n698' href='#n698'>698</a>
<a id='n699' href='#n699'>699</a>
<a id='n700' href='#n700'>700</a>
<a id='n701' href='#n701'>701</a>
<a id='n702' href='#n702'>702</a>
<a id='n703' href='#n703'>703</a>
<a id='n704' href='#n704'>704</a>
<a id='n705' href='#n705'>705</a>
<a id='n706' href='#n706'>706</a>
<a id='n707' href='#n707'>707</a>
<a id='n708' href='#n708'>708</a>
<a id='n709' href='#n709'>709</a>
<a id='n710' href='#n710'>710</a>
<a id='n711' href='#n711'>711</a>
<a id='n712' href='#n712'>712</a>
<a id='n713' href='#n713'>713</a>
<a id='n714' href='#n714'>714</a>
<a id='n715' href='#n715'>715</a>
<a id='n716' href='#n716'>716</a>
<a id='n717' href='#n717'>717</a>
<a id='n718' href='#n718'>718</a>
<a id='n719' href='#n719'>719</a>
<a id='n720' href='#n720'>720</a>
<a id='n721' href='#n721'>721</a>
<a id='n722' href='#n722'>722</a>
<a id='n723' href='#n723'>723</a>
<a id='n724' href='#n724'>724</a>
<a id='n725' href='#n725'>725</a>
<a id='n726' href='#n726'>726</a>
<a id='n727' href='#n727'>727</a>
<a id='n728' href='#n728'>728</a>
<a id='n729' href='#n729'>729</a>
<a id='n730' href='#n730'>730</a>
<a id='n731' href='#n731'>731</a>
<a id='n732' href='#n732'>732</a>
<a id='n733' href='#n733'>733</a>
<a id='n734' href='#n734'>734</a>
<a id='n735' href='#n735'>735</a>
<a id='n736' href='#n736'>736</a>
<a id='n737' href='#n737'>737</a>
<a id='n738' href='#n738'>738</a>
<a id='n739' href='#n739'>739</a>
<a id='n740' href='#n740'>740</a>
<a id='n741' href='#n741'>741</a>
<a id='n742' href='#n742'>742</a>
<a id='n743' href='#n743'>743</a>
<a id='n744' href='#n744'>744</a>
<a id='n745' href='#n745'>745</a>
<a id='n746' href='#n746'>746</a>
<a id='n747' href='#n747'>747</a>
<a id='n748' href='#n748'>748</a>
<a id='n749' href='#n749'>749</a>
<a id='n750' href='#n750'>750</a>
<a id='n751' href='#n751'>751</a>
<a id='n752' href='#n752'>752</a>
<a id='n753' href='#n753'>753</a>
<a id='n754' href='#n754'>754</a>
<a id='n755' href='#n755'>755</a>
<a id='n756' href='#n756'>756</a>
<a id='n757' href='#n757'>757</a>
<a id='n758' href='#n758'>758</a>
<a id='n759' href='#n759'>759</a>
<a id='n760' href='#n760'>760</a>
<a id='n761' href='#n761'>761</a>
<a id='n762' href='#n762'>762</a>
<a id='n763' href='#n763'>763</a>
<a id='n764' href='#n764'>764</a>
<a id='n765' href='#n765'>765</a>
<a id='n766' href='#n766'>766</a>
<a id='n767' href='#n767'>767</a>
<a id='n768' href='#n768'>768</a>
<a id='n769' href='#n769'>769</a>
<a id='n770' href='#n770'>770</a>
<a id='n771' href='#n771'>771</a>
<a id='n772' href='#n772'>772</a>
<a id='n773' href='#n773'>773</a>
<a id='n774' href='#n774'>774</a>
<a id='n775' href='#n775'>775</a>
<a id='n776' href='#n776'>776</a>
<a id='n777' href='#n777'>777</a>
<a id='n778' href='#n778'>778</a>
<a id='n779' href='#n779'>779</a>
<a id='n780' href='#n780'>780</a>
<a id='n781' href='#n781'>781</a>
<a id='n782' href='#n782'>782</a>
<a id='n783' href='#n783'>783</a>
<a id='n784' href='#n784'>784</a>
<a id='n785' href='#n785'>785</a>
<a id='n786' href='#n786'>786</a>
<a id='n787' href='#n787'>787</a>
<a id='n788' href='#n788'>788</a>
<a id='n789' href='#n789'>789</a>
<a id='n790' href='#n790'>790</a>
<a id='n791' href='#n791'>791</a>
<a id='n792' href='#n792'>792</a>
<a id='n793' href='#n793'>793</a>
<a id='n794' href='#n794'>794</a>
<a id='n795' href='#n795'>795</a>
<a id='n796' href='#n796'>796</a>
<a id='n797' href='#n797'>797</a>
<a id='n798' href='#n798'>798</a>
<a id='n799' href='#n799'>799</a>
<a id='n800' href='#n800'>800</a>
<a id='n801' href='#n801'>801</a>
<a id='n802' href='#n802'>802</a>
<a id='n803' href='#n803'>803</a>
<a id='n804' href='#n804'>804</a>
<a id='n805' href='#n805'>805</a>
<a id='n806' href='#n806'>806</a>
<a id='n807' href='#n807'>807</a>
<a id='n808' href='#n808'>808</a>
<a id='n809' href='#n809'>809</a>
<a id='n810' href='#n810'>810</a>
<a id='n811' href='#n811'>811</a>
<a id='n812' href='#n812'>812</a>
<a id='n813' href='#n813'>813</a>
<a id='n814' href='#n814'>814</a>
<a id='n815' href='#n815'>815</a>
<a id='n816' href='#n816'>816</a>
<a id='n817' href='#n817'>817</a>
<a id='n818' href='#n818'>818</a>
<a id='n819' href='#n819'>819</a>
<a id='n820' href='#n820'>820</a>
<a id='n821' href='#n821'>821</a>
<a id='n822' href='#n822'>822</a>
<a id='n823' href='#n823'>823</a>
<a id='n824' href='#n824'>824</a>
<a id='n825' href='#n825'>825</a>
<a id='n826' href='#n826'>826</a>
<a id='n827' href='#n827'>827</a>
<a id='n828' href='#n828'>828</a>
<a id='n829' href='#n829'>829</a>
<a id='n830' href='#n830'>830</a>
<a id='n831' href='#n831'>831</a>
<a id='n832' href='#n832'>832</a>
<a id='n833' href='#n833'>833</a>
<a id='n834' href='#n834'>834</a>
<a id='n835' href='#n835'>835</a>
<a id='n836' href='#n836'>836</a>
<a id='n837' href='#n837'>837</a>
<a id='n838' href='#n838'>838</a>
<a id='n839' href='#n839'>839</a>
<a id='n840' href='#n840'>840</a>
<a id='n841' href='#n841'>841</a>
<a id='n842' href='#n842'>842</a>
<a id='n843' href='#n843'>843</a>
<a id='n844' href='#n844'>844</a>
<a id='n845' href='#n845'>845</a>
<a id='n846' href='#n846'>846</a>
<a id='n847' href='#n847'>847</a>
<a id='n848' href='#n848'>848</a>
<a id='n849' href='#n849'>849</a>
<a id='n850' href='#n850'>850</a>
<a id='n851' href='#n851'>851</a>
<a id='n852' href='#n852'>852</a>
<a id='n853' href='#n853'>853</a>
<a id='n854' href='#n854'>854</a>
<a id='n855' href='#n855'>855</a>
<a id='n856' href='#n856'>856</a>
<a id='n857' href='#n857'>857</a>
<a id='n858' href='#n858'>858</a>
<a id='n859' href='#n859'>859</a>
<a id='n860' href='#n860'>860</a>
<a id='n861' href='#n861'>861</a>
<a id='n862' href='#n862'>862</a>
<a id='n863' href='#n863'>863</a>
<a id='n864' href='#n864'>864</a>
<a id='n865' href='#n865'>865</a>
<a id='n866' href='#n866'>866</a>
<a id='n867' href='#n867'>867</a>
<a id='n868' href='#n868'>868</a>
<a id='n869' href='#n869'>869</a>
<a id='n870' href='#n870'>870</a>
<a id='n871' href='#n871'>871</a>
<a id='n872' href='#n872'>872</a>
<a id='n873' href='#n873'>873</a>
<a id='n874' href='#n874'>874</a>
<a id='n875' href='#n875'>875</a>
<a id='n876' href='#n876'>876</a>
<a id='n877' href='#n877'>877</a>
<a id='n878' href='#n878'>878</a>
<a id='n879' href='#n879'>879</a>
<a id='n880' href='#n880'>880</a>
<a id='n881' href='#n881'>881</a>
<a id='n882' href='#n882'>882</a>
<a id='n883' href='#n883'>883</a>
<a id='n884' href='#n884'>884</a>
<a id='n885' href='#n885'>885</a>
<a id='n886' href='#n886'>886</a>
<a id='n887' href='#n887'>887</a>
<a id='n888' href='#n888'>888</a>
<a id='n889' href='#n889'>889</a>
<a id='n890' href='#n890'>890</a>
<a id='n891' href='#n891'>891</a>
<a id='n892' href='#n892'>892</a>
<a id='n893' href='#n893'>893</a>
<a id='n894' href='#n894'>894</a>
<a id='n895' href='#n895'>895</a>
<a id='n896' href='#n896'>896</a>
<a id='n897' href='#n897'>897</a>
<a id='n898' href='#n898'>898</a>
<a id='n899' href='#n899'>899</a>
<a id='n900' href='#n900'>900</a>
<a id='n901' href='#n901'>901</a>
<a id='n902' href='#n902'>902</a>
<a id='n903' href='#n903'>903</a>
<a id='n904' href='#n904'>904</a>
<a id='n905' href='#n905'>905</a>
<a id='n906' href='#n906'>906</a>
<a id='n907' href='#n907'>907</a>
<a id='n908' href='#n908'>908</a>
<a id='n909' href='#n909'>909</a>
<a id='n910' href='#n910'>910</a>
<a id='n911' href='#n911'>911</a>
<a id='n912' href='#n912'>912</a>
<a id='n913' href='#n913'>913</a>
<a id='n914' href='#n914'>914</a>
<a id='n915' href='#n915'>915</a>
<a id='n916' href='#n916'>916</a>
<a id='n917' href='#n917'>917</a>
<a id='n918' href='#n918'>918</a>
<a id='n919' href='#n919'>919</a>
<a id='n920' href='#n920'>920</a>
<a id='n921' href='#n921'>921</a>
<a id='n922' href='#n922'>922</a>
<a id='n923' href='#n923'>923</a>
<a id='n924' href='#n924'>924</a>
<a id='n925' href='#n925'>925</a>
<a id='n926' href='#n926'>926</a>
<a id='n927' href='#n927'>927</a>
<a id='n928' href='#n928'>928</a>
<a id='n929' href='#n929'>929</a>
<a id='n930' href='#n930'>930</a>
<a id='n931' href='#n931'>931</a>
<a id='n932' href='#n932'>932</a>
<a id='n933' href='#n933'>933</a>
<a id='n934' href='#n934'>934</a>
<a id='n935' href='#n935'>935</a>
<a id='n936' href='#n936'>936</a>
<a id='n937' href='#n937'>937</a>
<a id='n938' href='#n938'>938</a>
<a id='n939' href='#n939'>939</a>
<a id='n940' href='#n940'>940</a>
<a id='n941' href='#n941'>941</a>
<a id='n942' href='#n942'>942</a>
<a id='n943' href='#n943'>943</a>
<a id='n944' href='#n944'>944</a>
<a id='n945' href='#n945'>945</a>
<a id='n946' href='#n946'>946</a>
<a id='n947' href='#n947'>947</a>
<a id='n948' href='#n948'>948</a>
<a id='n949' href='#n949'>949</a>
<a id='n950' href='#n950'>950</a>
<a id='n951' href='#n951'>951</a>
<a id='n952' href='#n952'>952</a>
<a id='n953' href='#n953'>953</a>
<a id='n954' href='#n954'>954</a>
<a id='n955' href='#n955'>955</a>
<a id='n956' href='#n956'>956</a>
<a id='n957' href='#n957'>957</a>
<a id='n958' href='#n958'>958</a>
<a id='n959' href='#n959'>959</a>
<a id='n960' href='#n960'>960</a>
<a id='n961' href='#n961'>961</a>
<a id='n962' href='#n962'>962</a>
<a id='n963' href='#n963'>963</a>
<a id='n964' href='#n964'>964</a>
<a id='n965' href='#n965'>965</a>
<a id='n966' href='#n966'>966</a>
<a id='n967' href='#n967'>967</a>
<a id='n968' href='#n968'>968</a>
<a id='n969' href='#n969'>969</a>
<a id='n970' href='#n970'>970</a>
<a id='n971' href='#n971'>971</a>
<a id='n972' href='#n972'>972</a>
<a id='n973' href='#n973'>973</a>
<a id='n974' href='#n974'>974</a>
<a id='n975' href='#n975'>975</a>
<a id='n976' href='#n976'>976</a>
<a id='n977' href='#n977'>977</a>
<a id='n978' href='#n978'>978</a>
<a id='n979' href='#n979'>979</a>
<a id='n980' href='#n980'>980</a>
<a id='n981' href='#n981'>981</a>
<a id='n982' href='#n982'>982</a>
<a id='n983' href='#n983'>983</a>
<a id='n984' href='#n984'>984</a>
<a id='n985' href='#n985'>985</a>
<a id='n986' href='#n986'>986</a>
<a id='n987' href='#n987'>987</a>
<a id='n988' href='#n988'>988</a>
<a id='n989' href='#n989'>989</a>
<a id='n990' href='#n990'>990</a>
<a id='n991' href='#n991'>991</a>
<a id='n992' href='#n992'>992</a>
<a id='n993' href='#n993'>993</a>
<a id='n994' href='#n994'>994</a>
<a id='n995' href='#n995'>995</a>
<a id='n996' href='#n996'>996</a>
<a id='n997' href='#n997'>997</a>
<a id='n998' href='#n998'>998</a>
<a id='n999' href='#n999'>999</a>
<a id='n1000' href='#n1000'>1000</a>
<a id='n1001' href='#n1001'>1001</a>
<a id='n1002' href='#n1002'>1002</a>
<a id='n1003' href='#n1003'>1003</a>
<a id='n1004' href='#n1004'>1004</a>
<a id='n1005' href='#n1005'>1005</a>
<a id='n1006' href='#n1006'>1006</a>
<a id='n1007' href='#n1007'>1007</a>
<a id='n1008' href='#n1008'>1008</a>
<a id='n1009' href='#n1009'>1009</a>
<a id='n1010' href='#n1010'>1010</a>
<a id='n1011' href='#n1011'>1011</a>
<a id='n1012' href='#n1012'>1012</a>
<a id='n1013' href='#n1013'>1013</a>
<a id='n1014' href='#n1014'>1014</a>
<a id='n1015' href='#n1015'>1015</a>
<a id='n1016' href='#n1016'>1016</a>
<a id='n1017' href='#n1017'>1017</a>
<a id='n1018' href='#n1018'>1018</a>
<a id='n1019' href='#n1019'>1019</a>
<a id='n1020' href='#n1020'>1020</a>
<a id='n1021' href='#n1021'>1021</a>
<a id='n1022' href='#n1022'>1022</a>
<a id='n1023' href='#n1023'>1023</a>
<a id='n1024' href='#n1024'>1024</a>
<a id='n1025' href='#n1025'>1025</a>
<a id='n1026' href='#n1026'>1026</a>
<a id='n1027' href='#n1027'>1027</a>
<a id='n1028' href='#n1028'>1028</a>
<a id='n1029' href='#n1029'>1029</a>
<a id='n1030' href='#n1030'>1030</a>
<a id='n1031' href='#n1031'>1031</a>
<a id='n1032' href='#n1032'>1032</a>
<a id='n1033' href='#n1033'>1033</a>
<a id='n1034' href='#n1034'>1034</a>
<a id='n1035' href='#n1035'>1035</a>
<a id='n1036' href='#n1036'>1036</a>
<a id='n1037' href='#n1037'>1037</a>
<a id='n1038' href='#n1038'>1038</a>
<a id='n1039' href='#n1039'>1039</a>
<a id='n1040' href='#n1040'>1040</a>
<a id='n1041' href='#n1041'>1041</a>
<a id='n1042' href='#n1042'>1042</a>
<a id='n1043' href='#n1043'>1043</a>
<a id='n1044' href='#n1044'>1044</a>
<a id='n1045' href='#n1045'>1045</a>
<a id='n1046' href='#n1046'>1046</a>
<a id='n1047' href='#n1047'>1047</a>
<a id='n1048' href='#n1048'>1048</a>
<a id='n1049' href='#n1049'>1049</a>
<a id='n1050' href='#n1050'>1050</a>
<a id='n1051' href='#n1051'>1051</a>
<a id='n1052' href='#n1052'>1052</a>
<a id='n1053' href='#n1053'>1053</a>
<a id='n1054' href='#n1054'>1054</a>
<a id='n1055' href='#n1055'>1055</a>
<a id='n1056' href='#n1056'>1056</a>
<a id='n1057' href='#n1057'>1057</a>
<a id='n1058' href='#n1058'>1058</a>
<a id='n1059' href='#n1059'>1059</a>
<a id='n1060' href='#n1060'>1060</a>
<a id='n1061' href='#n1061'>1061</a>
<a id='n1062' href='#n1062'>1062</a>
<a id='n1063' href='#n1063'>1063</a>
<a id='n1064' href='#n1064'>1064</a>
<a id='n1065' href='#n1065'>1065</a>
<a id='n1066' href='#n1066'>1066</a>
<a id='n1067' href='#n1067'>1067</a>
<a id='n1068' href='#n1068'>1068</a>
<a id='n1069' href='#n1069'>1069</a>
<a id='n1070' href='#n1070'>1070</a>
<a id='n1071' href='#n1071'>1071</a>
<a id='n1072' href='#n1072'>1072</a>
<a id='n1073' href='#n1073'>1073</a>
<a id='n1074' href='#n1074'>1074</a>
<a id='n1075' href='#n1075'>1075</a>
<a id='n1076' href='#n1076'>1076</a>
<a id='n1077' href='#n1077'>1077</a>
<a id='n1078' href='#n1078'>1078</a>
<a id='n1079' href='#n1079'>1079</a>
<a id='n1080' href='#n1080'>1080</a>
<a id='n1081' href='#n1081'>1081</a>
<a id='n1082' href='#n1082'>1082</a>
<a id='n1083' href='#n1083'>1083</a>
<a id='n1084' href='#n1084'>1084</a>
<a id='n1085' href='#n1085'>1085</a>
<a id='n1086' href='#n1086'>1086</a>
<a id='n1087' href='#n1087'>1087</a>
<a id='n1088' href='#n1088'>1088</a>
<a id='n1089' href='#n1089'>1089</a>
<a id='n1090' href='#n1090'>1090</a>
<a id='n1091' href='#n1091'>1091</a>
<a id='n1092' href='#n1092'>1092</a>
<a id='n1093' href='#n1093'>1093</a>
<a id='n1094' href='#n1094'>1094</a>
<a id='n1095' href='#n1095'>1095</a>
<a id='n1096' href='#n1096'>1096</a>
<a id='n1097' href='#n1097'>1097</a>
<a id='n1098' href='#n1098'>1098</a>
<a id='n1099' href='#n1099'>1099</a>
<a id='n1100' href='#n1100'>1100</a>
<a id='n1101' href='#n1101'>1101</a>
<a id='n1102' href='#n1102'>1102</a>
<a id='n1103' href='#n1103'>1103</a>
<a id='n1104' href='#n1104'>1104</a>
<a id='n1105' href='#n1105'>1105</a>
<a id='n1106' href='#n1106'>1106</a>
<a id='n1107' href='#n1107'>1107</a>
<a id='n1108' href='#n1108'>1108</a>
<a id='n1109' href='#n1109'>1109</a>
<a id='n1110' href='#n1110'>1110</a>
<a id='n1111' href='#n1111'>1111</a>
<a id='n1112' href='#n1112'>1112</a>
<a id='n1113' href='#n1113'>1113</a>
<a id='n1114' href='#n1114'>1114</a>
<a id='n1115' href='#n1115'>1115</a>
<a id='n1116' href='#n1116'>1116</a>
<a id='n1117' href='#n1117'>1117</a>
<a id='n1118' href='#n1118'>1118</a>
<a id='n1119' href='#n1119'>1119</a>
<a id='n1120' href='#n1120'>1120</a>
<a id='n1121' href='#n1121'>1121</a>
<a id='n1122' href='#n1122'>1122</a>
<a id='n1123' href='#n1123'>1123</a>
<a id='n1124' href='#n1124'>1124</a>
<a id='n1125' href='#n1125'>1125</a>
<a id='n1126' href='#n1126'>1126</a>
<a id='n1127' href='#n1127'>1127</a>
<a id='n1128' href='#n1128'>1128</a>
<a id='n1129' href='#n1129'>1129</a>
<a id='n1130' href='#n1130'>1130</a>
<a id='n1131' href='#n1131'>1131</a>
<a id='n1132' href='#n1132'>1132</a>
<a id='n1133' href='#n1133'>1133</a>
<a id='n1134' href='#n1134'>1134</a>
<a id='n1135' href='#n1135'>1135</a>
<a id='n1136' href='#n1136'>1136</a>
<a id='n1137' href='#n1137'>1137</a>
<a id='n1138' href='#n1138'>1138</a>
<a id='n1139' href='#n1139'>1139</a>
<a id='n1140' href='#n1140'>1140</a>
<a id='n1141' href='#n1141'>1141</a>
<a id='n1142' href='#n1142'>1142</a>
<a id='n1143' href='#n1143'>1143</a>
<a id='n1144' href='#n1144'>1144</a>
<a id='n1145' href='#n1145'>1145</a>
<a id='n1146' href='#n1146'>1146</a>
<a id='n1147' href='#n1147'>1147</a>
<a id='n1148' href='#n1148'>1148</a>
<a id='n1149' href='#n1149'>1149</a>
<a id='n1150' href='#n1150'>1150</a>
<a id='n1151' href='#n1151'>1151</a>
<a id='n1152' href='#n1152'>1152</a>
<a id='n1153' href='#n1153'>1153</a>
<a id='n1154' href='#n1154'>1154</a>
<a id='n1155' href='#n1155'>1155</a>
<a id='n1156' href='#n1156'>1156</a>
<a id='n1157' href='#n1157'>1157</a>
<a id='n1158' href='#n1158'>1158</a>
<a id='n1159' href='#n1159'>1159</a>
<a id='n1160' href='#n1160'>1160</a>
<a id='n1161' href='#n1161'>1161</a>
<a id='n1162' href='#n1162'>1162</a>
<a id='n1163' href='#n1163'>1163</a>
<a id='n1164' href='#n1164'>1164</a>
<a id='n1165' href='#n1165'>1165</a>
<a id='n1166' href='#n1166'>1166</a>
<a id='n1167' href='#n1167'>1167</a>
<a id='n1168' href='#n1168'>1168</a>
<a id='n1169' href='#n1169'>1169</a>
<a id='n1170' href='#n1170'>1170</a>
<a id='n1171' href='#n1171'>1171</a>
<a id='n1172' href='#n1172'>1172</a>
<a id='n1173' href='#n1173'>1173</a>
<a id='n1174' href='#n1174'>1174</a>
<a id='n1175' href='#n1175'>1175</a>
<a id='n1176' href='#n1176'>1176</a>
<a id='n1177' href='#n1177'>1177</a>
<a id='n1178' href='#n1178'>1178</a>
<a id='n1179' href='#n1179'>1179</a>
<a id='n1180' href='#n1180'>1180</a>
<a id='n1181' href='#n1181'>1181</a>
<a id='n1182' href='#n1182'>1182</a>
<a id='n1183' href='#n1183'>1183</a>
<a id='n1184' href='#n1184'>1184</a>
<a id='n1185' href='#n1185'>1185</a>
<a id='n1186' href='#n1186'>1186</a>
<a id='n1187' href='#n1187'>1187</a>
<a id='n1188' href='#n1188'>1188</a>
<a id='n1189' href='#n1189'>1189</a>
<a id='n1190' href='#n1190'>1190</a>
<a id='n1191' href='#n1191'>1191</a>
<a id='n1192' href='#n1192'>1192</a>
<a id='n1193' href='#n1193'>1193</a>
<a id='n1194' href='#n1194'>1194</a>
<a id='n1195' href='#n1195'>1195</a>
<a id='n1196' href='#n1196'>1196</a>
<a id='n1197' href='#n1197'>1197</a>
<a id='n1198' href='#n1198'>1198</a>
<a id='n1199' href='#n1199'>1199</a>
<a id='n1200' href='#n1200'>1200</a>
<a id='n1201' href='#n1201'>1201</a>
<a id='n1202' href='#n1202'>1202</a>
<a id='n1203' href='#n1203'>1203</a>
<a id='n1204' href='#n1204'>1204</a>
<a id='n1205' href='#n1205'>1205</a>
<a id='n1206' href='#n1206'>1206</a>
<a id='n1207' href='#n1207'>1207</a>
<a id='n1208' href='#n1208'>1208</a>
<a id='n1209' href='#n1209'>1209</a>
<a id='n1210' href='#n1210'>1210</a>
<a id='n1211' href='#n1211'>1211</a>
<a id='n1212' href='#n1212'>1212</a>
<a id='n1213' href='#n1213'>1213</a>
<a id='n1214' href='#n1214'>1214</a>
<a id='n1215' href='#n1215'>1215</a>
<a id='n1216' href='#n1216'>1216</a>
<a id='n1217' href='#n1217'>1217</a>
<a id='n1218' href='#n1218'>1218</a>
<a id='n1219' href='#n1219'>1219</a>
<a id='n1220' href='#n1220'>1220</a>
<a id='n1221' href='#n1221'>1221</a>
<a id='n1222' href='#n1222'>1222</a>
<a id='n1223' href='#n1223'>1223</a>
<a id='n1224' href='#n1224'>1224</a>
<a id='n1225' href='#n1225'>1225</a>
<a id='n1226' href='#n1226'>1226</a>
<a id='n1227' href='#n1227'>1227</a>
<a id='n1228' href='#n1228'>1228</a>
<a id='n1229' href='#n1229'>1229</a>
<a id='n1230' href='#n1230'>1230</a>
<a id='n1231' href='#n1231'>1231</a>
<a id='n1232' href='#n1232'>1232</a>
<a id='n1233' href='#n1233'>1233</a>
<a id='n1234' href='#n1234'>1234</a>
<a id='n1235' href='#n1235'>1235</a>
<a id='n1236' href='#n1236'>1236</a>
<a id='n1237' href='#n1237'>1237</a>
<a id='n1238' href='#n1238'>1238</a>
<a id='n1239' href='#n1239'>1239</a>
<a id='n1240' href='#n1240'>1240</a>
<a id='n1241' href='#n1241'>1241</a>
<a id='n1242' href='#n1242'>1242</a>
<a id='n1243' href='#n1243'>1243</a>
<a id='n1244' href='#n1244'>1244</a>
<a id='n1245' href='#n1245'>1245</a>
<a id='n1246' href='#n1246'>1246</a>
<a id='n1247' href='#n1247'>1247</a>
<a id='n1248' href='#n1248'>1248</a>
<a id='n1249' href='#n1249'>1249</a>
<a id='n1250' href='#n1250'>1250</a>
<a id='n1251' href='#n1251'>1251</a>
<a id='n1252' href='#n1252'>1252</a>
<a id='n1253' href='#n1253'>1253</a>
<a id='n1254' href='#n1254'>1254</a>
<a id='n1255' href='#n1255'>1255</a>
<a id='n1256' href='#n1256'>1256</a>
<a id='n1257' href='#n1257'>1257</a>
<a id='n1258' href='#n1258'>1258</a>
<a id='n1259' href='#n1259'>1259</a>
<a id='n1260' href='#n1260'>1260</a>
<a id='n1261' href='#n1261'>1261</a>
<a id='n1262' href='#n1262'>1262</a>
<a id='n1263' href='#n1263'>1263</a>
<a id='n1264' href='#n1264'>1264</a>
<a id='n1265' href='#n1265'>1265</a>
<a id='n1266' href='#n1266'>1266</a>
<a id='n1267' href='#n1267'>1267</a>
<a id='n1268' href='#n1268'>1268</a>
<a id='n1269' href='#n1269'>1269</a>
<a id='n1270' href='#n1270'>1270</a>
<a id='n1271' href='#n1271'>1271</a>
<a id='n1272' href='#n1272'>1272</a>
<a id='n1273' href='#n1273'>1273</a>
<a id='n1274' href='#n1274'>1274</a>
<a id='n1275' href='#n1275'>1275</a>
<a id='n1276' href='#n1276'>1276</a>
<a id='n1277' href='#n1277'>1277</a>
<a id='n1278' href='#n1278'>1278</a>
<a id='n1279' href='#n1279'>1279</a>
<a id='n1280' href='#n1280'>1280</a>
<a id='n1281' href='#n1281'>1281</a>
<a id='n1282' href='#n1282'>1282</a>
<a id='n1283' href='#n1283'>1283</a>
<a id='n1284' href='#n1284'>1284</a>
<a id='n1285' href='#n1285'>1285</a>
<a id='n1286' href='#n1286'>1286</a>
<a id='n1287' href='#n1287'>1287</a>
<a id='n1288' href='#n1288'>1288</a>
<a id='n1289' href='#n1289'>1289</a>
<a id='n1290' href='#n1290'>1290</a>
<a id='n1291' href='#n1291'>1291</a>
<a id='n1292' href='#n1292'>1292</a>
<a id='n1293' href='#n1293'>1293</a>
<a id='n1294' href='#n1294'>1294</a>
<a id='n1295' href='#n1295'>1295</a>
<a id='n1296' href='#n1296'>1296</a>
<a id='n1297' href='#n1297'>1297</a>
<a id='n1298' href='#n1298'>1298</a>
<a id='n1299' href='#n1299'>1299</a>
<a id='n1300' href='#n1300'>1300</a>
<a id='n1301' href='#n1301'>1301</a>
<a id='n1302' href='#n1302'>1302</a>
<a id='n1303' href='#n1303'>1303</a>
<a id='n1304' href='#n1304'>1304</a>
<a id='n1305' href='#n1305'>1305</a>
<a id='n1306' href='#n1306'>1306</a>
<a id='n1307' href='#n1307'>1307</a>
<a id='n1308' href='#n1308'>1308</a>
<a id='n1309' href='#n1309'>1309</a>
<a id='n1310' href='#n1310'>1310</a>
<a id='n1311' href='#n1311'>1311</a>
<a id='n1312' href='#n1312'>1312</a>
<a id='n1313' href='#n1313'>1313</a>
<a id='n1314' href='#n1314'>1314</a>
<a id='n1315' href='#n1315'>1315</a>
<a id='n1316' href='#n1316'>1316</a>
<a id='n1317' href='#n1317'>1317</a>
<a id='n1318' href='#n1318'>1318</a>
<a id='n1319' href='#n1319'>1319</a>
<a id='n1320' href='#n1320'>1320</a>
<a id='n1321' href='#n1321'>1321</a>
<a id='n1322' href='#n1322'>1322</a>
<a id='n1323' href='#n1323'>1323</a>
<a id='n1324' href='#n1324'>1324</a>
<a id='n1325' href='#n1325'>1325</a>
<a id='n1326' href='#n1326'>1326</a>
<a id='n1327' href='#n1327'>1327</a>
<a id='n1328' href='#n1328'>1328</a>
<a id='n1329' href='#n1329'>1329</a>
<a id='n1330' href='#n1330'>1330</a>
<a id='n1331' href='#n1331'>1331</a>
<a id='n1332' href='#n1332'>1332</a>
<a id='n1333' href='#n1333'>1333</a>
<a id='n1334' href='#n1334'>1334</a>
<a id='n1335' href='#n1335'>1335</a>
<a id='n1336' href='#n1336'>1336</a>
<a id='n1337' href='#n1337'>1337</a>
<a id='n1338' href='#n1338'>1338</a>
<a id='n1339' href='#n1339'>1339</a>
<a id='n1340' href='#n1340'>1340</a>
<a id='n1341' href='#n1341'>1341</a>
<a id='n1342' href='#n1342'>1342</a>
<a id='n1343' href='#n1343'>1343</a>
<a id='n1344' href='#n1344'>1344</a>
<a id='n1345' href='#n1345'>1345</a>
<a id='n1346' href='#n1346'>1346</a>
<a id='n1347' href='#n1347'>1347</a>
<a id='n1348' href='#n1348'>1348</a>
<a id='n1349' href='#n1349'>1349</a>
<a id='n1350' href='#n1350'>1350</a>
<a id='n1351' href='#n1351'>1351</a>
<a id='n1352' href='#n1352'>1352</a>
<a id='n1353' href='#n1353'>1353</a>
<a id='n1354' href='#n1354'>1354</a>
<a id='n1355' href='#n1355'>1355</a>
<a id='n1356' href='#n1356'>1356</a>
<a id='n1357' href='#n1357'>1357</a>
<a id='n1358' href='#n1358'>1358</a>
<a id='n1359' href='#n1359'>1359</a>
<a id='n1360' href='#n1360'>1360</a>
<a id='n1361' href='#n1361'>1361</a>
<a id='n1362' href='#n1362'>1362</a>
<a id='n1363' href='#n1363'>1363</a>
<a id='n1364' href='#n1364'>1364</a>
<a id='n1365' href='#n1365'>1365</a>
<a id='n1366' href='#n1366'>1366</a>
<a id='n1367' href='#n1367'>1367</a>
<a id='n1368' href='#n1368'>1368</a>
<a id='n1369' href='#n1369'>1369</a>
<a id='n1370' href='#n1370'>1370</a>
<a id='n1371' href='#n1371'>1371</a>
<a id='n1372' href='#n1372'>1372</a>
<a id='n1373' href='#n1373'>1373</a>
<a id='n1374' href='#n1374'>1374</a>
<a id='n1375' href='#n1375'>1375</a>
<a id='n1376' href='#n1376'>1376</a>
<a id='n1377' href='#n1377'>1377</a>
<a id='n1378' href='#n1378'>1378</a>
<a id='n1379' href='#n1379'>1379</a>
<a id='n1380' href='#n1380'>1380</a>
<a id='n1381' href='#n1381'>1381</a>
<a id='n1382' href='#n1382'>1382</a>
<a id='n1383' href='#n1383'>1383</a>
<a id='n1384' href='#n1384'>1384</a>
<a id='n1385' href='#n1385'>1385</a>
<a id='n1386' href='#n1386'>1386</a>
<a id='n1387' href='#n1387'>1387</a>
<a id='n1388' href='#n1388'>1388</a>
<a id='n1389' href='#n1389'>1389</a>
<a id='n1390' href='#n1390'>1390</a>
<a id='n1391' href='#n1391'>1391</a>
<a id='n1392' href='#n1392'>1392</a>
<a id='n1393' href='#n1393'>1393</a>
<a id='n1394' href='#n1394'>1394</a>
<a id='n1395' href='#n1395'>1395</a>
<a id='n1396' href='#n1396'>1396</a>
<a id='n1397' href='#n1397'>1397</a>
<a id='n1398' href='#n1398'>1398</a>
<a id='n1399' href='#n1399'>1399</a>
<a id='n1400' href='#n1400'>1400</a>
<a id='n1401' href='#n1401'>1401</a>
<a id='n1402' href='#n1402'>1402</a>
<a id='n1403' href='#n1403'>1403</a>
<a id='n1404' href='#n1404'>1404</a>
<a id='n1405' href='#n1405'>1405</a>
<a id='n1406' href='#n1406'>1406</a>
<a id='n1407' href='#n1407'>1407</a>
<a id='n1408' href='#n1408'>1408</a>
<a id='n1409' href='#n1409'>1409</a>
<a id='n1410' href='#n1410'>1410</a>
<a id='n1411' href='#n1411'>1411</a>
<a id='n1412' href='#n1412'>1412</a>
<a id='n1413' href='#n1413'>1413</a>
<a id='n1414' href='#n1414'>1414</a>
<a id='n1415' href='#n1415'>1415</a>
<a id='n1416' href='#n1416'>1416</a>
<a id='n1417' href='#n1417'>1417</a>
<a id='n1418' href='#n1418'>1418</a>
<a id='n1419' href='#n1419'>1419</a>
<a id='n1420' href='#n1420'>1420</a>
<a id='n1421' href='#n1421'>1421</a>
<a id='n1422' href='#n1422'>1422</a>
<a id='n1423' href='#n1423'>1423</a>
<a id='n1424' href='#n1424'>1424</a>
<a id='n1425' href='#n1425'>1425</a>
<a id='n1426' href='#n1426'>1426</a>
<a id='n1427' href='#n1427'>1427</a>
<a id='n1428' href='#n1428'>1428</a>
<a id='n1429' href='#n1429'>1429</a>
<a id='n1430' href='#n1430'>1430</a>
<a id='n1431' href='#n1431'>1431</a>
<a id='n1432' href='#n1432'>1432</a>
<a id='n1433' href='#n1433'>1433</a>
<a id='n1434' href='#n1434'>1434</a>
<a id='n1435' href='#n1435'>1435</a>
<a id='n1436' href='#n1436'>1436</a>
<a id='n1437' href='#n1437'>1437</a>
<a id='n1438' href='#n1438'>1438</a>
<a id='n1439' href='#n1439'>1439</a>
<a id='n1440' href='#n1440'>1440</a>
<a id='n1441' href='#n1441'>1441</a>
<a id='n1442' href='#n1442'>1442</a>
<a id='n1443' href='#n1443'>1443</a>
<a id='n1444' href='#n1444'>1444</a>
<a id='n1445' href='#n1445'>1445</a>
<a id='n1446' href='#n1446'>1446</a>
<a id='n1447' href='#n1447'>1447</a>
<a id='n1448' href='#n1448'>1448</a>
<a id='n1449' href='#n1449'>1449</a>
<a id='n1450' href='#n1450'>1450</a>
<a id='n1451' href='#n1451'>1451</a>
<a id='n1452' href='#n1452'>1452</a>
<a id='n1453' href='#n1453'>1453</a>
<a id='n1454' href='#n1454'>1454</a>
<a id='n1455' href='#n1455'>1455</a>
<a id='n1456' href='#n1456'>1456</a>
<a id='n1457' href='#n1457'>1457</a>
<a id='n1458' href='#n1458'>1458</a>
<a id='n1459' href='#n1459'>1459</a>
<a id='n1460' href='#n1460'>1460</a>
<a id='n1461' href='#n1461'>1461</a>
<a id='n1462' href='#n1462'>1462</a>
<a id='n1463' href='#n1463'>1463</a>
<a id='n1464' href='#n1464'>1464</a>
<a id='n1465' href='#n1465'>1465</a>
<a id='n1466' href='#n1466'>1466</a>
<a id='n1467' href='#n1467'>1467</a>
<a id='n1468' href='#n1468'>1468</a>
<a id='n1469' href='#n1469'>1469</a>
<a id='n1470' href='#n1470'>1470</a>
<a id='n1471' href='#n1471'>1471</a>
<a id='n1472' href='#n1472'>1472</a>
<a id='n1473' href='#n1473'>1473</a>
<a id='n1474' href='#n1474'>1474</a>
<a id='n1475' href='#n1475'>1475</a>
<a id='n1476' href='#n1476'>1476</a>
<a id='n1477' href='#n1477'>1477</a>
<a id='n1478' href='#n1478'>1478</a>
<a id='n1479' href='#n1479'>1479</a>
<a id='n1480' href='#n1480'>1480</a>
<a id='n1481' href='#n1481'>1481</a>
<a id='n1482' href='#n1482'>1482</a>
<a id='n1483' href='#n1483'>1483</a>
<a id='n1484' href='#n1484'>1484</a>
<a id='n1485' href='#n1485'>1485</a>
<a id='n1486' href='#n1486'>1486</a>
<a id='n1487' href='#n1487'>1487</a>
<a id='n1488' href='#n1488'>1488</a>
<a id='n1489' href='#n1489'>1489</a>
<a id='n1490' href='#n1490'>1490</a>
<a id='n1491' href='#n1491'>1491</a>
<a id='n1492' href='#n1492'>1492</a>
<a id='n1493' href='#n1493'>1493</a>
<a id='n1494' href='#n1494'>1494</a>
<a id='n1495' href='#n1495'>1495</a>
<a id='n1496' href='#n1496'>1496</a>
<a id='n1497' href='#n1497'>1497</a>
<a id='n1498' href='#n1498'>1498</a>
<a id='n1499' href='#n1499'>1499</a>
<a id='n1500' href='#n1500'>1500</a>
<a id='n1501' href='#n1501'>1501</a>
<a id='n1502' href='#n1502'>1502</a>
<a id='n1503' href='#n1503'>1503</a>
<a id='n1504' href='#n1504'>1504</a>
<a id='n1505' href='#n1505'>1505</a>
<a id='n1506' href='#n1506'>1506</a>
<a id='n1507' href='#n1507'>1507</a>
<a id='n1508' href='#n1508'>1508</a>
<a id='n1509' href='#n1509'>1509</a>
<a id='n1510' href='#n1510'>1510</a>
<a id='n1511' href='#n1511'>1511</a>
<a id='n1512' href='#n1512'>1512</a>
<a id='n1513' href='#n1513'>1513</a>
<a id='n1514' href='#n1514'>1514</a>
<a id='n1515' href='#n1515'>1515</a>
<a id='n1516' href='#n1516'>1516</a>
<a id='n1517' href='#n1517'>1517</a>
<a id='n1518' href='#n1518'>1518</a>
<a id='n1519' href='#n1519'>1519</a>
<a id='n1520' href='#n1520'>1520</a>
<a id='n1521' href='#n1521'>1521</a>
<a id='n1522' href='#n1522'>1522</a>
<a id='n1523' href='#n1523'>1523</a>
<a id='n1524' href='#n1524'>1524</a>
<a id='n1525' href='#n1525'>1525</a>
<a id='n1526' href='#n1526'>1526</a>
<a id='n1527' href='#n1527'>1527</a>
<a id='n1528' href='#n1528'>1528</a>
<a id='n1529' href='#n1529'>1529</a>
<a id='n1530' href='#n1530'>1530</a>
<a id='n1531' href='#n1531'>1531</a>
<a id='n1532' href='#n1532'>1532</a>
<a id='n1533' href='#n1533'>1533</a>
<a id='n1534' href='#n1534'>1534</a>
<a id='n1535' href='#n1535'>1535</a>
<a id='n1536' href='#n1536'>1536</a>
<a id='n1537' href='#n1537'>1537</a>
<a id='n1538' href='#n1538'>1538</a>
<a id='n1539' href='#n1539'>1539</a>
<a id='n1540' href='#n1540'>1540</a>
<a id='n1541' href='#n1541'>1541</a>
<a id='n1542' href='#n1542'>1542</a>
<a id='n1543' href='#n1543'>1543</a>
<a id='n1544' href='#n1544'>1544</a>
<a id='n1545' href='#n1545'>1545</a>
<a id='n1546' href='#n1546'>1546</a>
<a id='n1547' href='#n1547'>1547</a>
<a id='n1548' href='#n1548'>1548</a>
<a id='n1549' href='#n1549'>1549</a>
<a id='n1550' href='#n1550'>1550</a>
<a id='n1551' href='#n1551'>1551</a>
<a id='n1552' href='#n1552'>1552</a>
<a id='n1553' href='#n1553'>1553</a>
<a id='n1554' href='#n1554'>1554</a>
<a id='n1555' href='#n1555'>1555</a>
<a id='n1556' href='#n1556'>1556</a>
<a id='n1557' href='#n1557'>1557</a>
<a id='n1558' href='#n1558'>1558</a>
<a id='n1559' href='#n1559'>1559</a>
<a id='n1560' href='#n1560'>1560</a>
<a id='n1561' href='#n1561'>1561</a>
<a id='n1562' href='#n1562'>1562</a>
<a id='n1563' href='#n1563'>1563</a>
<a id='n1564' href='#n1564'>1564</a>
<a id='n1565' href='#n1565'>1565</a>
<a id='n1566' href='#n1566'>1566</a>
<a id='n1567' href='#n1567'>1567</a>
<a id='n1568' href='#n1568'>1568</a>
<a id='n1569' href='#n1569'>1569</a>
<a id='n1570' href='#n1570'>1570</a>
<a id='n1571' href='#n1571'>1571</a>
<a id='n1572' href='#n1572'>1572</a>
<a id='n1573' href='#n1573'>1573</a>
<a id='n1574' href='#n1574'>1574</a>
<a id='n1575' href='#n1575'>1575</a>
<a id='n1576' href='#n1576'>1576</a>
<a id='n1577' href='#n1577'>1577</a>
<a id='n1578' href='#n1578'>1578</a>
<a id='n1579' href='#n1579'>1579</a>
<a id='n1580' href='#n1580'>1580</a>
<a id='n1581' href='#n1581'>1581</a>
<a id='n1582' href='#n1582'>1582</a>
<a id='n1583' href='#n1583'>1583</a>
<a id='n1584' href='#n1584'>1584</a>
<a id='n1585' href='#n1585'>1585</a>
<a id='n1586' href='#n1586'>1586</a>
<a id='n1587' href='#n1587'>1587</a>
<a id='n1588' href='#n1588'>1588</a>
<a id='n1589' href='#n1589'>1589</a>
<a id='n1590' href='#n1590'>1590</a>
<a id='n1591' href='#n1591'>1591</a>
<a id='n1592' href='#n1592'>1592</a>
<a id='n1593' href='#n1593'>1593</a>
<a id='n1594' href='#n1594'>1594</a>
<a id='n1595' href='#n1595'>1595</a>
<a id='n1596' href='#n1596'>1596</a>
<a id='n1597' href='#n1597'>1597</a>
<a id='n1598' href='#n1598'>1598</a>
<a id='n1599' href='#n1599'>1599</a>
<a id='n1600' href='#n1600'>1600</a>
<a id='n1601' href='#n1601'>1601</a>
<a id='n1602' href='#n1602'>1602</a>
<a id='n1603' href='#n1603'>1603</a>
<a id='n1604' href='#n1604'>1604</a>
<a id='n1605' href='#n1605'>1605</a>
<a id='n1606' href='#n1606'>1606</a>
<a id='n1607' href='#n1607'>1607</a>
<a id='n1608' href='#n1608'>1608</a>
<a id='n1609' href='#n1609'>1609</a>
<a id='n1610' href='#n1610'>1610</a>
<a id='n1611' href='#n1611'>1611</a>
<a id='n1612' href='#n1612'>1612</a>
<a id='n1613' href='#n1613'>1613</a>
<a id='n1614' href='#n1614'>1614</a>
<a id='n1615' href='#n1615'>1615</a>
<a id='n1616' href='#n1616'>1616</a>
<a id='n1617' href='#n1617'>1617</a>
<a id='n1618' href='#n1618'>1618</a>
<a id='n1619' href='#n1619'>1619</a>
<a id='n1620' href='#n1620'>1620</a>
<a id='n1621' href='#n1621'>1621</a>
<a id='n1622' href='#n1622'>1622</a>
<a id='n1623' href='#n1623'>1623</a>
<a id='n1624' href='#n1624'>1624</a>
<a id='n1625' href='#n1625'>1625</a>
<a id='n1626' href='#n1626'>1626</a>
<a id='n1627' href='#n1627'>1627</a>
<a id='n1628' href='#n1628'>1628</a>
<a id='n1629' href='#n1629'>1629</a>
<a id='n1630' href='#n1630'>1630</a>
<a id='n1631' href='#n1631'>1631</a>
<a id='n1632' href='#n1632'>1632</a>
<a id='n1633' href='#n1633'>1633</a>
<a id='n1634' href='#n1634'>1634</a>
<a id='n1635' href='#n1635'>1635</a>
<a id='n1636' href='#n1636'>1636</a>
<a id='n1637' href='#n1637'>1637</a>
<a id='n1638' href='#n1638'>1638</a>
<a id='n1639' href='#n1639'>1639</a>
<a id='n1640' href='#n1640'>1640</a>
<a id='n1641' href='#n1641'>1641</a>
<a id='n1642' href='#n1642'>1642</a>
<a id='n1643' href='#n1643'>1643</a>
<a id='n1644' href='#n1644'>1644</a>
<a id='n1645' href='#n1645'>1645</a>
<a id='n1646' href='#n1646'>1646</a>
<a id='n1647' href='#n1647'>1647</a>
<a id='n1648' href='#n1648'>1648</a>
<a id='n1649' href='#n1649'>1649</a>
<a id='n1650' href='#n1650'>1650</a>
<a id='n1651' href='#n1651'>1651</a>
<a id='n1652' href='#n1652'>1652</a>
<a id='n1653' href='#n1653'>1653</a>
<a id='n1654' href='#n1654'>1654</a>
<a id='n1655' href='#n1655'>1655</a>
<a id='n1656' href='#n1656'>1656</a>
<a id='n1657' href='#n1657'>1657</a>
<a id='n1658' href='#n1658'>1658</a>
<a id='n1659' href='#n1659'>1659</a>
<a id='n1660' href='#n1660'>1660</a>
<a id='n1661' href='#n1661'>1661</a>
<a id='n1662' href='#n1662'>1662</a>
<a id='n1663' href='#n1663'>1663</a>
<a id='n1664' href='#n1664'>1664</a>
<a id='n1665' href='#n1665'>1665</a>
<a id='n1666' href='#n1666'>1666</a>
<a id='n1667' href='#n1667'>1667</a>
<a id='n1668' href='#n1668'>1668</a>
<a id='n1669' href='#n1669'>1669</a>
<a id='n1670' href='#n1670'>1670</a>
<a id='n1671' href='#n1671'>1671</a>
<a id='n1672' href='#n1672'>1672</a>
<a id='n1673' href='#n1673'>1673</a>
<a id='n1674' href='#n1674'>1674</a>
<a id='n1675' href='#n1675'>1675</a>
<a id='n1676' href='#n1676'>1676</a>
<a id='n1677' href='#n1677'>1677</a>
<a id='n1678' href='#n1678'>1678</a>
<a id='n1679' href='#n1679'>1679</a>
<a id='n1680' href='#n1680'>1680</a>
<a id='n1681' href='#n1681'>1681</a>
<a id='n1682' href='#n1682'>1682</a>
<a id='n1683' href='#n1683'>1683</a>
<a id='n1684' href='#n1684'>1684</a>
<a id='n1685' href='#n1685'>1685</a>
<a id='n1686' href='#n1686'>1686</a>
<a id='n1687' href='#n1687'>1687</a>
<a id='n1688' href='#n1688'>1688</a>
<a id='n1689' href='#n1689'>1689</a>
<a id='n1690' href='#n1690'>1690</a>
<a id='n1691' href='#n1691'>1691</a>
<a id='n1692' href='#n1692'>1692</a>
<a id='n1693' href='#n1693'>1693</a>
<a id='n1694' href='#n1694'>1694</a>
<a id='n1695' href='#n1695'>1695</a>
<a id='n1696' href='#n1696'>1696</a>
<a id='n1697' href='#n1697'>1697</a>
<a id='n1698' href='#n1698'>1698</a>
<a id='n1699' href='#n1699'>1699</a>
<a id='n1700' href='#n1700'>1700</a>
<a id='n1701' href='#n1701'>1701</a>
<a id='n1702' href='#n1702'>1702</a>
<a id='n1703' href='#n1703'>1703</a>
<a id='n1704' href='#n1704'>1704</a>
<a id='n1705' href='#n1705'>1705</a>
</pre></td>
<td class='lines'><pre><code><span class="hl slc">;;; git.el --- A user interface for git</span>

<span class="hl slc">;; Copyright (C) 2005, 2006, 2007, 2008, 2009 Alexandre Julliard &lt;julliard&#64;winehq.org&gt;</span>

<span class="hl slc">;; Version: 1.0</span>

<span class="hl slc">;; This program is free software; you can redistribute it and/or</span>
<span class="hl slc">;; modify it under the terms of the GNU General Public License as</span>
<span class="hl slc">;; published by the Free Software Foundation; either version 2 of</span>
<span class="hl slc">;; the License, or (at your option) any later version.</span>
<span class="hl slc">;;</span>
<span class="hl slc">;; This program is distributed in the hope that it will be</span>
<span class="hl slc">;; useful, but WITHOUT ANY WARRANTY; without even the implied</span>
<span class="hl slc">;; warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR</span>
<span class="hl slc">;; PURPOSE.  See the GNU General Public License for more details.</span>
<span class="hl slc">;;</span>
<span class="hl slc">;; You should have received a copy of the GNU General Public</span>
<span class="hl slc">;; License along with this program; if not, write to the Free</span>
<span class="hl slc">;; Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,</span>
<span class="hl slc">;; MA 02111-1307 USA</span>

<span class="hl slc">;;; Commentary:</span>

<span class="hl slc">;; This file contains an interface for the git version control</span>
<span class="hl slc">;; system. It provides easy access to the most frequently used git</span>
<span class="hl slc">;; commands. The user interface is as far as possible identical to</span>
<span class="hl slc">;; that of the PCL-CVS mode.</span>
<span class="hl slc">;;</span>
<span class="hl slc">;; To install: put this file on the load-path and place the following</span>
<span class="hl slc">;; in your .emacs file:</span>
<span class="hl slc">;;</span>
<span class="hl slc">;;    (require 'git)</span>
<span class="hl slc">;;</span>
<span class="hl slc">;; To start: `M-x git-status'</span>
<span class="hl slc">;;</span>
<span class="hl slc">;; TODO</span>
<span class="hl slc">;;  - diff against other branch</span>
<span class="hl slc">;;  - renaming files from the status buffer</span>
<span class="hl slc">;;  - creating tags</span>
<span class="hl slc">;;  - fetch/pull</span>
<span class="hl slc">;;  - revlist browser</span>
<span class="hl slc">;;  - git-show-branch browser</span>
<span class="hl slc">;;</span>

<span class="hl slc">;;; Compatibility:</span>
<span class="hl slc">;;</span>
<span class="hl slc">;; This file works on GNU Emacs 21 or later. It may work on older</span>
<span class="hl slc">;; versions but this is not guaranteed.</span>
<span class="hl slc">;;</span>
<span class="hl slc">;; It may work on XEmacs 21, provided that you first install the ewoc</span>
<span class="hl slc">;; and log-edit packages.</span>
<span class="hl slc">;;</span>

<span class="hl opt">(</span><span class="hl kwa">eval-when-compile</span> <span class="hl opt">(</span><span class="hl kwa">require</span> <span class="hl opt">'</span>cl<span class="hl opt">))</span>
<span class="hl opt">(</span><span class="hl kwa">require</span> <span class="hl opt">'</span>ewoc<span class="hl opt">)</span>
<span class="hl opt">(</span><span class="hl kwa">require</span> <span class="hl opt">'</span>log-edit<span class="hl opt">)</span>
<span class="hl opt">(</span><span class="hl kwa">require</span> <span class="hl opt">'</span>easymenu<span class="hl opt">)</span>


<span class="hl slc">;;;; Customizations</span>
<span class="hl slc">;;;; ------------------------------------------------------------</span>

<span class="hl opt">(</span><span class="hl kwa">defgroup</span> git nil
  <span class="hl str">&quot;A user interface for the git versioning system.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>tools<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defcustom</span> git-committer-name nil
  <span class="hl str">&quot;User name to use for commits.</span>
<span class="hl str">The default is to fall back to the repository config,</span>
<span class="hl str">then to `add-log-full-name' and then to `user-full-name'.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git
  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">choice</span> <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Default&quot;</span> nil<span class="hl opt">)</span>
                 <span class="hl opt">(</span><span class="hl kwa">string</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Name&quot;</span><span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defcustom</span> git-committer-email nil
  <span class="hl str">&quot;Email address to use for commits.</span>
<span class="hl str">The default is to fall back to the git repository config,</span>
<span class="hl str">then to `add-log-mailing-address' and then to `user-mail-address'.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git
  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">choice</span> <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Default&quot;</span> nil<span class="hl opt">)</span>
                 <span class="hl opt">(</span><span class="hl kwa">string</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;Email&quot;</span><span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defcustom</span> git-commits-coding-system nil
  <span class="hl str">&quot;Default coding system for the log message of git commits.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git
  <span class="hl opt">:</span>type <span class="hl opt">'(</span><span class="hl kwa">choice</span> <span class="hl opt">(</span><span class="hl kwa">const</span> <span class="hl opt">:</span>tag <span class="hl str">&quot;From repository config&quot;</span> nil<span class="hl opt">)</span>
                 <span class="hl opt">(</span><span class="hl kwa">coding-system</span><span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defcustom</span> git-append-signed-off-by nil
  <span class="hl str">&quot;Whether to append a Signed-off-by line to the commit message before editing.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git
  <span class="hl opt">:</span>type <span class="hl opt">'</span>boolean<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defcustom</span> git-reuse-status-buffer t
  <span class="hl str">&quot;Whether `git-status' should try to reuse an existing buffer</span>
<span class="hl str">if there is already one that displays the same directory.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git
  <span class="hl opt">:</span>type <span class="hl opt">'</span>boolean<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defcustom</span> git-per-dir-ignore-file <span class="hl str">&quot;.gitignore&quot;</span>
  <span class="hl str">&quot;Name of the per-directory ignore file.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git
  <span class="hl opt">:</span>type <span class="hl opt">'</span>string<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defcustom</span> git-show-uptodate nil
  <span class="hl str">&quot;Whether to display up-to-date files.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git
  <span class="hl opt">:</span>type <span class="hl opt">'</span>boolean<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defcustom</span> git-show-ignored nil
  <span class="hl str">&quot;Whether to display ignored files.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git
  <span class="hl opt">:</span>type <span class="hl opt">'</span>boolean<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defcustom</span> git-show-unknown t
  <span class="hl str">&quot;Whether to display unknown files.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git
  <span class="hl opt">:</span>type <span class="hl opt">'</span>boolean<span class="hl opt">)</span>


<span class="hl opt">(</span><span class="hl kwa">defface</span> git-status-face
  <span class="hl opt">'((((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> light<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;purple&quot;</span><span class="hl opt">))</span>
    <span class="hl opt">(((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> dark<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;salmon&quot;</span><span class="hl opt">)))</span>
  <span class="hl str">&quot;Git mode face used to highlight added and modified files.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defface</span> git-unmerged-face
  <span class="hl opt">'((((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> light<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;red&quot;</span> <span class="hl opt">:</span>bold t<span class="hl opt">))</span>
    <span class="hl opt">(((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> dark<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;red&quot;</span> <span class="hl opt">:</span>bold t<span class="hl opt">)))</span>
  <span class="hl str">&quot;Git mode face used to highlight unmerged files.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defface</span> git-unknown-face
  <span class="hl opt">'((((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> light<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;goldenrod&quot;</span> <span class="hl opt">:</span>bold t<span class="hl opt">))</span>
    <span class="hl opt">(((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> dark<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;goldenrod&quot;</span> <span class="hl opt">:</span>bold t<span class="hl opt">)))</span>
  <span class="hl str">&quot;Git mode face used to highlight unknown files.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defface</span> git-uptodate-face
  <span class="hl opt">'((((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> light<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;grey60&quot;</span><span class="hl opt">))</span>
    <span class="hl opt">(((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> dark<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;grey40&quot;</span><span class="hl opt">)))</span>
  <span class="hl str">&quot;Git mode face used to highlight up-to-date files.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defface</span> git-ignored-face
  <span class="hl opt">'((((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> light<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;grey60&quot;</span><span class="hl opt">))</span>
    <span class="hl opt">(((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> dark<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;grey40&quot;</span><span class="hl opt">)))</span>
  <span class="hl str">&quot;Git mode face used to highlight ignored files.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defface</span> git-mark-face
  <span class="hl opt">'((((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> light<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;red&quot;</span> <span class="hl opt">:</span>bold t<span class="hl opt">))</span>
    <span class="hl opt">(((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> dark<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;tomato&quot;</span> <span class="hl opt">:</span>bold t<span class="hl opt">)))</span>
  <span class="hl str">&quot;Git mode face used for the file marks.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defface</span> git-header-face
  <span class="hl opt">'((((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> light<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;blue&quot;</span><span class="hl opt">))</span>
    <span class="hl opt">(((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> dark<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;blue&quot;</span><span class="hl opt">)))</span>
  <span class="hl str">&quot;Git mode face used for commit headers.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defface</span> git-separator-face
  <span class="hl opt">'((((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> light<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;brown&quot;</span><span class="hl opt">))</span>
    <span class="hl opt">(((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> dark<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;brown&quot;</span><span class="hl opt">)))</span>
  <span class="hl str">&quot;Git mode face used for commit separator.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defface</span> git-permission-face
  <span class="hl opt">'((((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> light<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;green&quot;</span> <span class="hl opt">:</span>bold t<span class="hl opt">))</span>
    <span class="hl opt">(((</span><span class="hl kwa">class</span> color<span class="hl opt">) (</span><span class="hl kwa">background</span> dark<span class="hl opt">)) (:</span>foreground <span class="hl str">&quot;green&quot;</span> <span class="hl opt">:</span>bold t<span class="hl opt">)))</span>
  <span class="hl str">&quot;Git mode face used for permission changes.&quot;</span>
  <span class="hl opt">:</span>group <span class="hl opt">'</span>git<span class="hl opt">)</span>


<span class="hl slc">;;;; Utilities</span>
<span class="hl slc">;;;; ------------------------------------------------------------</span>

<span class="hl opt">(</span><span class="hl kwa">defconst</span> git-log-msg-separator <span class="hl str">&quot;--- log message follows this line ---&quot;</span><span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defvar</span> git-log-edit-font-lock-keywords
  <span class="hl opt">`((</span><span class="hl str">&quot;^</span><span class="hl esc">\\</span><span class="hl str">(Author:</span><span class="hl esc">\\</span><span class="hl str">|Date:</span><span class="hl esc">\\</span><span class="hl str">|Merge:</span><span class="hl esc">\\</span><span class="hl str">|Signed-off-by:</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">(.*</span><span class="hl esc">\\</span><span class="hl str">)$&quot;</span>
     <span class="hl opt">(</span><span class="hl kwa">1</span> font-lock-keyword-face<span class="hl opt">)</span>
     <span class="hl opt">(</span><span class="hl kwa">2</span> font-lock-function-name-face<span class="hl opt">))</span>
    <span class="hl opt">(,(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;^</span><span class="hl esc">\\</span><span class="hl str">(&quot;</span> <span class="hl opt">(</span><span class="hl kwa">regexp-quote</span> git-log-msg-separator<span class="hl opt">)</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">)$&quot;</span><span class="hl opt">)</span>
     <span class="hl opt">(</span><span class="hl kwa">1</span> font-lock-comment-face<span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-get-env-strings <span class="hl opt">(</span><span class="hl kwa">env</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Build a list of NAME=VALUE strings from a list of environment strings.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">mapcar</span> <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">entry</span><span class="hl opt">) (</span><span class="hl kwa">concat</span> <span class="hl opt">(</span><span class="hl kwa">car</span> entry<span class="hl opt">)</span> <span class="hl str">&quot;=&quot;</span> <span class="hl opt">(</span><span class="hl kwa">cdr</span> entry<span class="hl opt">)))</span> env<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-call-process <span class="hl opt">(</span><span class="hl kwa">buffer</span> <span class="hl opt">&amp;</span>rest args<span class="hl opt">)</span>
  <span class="hl str">&quot;Wrapper for call-process that sets environment strings.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>call-process <span class="hl str">&quot;git&quot;</span> nil buffer nil args<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-call-process-display-error <span class="hl opt">(&amp;</span>rest args<span class="hl opt">)</span>
  <span class="hl str">&quot;Wrapper for call-process that displays error messages.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">dir</span> default-directory<span class="hl opt">)</span>
         <span class="hl opt">(</span><span class="hl kwa">buffer</span> <span class="hl opt">(</span><span class="hl kwa">get-buffer-create</span> <span class="hl str">&quot;*Git Command Output*&quot;</span><span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">ok</span> <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> buffer
               <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">default-directory</span> dir<span class="hl opt">)</span>
                     <span class="hl opt">(</span><span class="hl kwa">buffer-read-only</span> nil<span class="hl opt">))</span>
                 <span class="hl opt">(</span><span class="hl kwa">erase-buffer</span><span class="hl opt">)</span>
                 <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-call-process <span class="hl opt">(</span><span class="hl kwa">list</span> buffer t<span class="hl opt">)</span> args<span class="hl opt">))))))</span>
    <span class="hl opt">(</span><span class="hl kwa">unless</span> ok <span class="hl opt">(</span><span class="hl kwa">display-message-or-buffer</span> buffer<span class="hl opt">))</span>
    ok<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-call-process-string <span class="hl opt">(&amp;</span>rest args<span class="hl opt">)</span>
  <span class="hl str">&quot;Wrapper for call-process that returns the process output as a string,</span>
<span class="hl str">or nil if the git command failed.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">with-temp-buffer</span>
    <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-call-process t args<span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">buffer-string</span><span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-call-process-string-display-error <span class="hl opt">(&amp;</span>rest args<span class="hl opt">)</span>
  <span class="hl str">&quot;Wrapper for call-process that displays error message and returns</span>
<span class="hl str">the process output as a string, or nil if the git command failed.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">with-temp-buffer</span>
    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-call-process <span class="hl opt">(</span><span class="hl kwa">list</span> t t<span class="hl opt">)</span> args<span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">buffer-string</span><span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">display-message-or-buffer</span> <span class="hl opt">(</span><span class="hl kwa">current-buffer</span><span class="hl opt">))</span>
      nil<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-run-process-region <span class="hl opt">(</span><span class="hl kwa">buffer</span> start end program args<span class="hl opt">)</span>
  <span class="hl str">&quot;Run a git process with a buffer region as input.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">output-buffer</span> <span class="hl opt">(</span><span class="hl kwa">current-buffer</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">dir</span> default-directory<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> buffer
      <span class="hl opt">(</span><span class="hl kwa">cd</span> dir<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>call-process-region start end program
             nil <span class="hl opt">(</span><span class="hl kwa">list</span> output-buffer t<span class="hl opt">)</span> nil args<span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-run-command-buffer <span class="hl opt">(</span><span class="hl kwa">buffer-name</span> <span class="hl opt">&amp;</span>rest args<span class="hl opt">)</span>
  <span class="hl str">&quot;Run a git command, sending the output to a buffer named BUFFER-NAME.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">dir</span> default-directory<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">buffer</span> <span class="hl opt">(</span><span class="hl kwa">get-buffer-create</span> buffer-name<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Running git %s...&quot;</span> <span class="hl opt">(</span><span class="hl kwa">car</span> args<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> buffer
      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">default-directory</span> dir<span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">buffer-read-only</span> nil<span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">erase-buffer</span><span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-call-process buffer args<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Running git %s...done&quot;</span> <span class="hl opt">(</span><span class="hl kwa">car</span> args<span class="hl opt">))</span>
    buffer<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-run-command-region <span class="hl opt">(</span><span class="hl kwa">buffer</span> start end env <span class="hl opt">&amp;</span>rest args<span class="hl opt">)</span>
  <span class="hl str">&quot;Run a git command with specified buffer region as input.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">with-temp-buffer</span>
    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">if</span> env
                  <span class="hl opt">(</span><span class="hl kwa">git-run-process-region</span>
                   buffer start end <span class="hl str">&quot;env&quot;</span>
                   <span class="hl opt">(</span><span class="hl kwa">append</span> <span class="hl opt">(</span><span class="hl kwa">git-get-env-strings</span> env<span class="hl opt">) (</span><span class="hl kwa">list</span> <span class="hl str">&quot;git&quot;</span><span class="hl opt">)</span> args<span class="hl opt">))</span>
                <span class="hl opt">(</span><span class="hl kwa">git-run-process-region</span> buffer start end <span class="hl str">&quot;git&quot;</span> args<span class="hl opt">)))</span>
        <span class="hl opt">(</span><span class="hl kwa">buffer-string</span><span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">display-message-or-buffer</span> <span class="hl opt">(</span><span class="hl kwa">current-buffer</span><span class="hl opt">))</span>
      nil<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-run-hook <span class="hl opt">(</span><span class="hl kwa">hook</span> env <span class="hl opt">&amp;</span>rest args<span class="hl opt">)</span>
  <span class="hl str">&quot;Run a git hook and display its output if any.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">dir</span> default-directory<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">hook-name</span> <span class="hl opt">(</span><span class="hl kwa">expand-file-name</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;.git/hooks/&quot;</span> hook<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">file-executable-p</span> hook-name<span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">(</span><span class="hl kwa">status</span> <span class="hl opt">(</span><span class="hl kwa">buffer</span> <span class="hl opt">(</span><span class="hl kwa">get-buffer-create</span> <span class="hl str">&quot;*Git Hook Output*&quot;</span><span class="hl opt">)))</span>
          <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> buffer
            <span class="hl opt">(</span><span class="hl kwa">erase-buffer</span><span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">cd</span> dir<span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">setq</span> status
                  <span class="hl opt">(</span><span class="hl kwa">if</span> env
                      <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>call-process <span class="hl str">&quot;env&quot;</span> nil <span class="hl opt">(</span><span class="hl kwa">list</span> buffer t<span class="hl opt">)</span> nil
                             <span class="hl opt">(</span><span class="hl kwa">append</span> <span class="hl opt">(</span><span class="hl kwa">git-get-env-strings</span> env<span class="hl opt">) (</span><span class="hl kwa">list</span> hook-name<span class="hl opt">)</span> args<span class="hl opt">))</span>
                    <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>call-process hook-name nil <span class="hl opt">(</span><span class="hl kwa">list</span> buffer t<span class="hl opt">)</span> nil args<span class="hl opt">))))</span>
          <span class="hl opt">(</span><span class="hl kwa">display-message-or-buffer</span> buffer<span class="hl opt">)</span>
          <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl num">0</span> status<span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-get-string-sha1 <span class="hl opt">(</span><span class="hl kwa">string</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Read a SHA1 from the specified string.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">and</span> string
       <span class="hl opt">(</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;[0-9a-f]</span><span class="hl esc">\\</span><span class="hl str">{40</span><span class="hl esc">\\</span><span class="hl str">}&quot;</span> string<span class="hl opt">)</span>
       <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">0</span> string<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-get-committer-name <span class="hl opt">()</span>
  <span class="hl str">&quot;Return the name to use as GIT_COMMITTER_NAME.&quot;</span>
  <span class="hl slc">; copied from log-edit</span>
  <span class="hl opt">(</span><span class="hl kwa">or</span> git-committer-name
      <span class="hl opt">(</span><span class="hl kwa">git-config</span> <span class="hl str">&quot;user.name&quot;</span><span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">boundp</span> <span class="hl opt">'</span>add-log-full-name<span class="hl opt">)</span> add-log-full-name<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">fboundp</span> <span class="hl opt">'</span>user-full-name<span class="hl opt">) (</span><span class="hl kwa">user-full-name</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">boundp</span> <span class="hl opt">'</span>user-full-name<span class="hl opt">)</span> user-full-name<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-get-committer-email <span class="hl opt">()</span>
  <span class="hl str">&quot;Return the email address to use as GIT_COMMITTER_EMAIL.&quot;</span>
  <span class="hl slc">; copied from log-edit</span>
  <span class="hl opt">(</span><span class="hl kwa">or</span> git-committer-email
      <span class="hl opt">(</span><span class="hl kwa">git-config</span> <span class="hl str">&quot;user.email&quot;</span><span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">boundp</span> <span class="hl opt">'</span>add-log-mailing-address<span class="hl opt">)</span> add-log-mailing-address<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">fboundp</span> <span class="hl opt">'</span>user-mail-address<span class="hl opt">) (</span><span class="hl kwa">user-mail-address</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">boundp</span> <span class="hl opt">'</span>user-mail-address<span class="hl opt">)</span> user-mail-address<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-get-commits-coding-system <span class="hl opt">()</span>
  <span class="hl str">&quot;Return the coding system to use for commits.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">repo-config</span> <span class="hl opt">(</span><span class="hl kwa">git-config</span> <span class="hl str">&quot;i18n.commitencoding&quot;</span><span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">or</span> git-commits-coding-system
        <span class="hl opt">(</span><span class="hl kwa">and</span> repo-config
             <span class="hl opt">(</span><span class="hl kwa">fboundp</span> <span class="hl opt">'</span>locale-charset-to-coding-system<span class="hl opt">)</span>
             <span class="hl opt">(</span><span class="hl kwa">locale-charset-to-coding-system</span> repo-config<span class="hl opt">))</span>
      <span class="hl opt">'</span>utf-8<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-get-logoutput-coding-system <span class="hl opt">()</span>
  <span class="hl str">&quot;Return the coding system used for git-log output.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">repo-config</span> <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">git-config</span> <span class="hl str">&quot;i18n.logoutputencoding&quot;</span><span class="hl opt">)</span>
                         <span class="hl opt">(</span><span class="hl kwa">git-config</span> <span class="hl str">&quot;i18n.commitencoding&quot;</span><span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">or</span> git-commits-coding-system
        <span class="hl opt">(</span><span class="hl kwa">and</span> repo-config
             <span class="hl opt">(</span><span class="hl kwa">fboundp</span> <span class="hl opt">'</span>locale-charset-to-coding-system<span class="hl opt">)</span>
             <span class="hl opt">(</span><span class="hl kwa">locale-charset-to-coding-system</span> repo-config<span class="hl opt">))</span>
      <span class="hl opt">'</span>utf-8<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-escape-file-name <span class="hl opt">(</span><span class="hl kwa">name</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Escape a file name if necessary.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;[</span><span class="hl esc">\n\t\&quot;\\</span><span class="hl str">]&quot;</span> name<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;</span><span class="hl esc">\&quot;</span><span class="hl str">&quot;</span>
              <span class="hl opt">(</span><span class="hl kwa">mapconcat</span> <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">c</span><span class="hl opt">)</span>
                   <span class="hl opt">(</span><span class="hl kwa">case</span> c
                     <span class="hl opt">(</span>?<span class="hl esc">\n</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">n&quot;</span><span class="hl opt">)</span>
                     <span class="hl opt">(</span>?<span class="hl esc">\t</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">t&quot;</span><span class="hl opt">)</span>
                     <span class="hl opt">(</span>?<span class="hl esc">\\</span> <span class="hl str">&quot;</span><span class="hl esc">\\\\</span><span class="hl str">&quot;</span><span class="hl opt">)</span>
                     <span class="hl opt">(</span>?<span class="hl esc">\&quot;</span> <span class="hl str">&quot;</span><span class="hl esc">\\\&quot;</span><span class="hl str">&quot;</span><span class="hl opt">)</span>
                     <span class="hl opt">(</span><span class="hl kwa">t</span> <span class="hl opt">(</span><span class="hl kwa">char-to-string</span> c<span class="hl opt">))))</span>
                 name <span class="hl str">&quot;&quot;</span><span class="hl opt">)</span>
              <span class="hl str">&quot;</span><span class="hl esc">\&quot;</span><span class="hl str">&quot;</span><span class="hl opt">)</span>
    name<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-success-message <span class="hl opt">(</span><span class="hl kwa">text</span> files<span class="hl opt">)</span>
  <span class="hl str">&quot;Print a success message after having handled FILES.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">n</span> <span class="hl opt">(</span><span class="hl kwa">length</span> files<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">equal</span> n <span class="hl num">1</span><span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;%s %s&quot;</span> text <span class="hl opt">(</span><span class="hl kwa">car</span> files<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;%s %d files&quot;</span> text n<span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-get-top-dir <span class="hl opt">(</span><span class="hl kwa">dir</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Retrieve the top-level directory of a git tree.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">cdup</span> <span class="hl opt">(</span><span class="hl kwa">with-output-to-string</span>
                <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> standard-output
                  <span class="hl opt">(</span><span class="hl kwa">cd</span> dir<span class="hl opt">)</span>
                  <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">git-call-process</span> t <span class="hl str">&quot;rev-parse&quot;</span> <span class="hl str">&quot;--show-cdup&quot;</span><span class="hl opt">))</span>
                    <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;cannot find top-level git tree for %s.&quot;</span> dir<span class="hl opt">))))))</span>
    <span class="hl opt">(</span><span class="hl kwa">expand-file-name</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl opt">(</span><span class="hl kwa">file-name-as-directory</span> dir<span class="hl opt">)</span>
                              <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">split-string</span> cdup <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">))))))</span>

<span class="hl slc">;stolen from pcl-cvs</span>
<span class="hl opt">(</span><span class="hl kwa">defun</span> git-append-to-ignore <span class="hl opt">(</span><span class="hl kwa">file</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Add a file name to the ignore file in its directory.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">fullname</span> <span class="hl opt">(</span><span class="hl kwa">expand-file-name</span> file<span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">dir</span> <span class="hl opt">(</span><span class="hl kwa">file-name-directory</span> fullname<span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">name</span> <span class="hl opt">(</span><span class="hl kwa">file-name-nondirectory</span> fullname<span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">ignore-name</span> <span class="hl opt">(</span><span class="hl kwa">expand-file-name</span> git-per-dir-ignore-file dir<span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">created</span> <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">file-exists-p</span> ignore-name<span class="hl opt">))))</span>
  <span class="hl opt">(</span><span class="hl kwa">save-window-excursion</span>
    <span class="hl opt">(</span><span class="hl kwa">set-buffer</span> <span class="hl opt">(</span><span class="hl kwa">find-file-noselect</span> ignore-name<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">zerop</span> <span class="hl opt">(</span><span class="hl kwa">current-column</span><span class="hl opt">)) (</span><span class="hl kwa">insert</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">insert</span> <span class="hl str">&quot;/&quot;</span> name <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">sort-lines</span> nil <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">) (</span><span class="hl kwa">point-max</span><span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">save-buffer</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">when</span> created
    <span class="hl opt">(</span><span class="hl kwa">git-call-process</span> nil <span class="hl str">&quot;update-index&quot;</span> <span class="hl str">&quot;--add&quot;</span> <span class="hl str">&quot;--&quot;</span> <span class="hl opt">(</span><span class="hl kwa">file-relative-name</span> ignore-name<span class="hl opt">)))</span>
  <span class="hl opt">(</span><span class="hl kwa">git-update-status-files</span> <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">file-relative-name</span> ignore-name<span class="hl opt">)))))</span>

<span class="hl slc">; propertize definition for XEmacs, stolen from erc-compat</span>
<span class="hl opt">(</span><span class="hl kwa">eval-when-compile</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">fboundp</span> <span class="hl opt">'</span>propertize<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">defun</span> propertize <span class="hl opt">(</span><span class="hl kwa">string</span> <span class="hl opt">&amp;</span>rest props<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">string</span> <span class="hl opt">(</span><span class="hl kwa">copy-sequence</span> string<span class="hl opt">)))</span>
        <span class="hl opt">(</span><span class="hl kwa">while</span> props
          <span class="hl opt">(</span><span class="hl kwa">put-text-property</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">length</span> string<span class="hl opt">) (</span><span class="hl kwa">nth</span> <span class="hl num">0</span> props<span class="hl opt">) (</span><span class="hl kwa">nth</span> <span class="hl num">1</span> props<span class="hl opt">)</span> string<span class="hl opt">)</span>
          <span class="hl opt">(</span><span class="hl kwa">setq</span> props <span class="hl opt">(</span><span class="hl kwa">cddr</span> props<span class="hl opt">)))</span>
        string<span class="hl opt">))))</span>

<span class="hl slc">;;;; Wrappers for basic git commands</span>
<span class="hl slc">;;;; ------------------------------------------------------------</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-rev-parse <span class="hl opt">(</span><span class="hl kwa">rev</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Parse a revision name and return its SHA1.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">git-get-string-sha1</span>
   <span class="hl opt">(</span><span class="hl kwa">git-call-process-string</span> <span class="hl str">&quot;rev-parse&quot;</span> rev<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-config <span class="hl opt">(</span><span class="hl kwa">key</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Retrieve the value associated to KEY in the git repository config file.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">str</span> <span class="hl opt">(</span><span class="hl kwa">git-call-process-string</span> <span class="hl str">&quot;config&quot;</span> key<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">and</span> str <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">split-string</span> str <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-symbolic-ref <span class="hl opt">(</span><span class="hl kwa">ref</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Wrapper for the git-symbolic-ref command.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">str</span> <span class="hl opt">(</span><span class="hl kwa">git-call-process-string</span> <span class="hl str">&quot;symbolic-ref&quot;</span> ref<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">and</span> str <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">split-string</span> str <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-update-ref <span class="hl opt">(</span><span class="hl kwa">ref</span> newval <span class="hl opt">&amp;</span>optional oldval reason<span class="hl opt">)</span>
  <span class="hl str">&quot;Update a reference by calling git-update-ref.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">args</span> <span class="hl opt">(</span><span class="hl kwa">and</span> oldval <span class="hl opt">(</span><span class="hl kwa">list</span> oldval<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> newval <span class="hl opt">(</span><span class="hl kwa">push</span> newval args<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">push</span> ref args<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> reason
     <span class="hl opt">(</span><span class="hl kwa">push</span> reason args<span class="hl opt">)</span>
     <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl str">&quot;-m&quot;</span> args<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">unless</span> newval <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl str">&quot;-d&quot;</span> args<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">'</span>git-call-process-display-error <span class="hl str">&quot;update-ref&quot;</span> args<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-for-each-ref <span class="hl opt">(&amp;</span>rest specs<span class="hl opt">)</span>
  <span class="hl str">&quot;Return a list of refs using git-for-each-ref.</span>
<span class="hl str">Each entry is a cons of (SHORT-NAME . FULL-NAME).&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">(</span><span class="hl kwa">refs</span><span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">with-temp-buffer</span>
      <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-call-process t <span class="hl str">&quot;for-each-ref&quot;</span> <span class="hl str">&quot;--format=%(refname)&quot;</span> specs<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;^[^/</span><span class="hl esc">\n</span><span class="hl str">]+/[^/</span><span class="hl esc">\n</span><span class="hl str">]+/</span><span class="hl esc">\\</span><span class="hl str">(.+</span><span class="hl esc">\\</span><span class="hl str">)$&quot;</span> nil t<span class="hl opt">)</span>
	<span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">cons</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">) (</span><span class="hl kwa">match-string</span> <span class="hl num">0</span><span class="hl opt">))</span> refs<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">nreverse</span> refs<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-read-tree <span class="hl opt">(</span><span class="hl kwa">tree</span> <span class="hl opt">&amp;</span>optional index-file<span class="hl opt">)</span>
  <span class="hl str">&quot;Read a tree into the index file.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">process-environment</span>
         <span class="hl opt">(</span><span class="hl kwa">append</span> <span class="hl opt">(</span><span class="hl kwa">and</span> index-file <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;GIT_INDEX_FILE=&quot;</span> index-file<span class="hl opt">)))</span> process-environment<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">'</span>git-call-process-display-error <span class="hl str">&quot;read-tree&quot;</span> <span class="hl opt">(</span><span class="hl kwa">if</span> tree <span class="hl opt">(</span><span class="hl kwa">list</span> tree<span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-write-tree <span class="hl opt">(&amp;</span>optional index-file<span class="hl opt">)</span>
  <span class="hl str">&quot;Call git-write-tree and return the resulting tree SHA1 as a string.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">process-environment</span>
         <span class="hl opt">(</span><span class="hl kwa">append</span> <span class="hl opt">(</span><span class="hl kwa">and</span> index-file <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;GIT_INDEX_FILE=&quot;</span> index-file<span class="hl opt">)))</span> process-environment<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">git-get-string-sha1</span>
     <span class="hl opt">(</span><span class="hl kwa">git-call-process-string-display-error</span> <span class="hl str">&quot;write-tree&quot;</span><span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-commit-tree <span class="hl opt">(</span><span class="hl kwa">buffer</span> tree parent<span class="hl opt">)</span>
  <span class="hl str">&quot;Create a commit and possibly update HEAD.</span>
<span class="hl str">Create a commit with the message in BUFFER using the tree with hash TREE.</span>
<span class="hl str">Use PARENT as the parent of the new commit. If PARENT is the current</span> <span class="hl esc">\&quot;</span><span class="hl str">HEAD</span><span class="hl esc">\&quot;</span><span class="hl str">,</span>
<span class="hl str">update the</span> <span class="hl esc">\&quot;</span><span class="hl str">HEAD</span><span class="hl esc">\&quot;</span> <span class="hl str">reference to the new commit.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">author-name</span> <span class="hl opt">(</span><span class="hl kwa">git-get-committer-name</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">author-email</span> <span class="hl opt">(</span><span class="hl kwa">git-get-committer-email</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">subject</span> <span class="hl str">&quot;commit (initial): &quot;</span><span class="hl opt">)</span>
        author-date log-start log-end args coding-system-for-write<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> parent
      <span class="hl opt">(</span><span class="hl kwa">setq</span> subject <span class="hl str">&quot;commit: &quot;</span><span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl str">&quot;-p&quot;</span> args<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">push</span> parent args<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> buffer
      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">if</span>
          <span class="hl opt">(</span><span class="hl kwa">setq</span> log-start <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;^&quot;</span> <span class="hl opt">(</span><span class="hl kwa">regexp-quote</span> git-log-msg-separator<span class="hl opt">)</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)</span> nil t<span class="hl opt">))</span>
          <span class="hl opt">(</span><span class="hl kwa">save-restriction</span>
            <span class="hl opt">(</span><span class="hl kwa">narrow-to-region</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">)</span> log-start<span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
            <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;^Author: +</span><span class="hl esc">\\</span><span class="hl str">(.*?</span><span class="hl esc">\\</span><span class="hl str">) *&lt;</span><span class="hl esc">\\</span><span class="hl str">(.*</span><span class="hl esc">\\</span><span class="hl str">)&gt; *$&quot;</span> nil t<span class="hl opt">)</span>
              <span class="hl opt">(</span><span class="hl kwa">setq</span> author-name <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">)</span>
                    author-email <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">2</span><span class="hl opt">)))</span>
            <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
            <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;^Date: +</span><span class="hl esc">\\</span><span class="hl str">(.*</span><span class="hl esc">\\</span><span class="hl str">)$&quot;</span> nil t<span class="hl opt">)</span>
              <span class="hl opt">(</span><span class="hl kwa">setq</span> author-date <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">)))</span>
            <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
            <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;^Merge: +</span><span class="hl esc">\\</span><span class="hl str">(.*</span><span class="hl esc">\\</span><span class="hl str">)&quot;</span> nil t<span class="hl opt">)</span>
              <span class="hl opt">(</span><span class="hl kwa">setq</span> subject <span class="hl str">&quot;commit (merge): &quot;</span><span class="hl opt">)</span>
              <span class="hl opt">(</span><span class="hl kwa">dolist</span> <span class="hl opt">(</span><span class="hl kwa">parent</span> <span class="hl opt">(</span><span class="hl kwa">split-string</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">)</span> <span class="hl str">&quot; +&quot;</span> t<span class="hl opt">))</span>
                <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl str">&quot;-p&quot;</span> args<span class="hl opt">)</span>
                <span class="hl opt">(</span><span class="hl kwa">push</span> parent args<span class="hl opt">))))</span>
        <span class="hl opt">(</span><span class="hl kwa">setq</span> log-start <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">setq</span> log-end <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> log-start<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;.*$&quot;</span> nil t<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">setq</span> subject <span class="hl opt">(</span><span class="hl kwa">concat</span> subject <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">0</span><span class="hl opt">))))</span>
      <span class="hl opt">(</span><span class="hl kwa">setq</span> coding-system-for-write buffer-file-coding-system<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">commit</span>
           <span class="hl opt">(</span><span class="hl kwa">git-get-string-sha1</span>
            <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">env</span> <span class="hl opt">`((</span><span class="hl str">&quot;GIT_AUTHOR_NAME&quot;</span> . <span class="hl opt">,</span>author-name<span class="hl opt">)</span>
                         <span class="hl opt">(</span><span class="hl str">&quot;GIT_AUTHOR_EMAIL&quot;</span> . <span class="hl opt">,</span>author-email<span class="hl opt">)</span>
                         <span class="hl opt">(</span><span class="hl str">&quot;GIT_COMMITTER_NAME&quot;</span> . <span class="hl opt">,(</span><span class="hl kwa">git-get-committer-name</span><span class="hl opt">))</span>
                         <span class="hl opt">(</span><span class="hl str">&quot;GIT_COMMITTER_EMAIL&quot;</span> . <span class="hl opt">,(</span><span class="hl kwa">git-get-committer-email</span><span class="hl opt">)))))</span>
              <span class="hl opt">(</span><span class="hl kwa">when</span> author-date <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">`(</span><span class="hl str">&quot;GIT_AUTHOR_DATE&quot;</span> . <span class="hl opt">,</span>author-date<span class="hl opt">)</span> env<span class="hl opt">))</span>
              <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-run-command-region
                     buffer log-start log-end env
                     <span class="hl str">&quot;commit-tree&quot;</span> tree <span class="hl opt">(</span><span class="hl kwa">nreverse</span> args<span class="hl opt">))))))</span>
      <span class="hl opt">(</span><span class="hl kwa">when</span> commit <span class="hl opt">(</span><span class="hl kwa">git-update-ref</span> <span class="hl str">&quot;HEAD&quot;</span> commit parent subject<span class="hl opt">))</span>
      commit<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-empty-db-p <span class="hl opt">()</span>
  <span class="hl str">&quot;Check if the git db is empty (no commit done yet).&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">git-call-process</span> nil <span class="hl str">&quot;rev-parse&quot;</span> <span class="hl str">&quot;--verify&quot;</span> <span class="hl str">&quot;HEAD&quot;</span><span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-get-merge-heads <span class="hl opt">()</span>
  <span class="hl str">&quot;Retrieve the merge heads from the MERGE_HEAD file if present.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">(</span><span class="hl kwa">heads</span><span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">file-readable-p</span> <span class="hl str">&quot;.git/MERGE_HEAD&quot;</span><span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">with-temp-buffer</span>
        <span class="hl opt">(</span><span class="hl kwa">insert-file-contents</span> <span class="hl str">&quot;.git/MERGE_HEAD&quot;</span> nil nil nil t<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;[0-9a-f]</span><span class="hl esc">\\</span><span class="hl str">{40</span><span class="hl esc">\\</span><span class="hl str">}&quot;</span> nil t<span class="hl opt">)</span>
          <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">0</span><span class="hl opt">)</span> heads<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">nreverse</span> heads<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-get-commit-description <span class="hl opt">(</span><span class="hl kwa">commit</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Get a one-line description of COMMIT.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">coding-system-for-read</span> <span class="hl opt">(</span><span class="hl kwa">git-get-logoutput-coding-system</span><span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">descr</span> <span class="hl opt">(</span><span class="hl kwa">git-call-process-string</span> <span class="hl str">&quot;log&quot;</span> <span class="hl str">&quot;--max-count=1&quot;</span> <span class="hl str">&quot;--pretty=oneline&quot;</span> commit<span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> descr <span class="hl opt">(</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">`</span><span class="hl esc">\\</span><span class="hl str">([0-9a-f]</span><span class="hl esc">\\</span><span class="hl str">{40</span><span class="hl esc">\\</span><span class="hl str">}</span><span class="hl esc">\\</span><span class="hl str">) *</span><span class="hl esc">\\</span><span class="hl str">(.*</span><span class="hl esc">\\</span><span class="hl str">)$&quot;</span> descr<span class="hl opt">))</span>
          <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl opt">(</span><span class="hl kwa">substring</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span> descr<span class="hl opt">)</span> <span class="hl num">0 10</span><span class="hl opt">)</span> <span class="hl str">&quot; - &quot;</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">2</span> descr<span class="hl opt">))</span>
        descr<span class="hl opt">))))</span>

<span class="hl slc">;;;; File info structure</span>
<span class="hl slc">;;;; ------------------------------------------------------------</span>

<span class="hl slc">; fileinfo structure stolen from pcl-cvs</span>
<span class="hl opt">(</span><span class="hl kwa">defstruct</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo</span>
            <span class="hl opt">(:</span>copier nil<span class="hl opt">)</span>
            <span class="hl opt">(:</span>constructor git-create-fileinfo <span class="hl opt">(</span><span class="hl kwa">state</span> name <span class="hl opt">&amp;</span>optional old-perm new-perm rename-state orig-name marked<span class="hl opt">))</span>
            <span class="hl opt">(:</span>conc-name git-fileinfo-<span class="hl opt">&gt;))</span>
  marked              <span class="hl slc">;; t/nil</span>
  state               <span class="hl slc">;; current state</span>
  name                <span class="hl slc">;; file name</span>
  old-perm new-perm   <span class="hl slc">;; permission flags</span>
  rename-state        <span class="hl slc">;; rename or copy state</span>
  orig-name           <span class="hl slc">;; original name for renames or copies</span>
  needs-update        <span class="hl slc">;; whether file needs to be updated</span>
  needs-refresh<span class="hl opt">)</span>      <span class="hl slc">;; whether file needs to be refreshed</span>

<span class="hl opt">(</span><span class="hl kwa">defvar</span> git-status nil<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-set-fileinfo-state <span class="hl opt">(</span><span class="hl kwa">info</span> state<span class="hl opt">)</span>
  <span class="hl str">&quot;Set the state of a file info.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>state info<span class="hl opt">)</span> state<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">setf</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>state info<span class="hl opt">)</span> state
	  <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>new-perm info<span class="hl opt">) (</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>old-perm info<span class="hl opt">)</span>
          <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>rename-state info<span class="hl opt">)</span> nil
          <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>orig-name info<span class="hl opt">)</span> nil
          <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>needs-update info<span class="hl opt">)</span> nil
          <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>needs-refresh info<span class="hl opt">)</span> t<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-status-filenames-map <span class="hl opt">(</span><span class="hl kwa">status</span> func files <span class="hl opt">&amp;</span>rest args<span class="hl opt">)</span>
  <span class="hl str">&quot;Apply FUNC to the status files names in the FILES list.</span>
<span class="hl str">The list must be sorted.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">when</span> files
    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">file</span> <span class="hl opt">(</span><span class="hl kwa">pop</span> files<span class="hl opt">))</span>
          <span class="hl opt">(</span><span class="hl kwa">node</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-nth</span> status <span class="hl num">0</span><span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> file node<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">info</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-data</span> node<span class="hl opt">))</span>
               <span class="hl opt">(</span><span class="hl kwa">name</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">)))</span>
          <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">string-lessp</span> name file<span class="hl opt">)</span>
              <span class="hl opt">(</span><span class="hl kwa">setq</span> node <span class="hl opt">(</span><span class="hl kwa">ewoc-next</span> status node<span class="hl opt">))</span>
            <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">string-equal</span> name file<span class="hl opt">)</span>
                <span class="hl opt">(</span><span class="hl kwa">apply</span> func info args<span class="hl opt">))</span>
            <span class="hl opt">(</span><span class="hl kwa">setq</span> file <span class="hl opt">(</span><span class="hl kwa">pop</span> files<span class="hl opt">))))))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-set-filenames-state <span class="hl opt">(</span><span class="hl kwa">status</span> files state<span class="hl opt">)</span>
  <span class="hl str">&quot;Set the state of a list of named files. The list must be sorted&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">when</span> files
    <span class="hl opt">(</span><span class="hl kwa">git-status-filenames-map</span> status <span class="hl opt">#'</span>git-set-fileinfo-state files state<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">unless</span> state  <span class="hl slc">;; delete files whose state has been set to nil</span>
      <span class="hl opt">(</span><span class="hl kwa">ewoc-filter</span> status <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">info</span><span class="hl opt">) (</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>state info<span class="hl opt">))))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-state-code <span class="hl opt">(</span><span class="hl kwa">code</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Convert from a string to a added/deleted/modified state.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">case</span> <span class="hl opt">(</span><span class="hl kwa">string-to-char</span> code<span class="hl opt">)</span>
    <span class="hl opt">(</span>?M <span class="hl opt">'</span>modified<span class="hl opt">)</span>
    <span class="hl opt">(</span>?? <span class="hl opt">'</span>unknown<span class="hl opt">)</span>
    <span class="hl opt">(</span>?A <span class="hl opt">'</span>added<span class="hl opt">)</span>
    <span class="hl opt">(</span>?D <span class="hl opt">'</span>deleted<span class="hl opt">)</span>
    <span class="hl opt">(</span>?U <span class="hl opt">'</span>unmerged<span class="hl opt">)</span>
    <span class="hl opt">(</span>?T <span class="hl opt">'</span>modified<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">t</span> nil<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-status-code-as-string <span class="hl opt">(</span><span class="hl kwa">code</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Format a git status code as string.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">case</span> code
    <span class="hl opt">('</span>modified <span class="hl opt">(</span><span class="hl kwa">propertize</span> <span class="hl str">&quot;Modified&quot;</span> <span class="hl opt">'</span>face <span class="hl opt">'</span>git-status-face<span class="hl opt">))</span>
    <span class="hl opt">('</span>unknown  <span class="hl opt">(</span><span class="hl kwa">propertize</span> <span class="hl str">&quot;Unknown &quot;</span> <span class="hl opt">'</span>face <span class="hl opt">'</span>git-unknown-face<span class="hl opt">))</span>
    <span class="hl opt">('</span>added    <span class="hl opt">(</span><span class="hl kwa">propertize</span> <span class="hl str">&quot;Added   &quot;</span> <span class="hl opt">'</span>face <span class="hl opt">'</span>git-status-face<span class="hl opt">))</span>
    <span class="hl opt">('</span>deleted  <span class="hl opt">(</span><span class="hl kwa">propertize</span> <span class="hl str">&quot;Deleted &quot;</span> <span class="hl opt">'</span>face <span class="hl opt">'</span>git-status-face<span class="hl opt">))</span>
    <span class="hl opt">('</span>unmerged <span class="hl opt">(</span><span class="hl kwa">propertize</span> <span class="hl str">&quot;Unmerged&quot;</span> <span class="hl opt">'</span>face <span class="hl opt">'</span>git-unmerged-face<span class="hl opt">))</span>
    <span class="hl opt">('</span>uptodate <span class="hl opt">(</span><span class="hl kwa">propertize</span> <span class="hl str">&quot;Uptodate&quot;</span> <span class="hl opt">'</span>face <span class="hl opt">'</span>git-uptodate-face<span class="hl opt">))</span>
    <span class="hl opt">('</span>ignored  <span class="hl opt">(</span><span class="hl kwa">propertize</span> <span class="hl str">&quot;Ignored &quot;</span> <span class="hl opt">'</span>face <span class="hl opt">'</span>git-ignored-face<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">t</span> <span class="hl str">&quot;?       &quot;</span><span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-file-type-as-string <span class="hl opt">(</span><span class="hl kwa">old-perm</span> new-perm<span class="hl opt">)</span>
  <span class="hl str">&quot;Return a string describing the file type based on its permissions.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">old-type</span> <span class="hl opt">(</span><span class="hl kwa">lsh</span> <span class="hl opt">(</span><span class="hl kwa">or</span> old-perm <span class="hl num">0</span><span class="hl opt">)</span> -<span class="hl num">9</span><span class="hl opt">))</span>
	 <span class="hl opt">(</span><span class="hl kwa">new-type</span> <span class="hl opt">(</span><span class="hl kwa">lsh</span> <span class="hl opt">(</span><span class="hl kwa">or</span> new-perm <span class="hl num">0</span><span class="hl opt">)</span> -<span class="hl num">9</span><span class="hl opt">))</span>
	 <span class="hl opt">(</span><span class="hl kwa">str</span> <span class="hl opt">(</span><span class="hl kwa">case</span> new-type
		<span class="hl opt">(</span><span class="hl kwa">64</span>  <span class="hl slc">;; file</span>
		 <span class="hl opt">(</span><span class="hl kwa">case</span> old-type
		   <span class="hl opt">(</span><span class="hl kwa">64</span> nil<span class="hl opt">)</span>
		   <span class="hl opt">(</span><span class="hl kwa">80</span> <span class="hl str">&quot;   (type change symlink -&gt; file)&quot;</span><span class="hl opt">)</span>
		   <span class="hl opt">(</span><span class="hl kwa">112</span> <span class="hl str">&quot;   (type change subproject -&gt; file)&quot;</span><span class="hl opt">)))</span>
		 <span class="hl opt">(</span><span class="hl kwa">80</span>  <span class="hl slc">;; symlink</span>
		  <span class="hl opt">(</span><span class="hl kwa">case</span> old-type
		    <span class="hl opt">(</span><span class="hl kwa">64</span> <span class="hl str">&quot;   (type change file -&gt; symlink)&quot;</span><span class="hl opt">)</span>
		    <span class="hl opt">(</span><span class="hl kwa">112</span> <span class="hl str">&quot;   (type change subproject -&gt; symlink)&quot;</span><span class="hl opt">)</span>
		    <span class="hl opt">(</span><span class="hl kwa">t</span> <span class="hl str">&quot;   (symlink)&quot;</span><span class="hl opt">)))</span>
		  <span class="hl opt">(</span><span class="hl kwa">112</span>  <span class="hl slc">;; subproject</span>
		   <span class="hl opt">(</span><span class="hl kwa">case</span> old-type
		     <span class="hl opt">(</span><span class="hl kwa">64</span> <span class="hl str">&quot;   (type change file -&gt; subproject)&quot;</span><span class="hl opt">)</span>
		     <span class="hl opt">(</span><span class="hl kwa">80</span> <span class="hl str">&quot;   (type change symlink -&gt; subproject)&quot;</span><span class="hl opt">)</span>
		     <span class="hl opt">(</span><span class="hl kwa">t</span> <span class="hl str">&quot;   (subproject)&quot;</span><span class="hl opt">)))</span>
                  <span class="hl opt">(</span><span class="hl kwa">72</span> nil<span class="hl opt">)</span>  <span class="hl slc">;; directory (internal, not a real git state)</span>
		  <span class="hl opt">(</span><span class="hl kwa">0</span>  <span class="hl slc">;; deleted or unknown</span>
		   <span class="hl opt">(</span><span class="hl kwa">case</span> old-type
		     <span class="hl opt">(</span><span class="hl kwa">80</span> <span class="hl str">&quot;   (symlink)&quot;</span><span class="hl opt">)</span>
		     <span class="hl opt">(</span><span class="hl kwa">112</span> <span class="hl str">&quot;   (subproject)&quot;</span><span class="hl opt">)))</span>
		  <span class="hl opt">(</span><span class="hl kwa">t</span> <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;   (unknown type %o)&quot;</span> new-type<span class="hl opt">)))))</span>
    <span class="hl opt">(</span><span class="hl kwa">cond</span> <span class="hl opt">(</span><span class="hl kwa">str</span> <span class="hl opt">(</span><span class="hl kwa">propertize</span> str <span class="hl opt">'</span>face <span class="hl opt">'</span>git-status-face<span class="hl opt">))</span>
          <span class="hl opt">((</span><span class="hl kwa">eq</span> new-type <span class="hl num">72</span><span class="hl opt">)</span> <span class="hl str">&quot;/&quot;</span><span class="hl opt">)</span>
          <span class="hl opt">(</span><span class="hl kwa">t</span> <span class="hl str">&quot;&quot;</span><span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-rename-as-string <span class="hl opt">(</span><span class="hl kwa">info</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Return a string describing the copy or rename associated with INFO, or an empty string if none.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">state</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>rename-state info<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">if</span> state
        <span class="hl opt">(</span><span class="hl kwa">propertize</span>
         <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;   (&quot;</span>
                 <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> state <span class="hl opt">'</span>copy<span class="hl opt">)</span> <span class="hl str">&quot;copied from &quot;</span>
                   <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>state info<span class="hl opt">) '</span>added<span class="hl opt">)</span> <span class="hl str">&quot;renamed from &quot;</span>
                     <span class="hl str">&quot;renamed to &quot;</span><span class="hl opt">))</span>
                 <span class="hl opt">(</span><span class="hl kwa">git-escape-file-name</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>orig-name info<span class="hl opt">))</span>
                 <span class="hl str">&quot;)&quot;</span><span class="hl opt">) '</span>face <span class="hl opt">'</span>git-status-face<span class="hl opt">)</span>
      <span class="hl str">&quot;&quot;</span><span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-permissions-as-string <span class="hl opt">(</span><span class="hl kwa">old-perm</span> new-perm<span class="hl opt">)</span>
  <span class="hl str">&quot;Format a permission change as string.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">propertize</span>
   <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">not</span> old-perm<span class="hl opt">)</span>
           <span class="hl opt">(</span><span class="hl kwa">not</span> new-perm<span class="hl opt">)</span>
           <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">logand</span> ?<span class="hl esc">\111</span> <span class="hl opt">(</span><span class="hl kwa">logxor</span> old-perm new-perm<span class="hl opt">))))</span>
       <span class="hl str">&quot;  &quot;</span>
     <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">logand</span> ?<span class="hl esc">\111</span> old-perm<span class="hl opt">))</span> <span class="hl str">&quot;+x&quot;</span> <span class="hl str">&quot;-x&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">'</span>face <span class="hl opt">'</span>git-permission-face<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-fileinfo-prettyprint <span class="hl opt">(</span><span class="hl kwa">info</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Pretty-printer for the git-fileinfo structure.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">old-perm</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>old-perm info<span class="hl opt">))</span>
	<span class="hl opt">(</span><span class="hl kwa">new-perm</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>new-perm info<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">insert</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;   &quot;</span> <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked info<span class="hl opt">) (</span><span class="hl kwa">propertize</span> <span class="hl str">&quot;*&quot;</span> <span class="hl opt">'</span>face <span class="hl opt">'</span>git-mark-face<span class="hl opt">)</span> <span class="hl str">&quot; &quot;</span><span class="hl opt">)</span>
		    <span class="hl str">&quot; &quot;</span> <span class="hl opt">(</span><span class="hl kwa">git-status-code-as-string</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>state info<span class="hl opt">))</span>
		    <span class="hl str">&quot; &quot;</span> <span class="hl opt">(</span><span class="hl kwa">git-permissions-as-string</span> old-perm new-perm<span class="hl opt">)</span>
		    <span class="hl str">&quot;  &quot;</span> <span class="hl opt">(</span><span class="hl kwa">git-escape-file-name</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">))</span>
		    <span class="hl opt">(</span><span class="hl kwa">git-file-type-as-string</span> old-perm new-perm<span class="hl opt">)</span>
		    <span class="hl opt">(</span><span class="hl kwa">git-rename-as-string</span> info<span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-update-node-fileinfo <span class="hl opt">(</span><span class="hl kwa">node</span> info<span class="hl opt">)</span>
  <span class="hl str">&quot;Update the fileinfo of the specified node. The names are assumed to match already.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">data</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-data</span> node<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">setf</span>
     <span class="hl slc">;; preserve the marked flag</span>
     <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked info<span class="hl opt">) (</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked data<span class="hl opt">)</span>
     <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>needs-update data<span class="hl opt">)</span> nil<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">equal</span> info data<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">setf</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>needs-refresh info<span class="hl opt">)</span> t
            <span class="hl opt">(</span><span class="hl kwa">ewoc-data</span> node<span class="hl opt">)</span> info<span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-insert-info-list <span class="hl opt">(</span><span class="hl kwa">status</span> infolist files<span class="hl opt">)</span>
  <span class="hl str">&quot;Insert a sorted list of file infos in the status buffer, replacing existing ones if any.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">info</span> <span class="hl opt">(</span><span class="hl kwa">pop</span> infolist<span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">node</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-nth</span> status <span class="hl num">0</span><span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">name</span> <span class="hl opt">(</span><span class="hl kwa">and</span> info <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">)))</span>
         remaining<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">while</span> info
      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">nodename</span> <span class="hl opt">(</span><span class="hl kwa">and</span> node <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name <span class="hl opt">(</span><span class="hl kwa">ewoc-data</span> node<span class="hl opt">)))))</span>
        <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> files <span class="hl opt">(</span><span class="hl kwa">string-lessp</span> <span class="hl opt">(</span><span class="hl kwa">car</span> files<span class="hl opt">)</span> name<span class="hl opt">))</span>
          <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">pop</span> files<span class="hl opt">)</span> remaining<span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">and</span> files <span class="hl opt">(</span><span class="hl kwa">string-equal</span> <span class="hl opt">(</span><span class="hl kwa">car</span> files<span class="hl opt">)</span> name<span class="hl opt">))</span>
          <span class="hl opt">(</span><span class="hl kwa">setq</span> files <span class="hl opt">(</span><span class="hl kwa">cdr</span> files<span class="hl opt">)))</span>
        <span class="hl opt">(</span><span class="hl kwa">cond</span> <span class="hl opt">((</span><span class="hl kwa">not</span> nodename<span class="hl opt">)</span>
               <span class="hl opt">(</span><span class="hl kwa">setq</span> node <span class="hl opt">(</span><span class="hl kwa">ewoc-enter-last</span> status info<span class="hl opt">))</span>
               <span class="hl opt">(</span><span class="hl kwa">setq</span> info <span class="hl opt">(</span><span class="hl kwa">pop</span> infolist<span class="hl opt">))</span>
               <span class="hl opt">(</span><span class="hl kwa">setq</span> name <span class="hl opt">(</span><span class="hl kwa">and</span> info <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">))))</span>
              <span class="hl opt">((</span><span class="hl kwa">string-lessp</span> nodename name<span class="hl opt">)</span>
               <span class="hl opt">(</span><span class="hl kwa">setq</span> node <span class="hl opt">(</span><span class="hl kwa">ewoc-next</span> status node<span class="hl opt">)))</span>
              <span class="hl opt">((</span><span class="hl kwa">string-equal</span> nodename name<span class="hl opt">)</span>
               <span class="hl slc">;; preserve the marked flag</span>
               <span class="hl opt">(</span><span class="hl kwa">git-update-node-fileinfo</span> node info<span class="hl opt">)</span>
               <span class="hl opt">(</span><span class="hl kwa">setq</span> info <span class="hl opt">(</span><span class="hl kwa">pop</span> infolist<span class="hl opt">))</span>
               <span class="hl opt">(</span><span class="hl kwa">setq</span> name <span class="hl opt">(</span><span class="hl kwa">and</span> info <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">))))</span>
              <span class="hl opt">(</span><span class="hl kwa">t</span>
               <span class="hl opt">(</span><span class="hl kwa">setq</span> node <span class="hl opt">(</span><span class="hl kwa">ewoc-enter-before</span> status node info<span class="hl opt">))</span>
               <span class="hl opt">(</span><span class="hl kwa">setq</span> info <span class="hl opt">(</span><span class="hl kwa">pop</span> infolist<span class="hl opt">))</span>
               <span class="hl opt">(</span><span class="hl kwa">setq</span> name <span class="hl opt">(</span><span class="hl kwa">and</span> info <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">)))))))</span>
    <span class="hl opt">(</span><span class="hl kwa">nconc</span> <span class="hl opt">(</span><span class="hl kwa">nreverse</span> remaining<span class="hl opt">)</span> files<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-run-diff-index <span class="hl opt">(</span><span class="hl kwa">status</span> files<span class="hl opt">)</span>
  <span class="hl str">&quot;Run git-diff-index on FILES and parse the results into STATUS.</span>
<span class="hl str">Return the list of files that haven't been handled.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">(</span><span class="hl kwa">infolist</span><span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">with-temp-buffer</span>
      <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-call-process t <span class="hl str">&quot;diff-index&quot;</span> <span class="hl str">&quot;-z&quot;</span> <span class="hl str">&quot;-M&quot;</span> <span class="hl str">&quot;HEAD&quot;</span> <span class="hl str">&quot;--&quot;</span> files<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span>
	      <span class="hl str">&quot;:</span><span class="hl esc">\\</span><span class="hl str">([0-7]</span><span class="hl esc">\\</span><span class="hl str">{6</span><span class="hl esc">\\</span><span class="hl str">}</span><span class="hl esc">\\</span><span class="hl str">)</span> <span class="hl esc">\\</span><span class="hl str">([0-7]</span><span class="hl esc">\\</span><span class="hl str">{6</span><span class="hl esc">\\</span><span class="hl str">}</span><span class="hl esc">\\</span><span class="hl str">) [0-9a-f]</span><span class="hl esc">\\</span><span class="hl str">{40</span><span class="hl esc">\\</span><span class="hl str">} [0-9a-f]</span><span class="hl esc">\\</span><span class="hl str">{40</span><span class="hl esc">\\</span><span class="hl str">}</span> <span class="hl esc">\\</span><span class="hl str">(</span><span class="hl esc">\\</span><span class="hl str">([ADMUT]</span><span class="hl esc">\\</span><span class="hl str">)\0</span><span class="hl esc">\\</span><span class="hl str">([^\0]+</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">|</span><span class="hl esc">\\</span><span class="hl str">([CR]</span><span class="hl esc">\\</span><span class="hl str">)[0-9]*\0</span><span class="hl esc">\\</span><span class="hl str">([^\0]+</span><span class="hl esc">\\</span><span class="hl str">)\0</span><span class="hl esc">\\</span><span class="hl str">([^\0]+</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">)\0&quot;</span>
              nil t <span class="hl num">1</span><span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">old-perm</span> <span class="hl opt">(</span><span class="hl kwa">string-to-number</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">)</span> <span class="hl num">8</span><span class="hl opt">))</span>
              <span class="hl opt">(</span><span class="hl kwa">new-perm</span> <span class="hl opt">(</span><span class="hl kwa">string-to-number</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">2</span><span class="hl opt">)</span> <span class="hl num">8</span><span class="hl opt">))</span>
              <span class="hl opt">(</span><span class="hl kwa">state</span> <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">4</span><span class="hl opt">) (</span><span class="hl kwa">match-string</span> <span class="hl num">6</span><span class="hl opt">)))</span>
              <span class="hl opt">(</span><span class="hl kwa">name</span> <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">5</span><span class="hl opt">) (</span><span class="hl kwa">match-string</span> <span class="hl num">7</span><span class="hl opt">)))</span>
              <span class="hl opt">(</span><span class="hl kwa">new-name</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">8</span><span class="hl opt">)))</span>
          <span class="hl opt">(</span><span class="hl kwa">if</span> new-name  <span class="hl slc">; copy or rename</span>
              <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> ?C <span class="hl opt">(</span><span class="hl kwa">string-to-char</span> state<span class="hl opt">))</span>
                  <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">git-create-fileinfo</span> <span class="hl opt">'</span>added new-name old-perm new-perm <span class="hl opt">'</span>copy name<span class="hl opt">)</span> infolist<span class="hl opt">)</span>
                <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">git-create-fileinfo</span> <span class="hl opt">'</span>deleted name <span class="hl num">0 0</span> <span class="hl opt">'</span>rename new-name<span class="hl opt">)</span> infolist<span class="hl opt">)</span>
                <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">git-create-fileinfo</span> <span class="hl opt">'</span>added new-name old-perm new-perm <span class="hl opt">'</span>rename name<span class="hl opt">)</span> infolist<span class="hl opt">))</span>
            <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">git-create-fileinfo</span> <span class="hl opt">(</span><span class="hl kwa">git-state-code</span> state<span class="hl opt">)</span> name old-perm new-perm<span class="hl opt">)</span> infolist<span class="hl opt">)))))</span>
    <span class="hl opt">(</span><span class="hl kwa">setq</span> infolist <span class="hl opt">(</span><span class="hl kwa">sort</span> <span class="hl opt">(</span><span class="hl kwa">nreverse</span> infolist<span class="hl opt">)</span>
                         <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">info1</span> info2<span class="hl opt">)</span>
                           <span class="hl opt">(</span><span class="hl kwa">string-lessp</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info1<span class="hl opt">)</span>
                                         <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info2<span class="hl opt">)))))</span>
    <span class="hl opt">(</span><span class="hl kwa">git-insert-info-list</span> status infolist files<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-find-status-file <span class="hl opt">(</span><span class="hl kwa">status</span> file<span class="hl opt">)</span>
  <span class="hl str">&quot;Find a given file in the status ewoc and return its node.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">node</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-nth</span> status <span class="hl num">0</span><span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> node <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">string</span><span class="hl opt">=</span> file <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name <span class="hl opt">(</span><span class="hl kwa">ewoc-data</span> node<span class="hl opt">)))))</span>
      <span class="hl opt">(</span><span class="hl kwa">setq</span> node <span class="hl opt">(</span><span class="hl kwa">ewoc-next</span> status node<span class="hl opt">)))</span>
    node<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-run-ls-files <span class="hl opt">(</span><span class="hl kwa">status</span> files default-state <span class="hl opt">&amp;</span>rest options<span class="hl opt">)</span>
  <span class="hl str">&quot;Run git-ls-files on FILES and parse the results into STATUS.</span>
<span class="hl str">Return the list of files that haven't been handled.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">(</span><span class="hl kwa">infolist</span><span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">with-temp-buffer</span>
      <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-call-process t <span class="hl str">&quot;ls-files&quot;</span> <span class="hl str">&quot;-z&quot;</span> <span class="hl opt">(</span><span class="hl kwa">append</span> options <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl str">&quot;--&quot;</span><span class="hl opt">)</span> files<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">([^\0]*?</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\\</span><span class="hl str">(/?</span><span class="hl esc">\\</span><span class="hl str">)\0&quot;</span> nil t <span class="hl num">1</span><span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">name</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">)))</span>
          <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">git-create-fileinfo</span> default-state name <span class="hl num">0</span>
                                     <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">string-equal</span> <span class="hl str">&quot;/&quot;</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">2</span><span class="hl opt">)) (</span><span class="hl kwa">lsh</span> ?<span class="hl esc">\110</span> <span class="hl num">9</span><span class="hl opt">)</span> <span class="hl num">0</span><span class="hl opt">))</span>
                infolist<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">setq</span> infolist <span class="hl opt">(</span><span class="hl kwa">nreverse</span> infolist<span class="hl opt">))</span>  <span class="hl slc">;; assume it is sorted already</span>
    <span class="hl opt">(</span><span class="hl kwa">git-insert-info-list</span> status infolist files<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-run-ls-files-cached <span class="hl opt">(</span><span class="hl kwa">status</span> files default-state<span class="hl opt">)</span>
  <span class="hl str">&quot;Run git-ls-files -c on FILES and parse the results into STATUS.</span>
<span class="hl str">Return the list of files that haven't been handled.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">(</span><span class="hl kwa">infolist</span><span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">with-temp-buffer</span>
      <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-call-process t <span class="hl str">&quot;ls-files&quot;</span> <span class="hl str">&quot;-z&quot;</span> <span class="hl str">&quot;-s&quot;</span> <span class="hl str">&quot;-c&quot;</span> <span class="hl str">&quot;--&quot;</span> files<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">([0-7]</span><span class="hl esc">\\</span><span class="hl str">{6</span><span class="hl esc">\\</span><span class="hl str">}</span><span class="hl esc">\\</span><span class="hl str">) [0-9a-f]</span><span class="hl esc">\\</span><span class="hl str">{40</span><span class="hl esc">\\</span><span class="hl str">} 0</span><span class="hl esc">\t\\</span><span class="hl str">([^\0]+</span><span class="hl esc">\\</span><span class="hl str">)\0&quot;</span> nil t<span class="hl opt">)</span>
	<span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">new-perm</span> <span class="hl opt">(</span><span class="hl kwa">string-to-number</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">)</span> <span class="hl num">8</span><span class="hl opt">))</span>
	       <span class="hl opt">(</span><span class="hl kwa">old-perm</span> <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> default-state <span class="hl opt">'</span>added<span class="hl opt">)</span> <span class="hl num">0</span> new-perm<span class="hl opt">))</span>
	       <span class="hl opt">(</span><span class="hl kwa">name</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">2</span><span class="hl opt">)))</span>
	  <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">git-create-fileinfo</span> default-state name old-perm new-perm<span class="hl opt">)</span> infolist<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">setq</span> infolist <span class="hl opt">(</span><span class="hl kwa">nreverse</span> infolist<span class="hl opt">))</span>  <span class="hl slc">;; assume it is sorted already</span>
    <span class="hl opt">(</span><span class="hl kwa">git-insert-info-list</span> status infolist files<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-run-ls-unmerged <span class="hl opt">(</span><span class="hl kwa">status</span> files<span class="hl opt">)</span>
  <span class="hl str">&quot;Run git-ls-files -u on FILES and parse the results into STATUS.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">with-temp-buffer</span>
    <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-call-process t <span class="hl str">&quot;ls-files&quot;</span> <span class="hl str">&quot;-z&quot;</span> <span class="hl str">&quot;-u&quot;</span> <span class="hl str">&quot;--&quot;</span> files<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">(</span><span class="hl kwa">unmerged-files</span><span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;[0-7]</span><span class="hl esc">\\</span><span class="hl str">{6</span><span class="hl esc">\\</span><span class="hl str">} [0-9a-f]</span><span class="hl esc">\\</span><span class="hl str">{40</span><span class="hl esc">\\</span><span class="hl str">} [123]</span><span class="hl esc">\t\\</span><span class="hl str">([^\0]+</span><span class="hl esc">\\</span><span class="hl str">)\0&quot;</span> nil t<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">)</span> unmerged-files<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">setq</span> unmerged-files <span class="hl opt">(</span><span class="hl kwa">nreverse</span> unmerged-files<span class="hl opt">))</span>  <span class="hl slc">;; assume it is sorted already</span>
      <span class="hl opt">(</span><span class="hl kwa">git-set-filenames-state</span> status unmerged-files <span class="hl opt">'</span>unmerged<span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-get-exclude-files <span class="hl opt">()</span>
  <span class="hl str">&quot;Get the list of exclude files to pass to git-ls-files.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">(</span><span class="hl kwa">files</span>
        <span class="hl opt">(</span><span class="hl kwa">config</span> <span class="hl opt">(</span><span class="hl kwa">git-config</span> <span class="hl str">&quot;core.excludesfile&quot;</span><span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">file-readable-p</span> <span class="hl str">&quot;.git/info/exclude&quot;</span><span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl str">&quot;.git/info/exclude&quot;</span> files<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">and</span> config <span class="hl opt">(</span><span class="hl kwa">file-readable-p</span> config<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">push</span> config files<span class="hl opt">))</span>
    files<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-run-ls-files-with-excludes <span class="hl opt">(</span><span class="hl kwa">status</span> files default-state <span class="hl opt">&amp;</span>rest options<span class="hl opt">)</span>
  <span class="hl str">&quot;Run git-ls-files on FILES with appropriate --exclude-from options.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">exclude-files</span> <span class="hl opt">(</span><span class="hl kwa">git-get-exclude-files</span><span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-run-ls-files status files default-state <span class="hl str">&quot;--directory&quot;</span> <span class="hl str">&quot;--no-empty-directory&quot;</span>
           <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;--exclude-per-directory=&quot;</span> git-per-dir-ignore-file<span class="hl opt">)</span>
           <span class="hl opt">(</span><span class="hl kwa">append</span> options <span class="hl opt">(</span><span class="hl kwa">mapcar</span> <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">f</span><span class="hl opt">) (</span><span class="hl kwa">concat</span> <span class="hl str">&quot;--exclude-from=&quot;</span> f<span class="hl opt">))</span> exclude-files<span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-update-status-files <span class="hl opt">(&amp;</span>optional files mark-files<span class="hl opt">)</span>
  <span class="hl str">&quot;Update the status of FILES from the index.</span>
<span class="hl str">The FILES list must be sorted.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl slc">;; set the needs-update flag on existing files</span>
  <span class="hl opt">(</span><span class="hl kwa">if</span> files
      <span class="hl opt">(</span><span class="hl kwa">git-status-filenames-map</span>
       git-status <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">info</span><span class="hl opt">) (</span><span class="hl kwa">setf</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>needs-update info<span class="hl opt">)</span> t<span class="hl opt">))</span> files<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">ewoc-map</span> <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">info</span><span class="hl opt">) (</span><span class="hl kwa">setf</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>needs-update info<span class="hl opt">)</span> t<span class="hl opt">)</span> nil<span class="hl opt">)</span> git-status<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">git-call-process</span> nil <span class="hl str">&quot;update-index&quot;</span> <span class="hl str">&quot;--refresh&quot;</span><span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> git-show-uptodate
      <span class="hl opt">(</span><span class="hl kwa">git-run-ls-files-cached</span> git-status nil <span class="hl opt">'</span>uptodate<span class="hl opt">)))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">remaining-files</span>
          <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">git-empty-db-p</span><span class="hl opt">)</span> <span class="hl slc">; we need some special handling for an empty db</span>
	      <span class="hl opt">(</span><span class="hl kwa">git-run-ls-files-cached</span> git-status files <span class="hl opt">'</span>added<span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">git-run-diff-index</span> git-status files<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">git-run-ls-unmerged</span> git-status files<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">or</span> remaining-files <span class="hl opt">(</span><span class="hl kwa">and</span> git-show-unknown <span class="hl opt">(</span><span class="hl kwa">not</span> files<span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">setq</span> remaining-files <span class="hl opt">(</span><span class="hl kwa">git-run-ls-files-with-excludes</span> git-status remaining-files <span class="hl opt">'</span>unknown <span class="hl str">&quot;-o&quot;</span><span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">or</span> remaining-files <span class="hl opt">(</span><span class="hl kwa">and</span> git-show-ignored <span class="hl opt">(</span><span class="hl kwa">not</span> files<span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">setq</span> remaining-files <span class="hl opt">(</span><span class="hl kwa">git-run-ls-files-with-excludes</span> git-status remaining-files <span class="hl opt">'</span>ignored <span class="hl str">&quot;-o&quot;</span> <span class="hl str">&quot;-i&quot;</span><span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">unless</span> files
      <span class="hl opt">(</span><span class="hl kwa">setq</span> remaining-files <span class="hl opt">(</span><span class="hl kwa">git-get-filenames</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-collect</span> git-status <span class="hl opt">#'</span>git-fileinfo-<span class="hl opt">&gt;</span>needs-update<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> remaining-files
      <span class="hl opt">(</span><span class="hl kwa">setq</span> remaining-files <span class="hl opt">(</span><span class="hl kwa">git-run-ls-files-cached</span> git-status remaining-files <span class="hl opt">'</span>uptodate<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">git-set-filenames-state</span> git-status remaining-files nil<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> mark-files <span class="hl opt">(</span><span class="hl kwa">git-mark-files</span> git-status files<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">git-refresh-files</span><span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">git-refresh-ewoc-hf</span> git-status<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-mark-files <span class="hl opt">(</span><span class="hl kwa">status</span> files<span class="hl opt">)</span>
  <span class="hl str">&quot;Mark all the specified FILES, and unmark the others.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">file</span> <span class="hl opt">(</span><span class="hl kwa">and</span> files <span class="hl opt">(</span><span class="hl kwa">pop</span> files<span class="hl opt">)))</span>
        <span class="hl opt">(</span><span class="hl kwa">node</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-nth</span> status <span class="hl num">0</span><span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">while</span> node
      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">info</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-data</span> node<span class="hl opt">)))</span>
        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> file <span class="hl opt">(</span><span class="hl kwa">string-equal</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">)</span> file<span class="hl opt">))</span>
            <span class="hl opt">(</span><span class="hl kwa">progn</span>
              <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked info<span class="hl opt">)</span>
                <span class="hl opt">(</span><span class="hl kwa">setf</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked info<span class="hl opt">)</span> t<span class="hl opt">)</span>
                <span class="hl opt">(</span><span class="hl kwa">setf</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>needs-refresh info<span class="hl opt">)</span> t<span class="hl opt">))</span>
              <span class="hl opt">(</span><span class="hl kwa">setq</span> file <span class="hl opt">(</span><span class="hl kwa">pop</span> files<span class="hl opt">))</span>
              <span class="hl opt">(</span><span class="hl kwa">setq</span> node <span class="hl opt">(</span><span class="hl kwa">ewoc-next</span> status node<span class="hl opt">)))</span>
          <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked info<span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">setf</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked info<span class="hl opt">)</span> nil<span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">setf</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>needs-refresh info<span class="hl opt">)</span> t<span class="hl opt">))</span>
          <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">and</span> file <span class="hl opt">(</span><span class="hl kwa">string-lessp</span> file <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">)))</span>
              <span class="hl opt">(</span><span class="hl kwa">setq</span> file <span class="hl opt">(</span><span class="hl kwa">pop</span> files<span class="hl opt">))</span>
            <span class="hl opt">(</span><span class="hl kwa">setq</span> node <span class="hl opt">(</span><span class="hl kwa">ewoc-next</span> status node<span class="hl opt">))))))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-marked-files <span class="hl opt">()</span>
  <span class="hl str">&quot;Return a list of all marked files, or if none a list containing just the file at cursor position.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-collect</span> git-status <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">info</span><span class="hl opt">) (</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked info<span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-data</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-locate</span> git-status<span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-marked-files-state <span class="hl opt">(&amp;</span>rest states<span class="hl opt">)</span>
  <span class="hl str">&quot;Return a sorted list of marked files that are in the specified states.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">files</span> <span class="hl opt">(</span><span class="hl kwa">git-marked-files</span><span class="hl opt">))</span>
        result<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">dolist</span> <span class="hl opt">(</span><span class="hl kwa">info</span> files<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">memq</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>state info<span class="hl opt">)</span> states<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">push</span> info result<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">nreverse</span> result<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-refresh-files <span class="hl opt">()</span>
  <span class="hl str">&quot;Refresh all files that need it and clear the needs-refresh flag.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">ewoc-map</span>
   <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">info</span><span class="hl opt">)</span>
     <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">refresh</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>needs-refresh info<span class="hl opt">)))</span>
       <span class="hl opt">(</span><span class="hl kwa">setf</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>needs-refresh info<span class="hl opt">)</span> nil<span class="hl opt">)</span>
       refresh<span class="hl opt">))</span>
   git-status<span class="hl opt">)</span>
  <span class="hl slc">; move back to goal column</span>
  <span class="hl opt">(</span><span class="hl kwa">when</span> goal-column <span class="hl opt">(</span><span class="hl kwa">move-to-column</span> goal-column<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-refresh-ewoc-hf <span class="hl opt">(</span><span class="hl kwa">status</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Refresh the ewoc header and footer.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">branch</span> <span class="hl opt">(</span><span class="hl kwa">git-symbolic-ref</span> <span class="hl str">&quot;HEAD&quot;</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">head</span> <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">git-empty-db-p</span><span class="hl opt">)</span> <span class="hl str">&quot;Nothing committed yet&quot;</span>
                <span class="hl opt">(</span><span class="hl kwa">git-get-commit-description</span> <span class="hl str">&quot;HEAD&quot;</span><span class="hl opt">)))</span>
        <span class="hl opt">(</span><span class="hl kwa">merge-heads</span> <span class="hl opt">(</span><span class="hl kwa">git-get-merge-heads</span><span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">ewoc-set-hf</span> status
                 <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Directory:  %s</span><span class="hl esc">\n</span><span class="hl str">Branch:     %s</span><span class="hl esc">\n</span><span class="hl str">Head:       %s%s</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
                         default-directory
                         <span class="hl opt">(</span><span class="hl kwa">if</span> branch
                             <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;^refs/heads/&quot;</span> branch<span class="hl opt">)</span>
                                 <span class="hl opt">(</span><span class="hl kwa">substring</span> branch <span class="hl opt">(</span><span class="hl kwa">match-end</span> <span class="hl num">0</span><span class="hl opt">))</span>
                               branch<span class="hl opt">)</span>
                           <span class="hl str">&quot;none (detached HEAD)&quot;</span><span class="hl opt">)</span>
                         head
                         <span class="hl opt">(</span><span class="hl kwa">if</span> merge-heads
                             <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">Merging:    &quot;</span>
                                     <span class="hl opt">(</span><span class="hl kwa">mapconcat</span> <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">str</span><span class="hl opt">) (</span><span class="hl kwa">git-get-commit-description</span> str<span class="hl opt">))</span> merge-heads <span class="hl str">&quot;</span><span class="hl esc">\n</span>            <span class="hl str">&quot;</span><span class="hl opt">))</span>
                           <span class="hl str">&quot;&quot;</span><span class="hl opt">))</span>
                 <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-nth</span> status <span class="hl num">0</span><span class="hl opt">)</span> <span class="hl str">&quot;&quot;</span> <span class="hl str">&quot;    No changes.&quot;</span><span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-get-filenames <span class="hl opt">(</span><span class="hl kwa">files</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">mapcar</span> <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">info</span><span class="hl opt">) (</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">))</span> files<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-update-index <span class="hl opt">(</span><span class="hl kwa">index-file</span> files<span class="hl opt">)</span>
  <span class="hl str">&quot;Run git-update-index on a list of files.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">process-environment</span> <span class="hl opt">(</span><span class="hl kwa">append</span> <span class="hl opt">(</span><span class="hl kwa">and</span> index-file <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;GIT_INDEX_FILE=&quot;</span> index-file<span class="hl opt">)))</span>
                                     process-environment<span class="hl opt">))</span>
        added deleted modified<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">dolist</span> <span class="hl opt">(</span><span class="hl kwa">info</span> files<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">case</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>state info<span class="hl opt">)</span>
        <span class="hl opt">('</span>added <span class="hl opt">(</span><span class="hl kwa">push</span> info added<span class="hl opt">))</span>
        <span class="hl opt">('</span>deleted <span class="hl opt">(</span><span class="hl kwa">push</span> info deleted<span class="hl opt">))</span>
        <span class="hl opt">('</span>modified <span class="hl opt">(</span><span class="hl kwa">push</span> info modified<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">and</span>
     <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">not</span> added<span class="hl opt">) (</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-call-process-display-error <span class="hl str">&quot;update-index&quot;</span> <span class="hl str">&quot;--add&quot;</span> <span class="hl str">&quot;--&quot;</span> <span class="hl opt">(</span><span class="hl kwa">git-get-filenames</span> added<span class="hl opt">)))</span>
     <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">not</span> deleted<span class="hl opt">) (</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-call-process-display-error <span class="hl str">&quot;update-index&quot;</span> <span class="hl str">&quot;--remove&quot;</span> <span class="hl str">&quot;--&quot;</span> <span class="hl opt">(</span><span class="hl kwa">git-get-filenames</span> deleted<span class="hl opt">)))</span>
     <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">not</span> modified<span class="hl opt">) (</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-call-process-display-error <span class="hl str">&quot;update-index&quot;</span> <span class="hl str">&quot;--&quot;</span> <span class="hl opt">(</span><span class="hl kwa">git-get-filenames</span> modified<span class="hl opt">))))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-run-pre-commit-hook <span class="hl opt">()</span>
  <span class="hl str">&quot;Run the pre-commit hook if any.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">files</span> <span class="hl opt">(</span><span class="hl kwa">git-marked-files-state</span> <span class="hl opt">'</span>added <span class="hl opt">'</span>deleted <span class="hl opt">'</span>modified<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">not</span> files<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">file-executable-p</span> <span class="hl str">&quot;.git/hooks/pre-commit&quot;</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">index-file</span> <span class="hl opt">(</span><span class="hl kwa">make-temp-file</span> <span class="hl str">&quot;gitidx&quot;</span><span class="hl opt">)))</span>
          <span class="hl opt">(</span><span class="hl kwa">unwind-protect</span>
            <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">head-tree</span> <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">git-empty-db-p</span><span class="hl opt">) (</span><span class="hl kwa">git-rev-parse</span> <span class="hl str">&quot;HEAD^{tree}&quot;</span><span class="hl opt">))))</span>
              <span class="hl opt">(</span><span class="hl kwa">git-read-tree</span> head-tree index-file<span class="hl opt">)</span>
              <span class="hl opt">(</span><span class="hl kwa">git-update-index</span> index-file files<span class="hl opt">)</span>
              <span class="hl opt">(</span><span class="hl kwa">git-run-hook</span> <span class="hl str">&quot;pre-commit&quot;</span> <span class="hl opt">`((</span><span class="hl str">&quot;GIT_INDEX_FILE&quot;</span> . <span class="hl opt">,</span>index-file<span class="hl opt">))))</span>
          <span class="hl opt">(</span><span class="hl kwa">delete-file</span> index-file<span class="hl opt">))))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-do-commit <span class="hl opt">()</span>
  <span class="hl str">&quot;Perform the actual commit using the current buffer as log message.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">buffer</span> <span class="hl opt">(</span><span class="hl kwa">current-buffer</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">index-file</span> <span class="hl opt">(</span><span class="hl kwa">make-temp-file</span> <span class="hl str">&quot;gitidx&quot;</span><span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> log-edit-parent-buffer
      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">git-marked-files-state</span> <span class="hl opt">'</span>unmerged<span class="hl opt">)</span>
          <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;You cannot commit unmerged files, resolve them first.&quot;</span><span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">unwind-protect</span>
            <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">files</span> <span class="hl opt">(</span><span class="hl kwa">git-marked-files-state</span> <span class="hl opt">'</span>added <span class="hl opt">'</span>deleted <span class="hl opt">'</span>modified<span class="hl opt">))</span>
                  head tree head-tree<span class="hl opt">)</span>
              <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">git-empty-db-p</span><span class="hl opt">)</span>
                <span class="hl opt">(</span><span class="hl kwa">setq</span> head <span class="hl opt">(</span><span class="hl kwa">git-rev-parse</span> <span class="hl str">&quot;HEAD&quot;</span><span class="hl opt">)</span>
                      head-tree <span class="hl opt">(</span><span class="hl kwa">git-rev-parse</span> <span class="hl str">&quot;HEAD^{tree}&quot;</span><span class="hl opt">)))</span>
              <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Running git commit...&quot;</span><span class="hl opt">)</span>
              <span class="hl opt">(</span><span class="hl kwa">when</span>
                  <span class="hl opt">(</span><span class="hl kwa">and</span>
                   <span class="hl opt">(</span><span class="hl kwa">git-read-tree</span> head-tree index-file<span class="hl opt">)</span>
                   <span class="hl opt">(</span><span class="hl kwa">git-update-index</span> nil files<span class="hl opt">)</span>         <span class="hl slc">;update both the default index</span>
                   <span class="hl opt">(</span><span class="hl kwa">git-update-index</span> index-file files<span class="hl opt">)</span>  <span class="hl slc">;and the temporary one</span>
                   <span class="hl opt">(</span><span class="hl kwa">setq</span> tree <span class="hl opt">(</span><span class="hl kwa">git-write-tree</span> index-file<span class="hl opt">)))</span>
                <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">string-equal</span> tree head-tree<span class="hl opt">))</span>
                        <span class="hl opt">(</span><span class="hl kwa">yes-or-no-p</span> <span class="hl str">&quot;The tree was not modified, do you really want to perform an empty commit? &quot;</span><span class="hl opt">))</span>
                    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">commit</span> <span class="hl opt">(</span><span class="hl kwa">git-commit-tree</span> buffer tree head<span class="hl opt">)))</span>
                      <span class="hl opt">(</span><span class="hl kwa">when</span> commit
                        <span class="hl opt">(</span><span class="hl kwa">condition-case</span> nil <span class="hl opt">(</span><span class="hl kwa">delete-file</span> <span class="hl str">&quot;.git/MERGE_HEAD&quot;</span><span class="hl opt">) (</span><span class="hl kwa">error</span> nil<span class="hl opt">))</span>
                        <span class="hl opt">(</span><span class="hl kwa">condition-case</span> nil <span class="hl opt">(</span><span class="hl kwa">delete-file</span> <span class="hl str">&quot;.git/MERGE_MSG&quot;</span><span class="hl opt">) (</span><span class="hl kwa">error</span> nil<span class="hl opt">))</span>
                        <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> buffer <span class="hl opt">(</span><span class="hl kwa">erase-buffer</span><span class="hl opt">))</span>
                        <span class="hl opt">(</span><span class="hl kwa">git-update-status-files</span> <span class="hl opt">(</span><span class="hl kwa">git-get-filenames</span> files<span class="hl opt">))</span>
                        <span class="hl opt">(</span><span class="hl kwa">git-call-process</span> nil <span class="hl str">&quot;rerere&quot;</span><span class="hl opt">)</span>
                        <span class="hl opt">(</span><span class="hl kwa">git-call-process</span> nil <span class="hl str">&quot;gc&quot;</span> <span class="hl str">&quot;--auto&quot;</span><span class="hl opt">)</span>
                        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Committed %s.&quot;</span> commit<span class="hl opt">)</span>
                        <span class="hl opt">(</span><span class="hl kwa">git-run-hook</span> <span class="hl str">&quot;post-commit&quot;</span> nil<span class="hl opt">)))</span>
                  <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Commit aborted.&quot;</span><span class="hl opt">))))</span>
          <span class="hl opt">(</span><span class="hl kwa">delete-file</span> index-file<span class="hl opt">))))))</span>


<span class="hl slc">;;;; Interactive functions</span>
<span class="hl slc">;;;; ------------------------------------------------------------</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-mark-file <span class="hl opt">()</span>
  <span class="hl str">&quot;Mark the file that the cursor is on and move to the next one.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">pos</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-locate</span> git-status<span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">info</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-data</span> pos<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">setf</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked info<span class="hl opt">)</span> t<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">ewoc-invalidate</span> git-status pos<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">ewoc-goto-next</span> git-status <span class="hl num">1</span><span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-unmark-file <span class="hl opt">()</span>
  <span class="hl str">&quot;Unmark the file that the cursor is on and move to the next one.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">pos</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-locate</span> git-status<span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">info</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-data</span> pos<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">setf</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked info<span class="hl opt">)</span> nil<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">ewoc-invalidate</span> git-status pos<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">ewoc-goto-next</span> git-status <span class="hl num">1</span><span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-unmark-file-up <span class="hl opt">()</span>
  <span class="hl str">&quot;Unmark the file that the cursor is on and move to the previous one.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">pos</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-locate</span> git-status<span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">info</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-data</span> pos<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">setf</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked info<span class="hl opt">)</span> nil<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">ewoc-invalidate</span> git-status pos<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">ewoc-goto-prev</span> git-status <span class="hl num">1</span><span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-mark-all <span class="hl opt">()</span>
  <span class="hl str">&quot;Mark all files.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">ewoc-map</span> <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">info</span><span class="hl opt">) (</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked info<span class="hl opt">)</span>
                             <span class="hl opt">(</span><span class="hl kwa">setf</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked info<span class="hl opt">)</span> t<span class="hl opt">)))</span> git-status<span class="hl opt">)</span>
  <span class="hl slc">; move back to goal column after invalidate</span>
  <span class="hl opt">(</span><span class="hl kwa">when</span> goal-column <span class="hl opt">(</span><span class="hl kwa">move-to-column</span> goal-column<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-unmark-all <span class="hl opt">()</span>
  <span class="hl str">&quot;Unmark all files.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">ewoc-map</span> <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">info</span><span class="hl opt">) (</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked info<span class="hl opt">)</span>
                             <span class="hl opt">(</span><span class="hl kwa">setf</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked info<span class="hl opt">)</span> nil<span class="hl opt">)</span>
                             t<span class="hl opt">))</span> git-status<span class="hl opt">)</span>
  <span class="hl slc">; move back to goal column after invalidate</span>
  <span class="hl opt">(</span><span class="hl kwa">when</span> goal-column <span class="hl opt">(</span><span class="hl kwa">move-to-column</span> goal-column<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-toggle-all-marks <span class="hl opt">()</span>
  <span class="hl str">&quot;Toggle all file marks.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">ewoc-map</span> <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">info</span><span class="hl opt">) (</span><span class="hl kwa">setf</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked info<span class="hl opt">) (</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>marked info<span class="hl opt">)))</span> t<span class="hl opt">)</span> git-status<span class="hl opt">)</span>
  <span class="hl slc">; move back to goal column after invalidate</span>
  <span class="hl opt">(</span><span class="hl kwa">when</span> goal-column <span class="hl opt">(</span><span class="hl kwa">move-to-column</span> goal-column<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-next-file <span class="hl opt">(&amp;</span>optional n<span class="hl opt">)</span>
  <span class="hl str">&quot;Move the selection down N files.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl str">&quot;p&quot;</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">ewoc-goto-next</span> git-status n<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-prev-file <span class="hl opt">(&amp;</span>optional n<span class="hl opt">)</span>
  <span class="hl str">&quot;Move the selection up N files.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl str">&quot;p&quot;</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">ewoc-goto-prev</span> git-status n<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-next-unmerged-file <span class="hl opt">(&amp;</span>optional n<span class="hl opt">)</span>
  <span class="hl str">&quot;Move the selection down N unmerged files.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl str">&quot;p&quot;</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">last</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-locate</span> git-status<span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">node</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-next</span> git-status last<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> node <span class="hl opt">(&gt;</span> n <span class="hl num">0</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">'</span>unmerged <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>state <span class="hl opt">(</span><span class="hl kwa">ewoc-data</span> node<span class="hl opt">)))</span>
        <span class="hl opt">(</span><span class="hl kwa">setq</span> n <span class="hl opt">(</span><span class="hl kwa">1-</span> n<span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">setq</span> last node<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">setq</span> node <span class="hl opt">(</span><span class="hl kwa">ewoc-next</span> git-status node<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">ewoc-goto-node</span> git-status last<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-prev-unmerged-file <span class="hl opt">(&amp;</span>optional n<span class="hl opt">)</span>
  <span class="hl str">&quot;Move the selection up N unmerged files.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl str">&quot;p&quot;</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">last</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-locate</span> git-status<span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">node</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-prev</span> git-status last<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> node <span class="hl opt">(&gt;</span> n <span class="hl num">0</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">'</span>unmerged <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>state <span class="hl opt">(</span><span class="hl kwa">ewoc-data</span> node<span class="hl opt">)))</span>
        <span class="hl opt">(</span><span class="hl kwa">setq</span> n <span class="hl opt">(</span><span class="hl kwa">1-</span> n<span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">setq</span> last node<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">setq</span> node <span class="hl opt">(</span><span class="hl kwa">ewoc-prev</span> git-status node<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">ewoc-goto-node</span> git-status last<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-insert-file <span class="hl opt">(</span><span class="hl kwa">file</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Insert file(s) into the git-status buffer.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl str">&quot;fInsert file: &quot;</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">git-update-status-files</span> <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">file-relative-name</span> file<span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-add-file <span class="hl opt">()</span>
  <span class="hl str">&quot;Add marked file(s) to the index cache.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">files</span> <span class="hl opt">(</span><span class="hl kwa">git-get-filenames</span> <span class="hl opt">(</span><span class="hl kwa">git-marked-files-state</span> <span class="hl opt">'</span>unknown <span class="hl opt">'</span>ignored <span class="hl opt">'</span>unmerged<span class="hl opt">))))</span>
    <span class="hl slc">;; FIXME: add support for directories</span>
    <span class="hl opt">(</span><span class="hl kwa">unless</span> files
      <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">file-relative-name</span> <span class="hl opt">(</span><span class="hl kwa">read-file-name</span> <span class="hl str">&quot;File to add: &quot;</span> nil nil t<span class="hl opt">))</span> files<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">'</span>git-call-process-display-error <span class="hl str">&quot;update-index&quot;</span> <span class="hl str">&quot;--add&quot;</span> <span class="hl str">&quot;--&quot;</span> files<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">git-update-status-files</span> files<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">git-success-message</span> <span class="hl str">&quot;Added&quot;</span> files<span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-ignore-file <span class="hl opt">()</span>
  <span class="hl str">&quot;Add marked file(s) to the ignore list.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">files</span> <span class="hl opt">(</span><span class="hl kwa">git-get-filenames</span> <span class="hl opt">(</span><span class="hl kwa">git-marked-files-state</span> <span class="hl opt">'</span>unknown<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">unless</span> files
      <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">file-relative-name</span> <span class="hl opt">(</span><span class="hl kwa">read-file-name</span> <span class="hl str">&quot;File to ignore: &quot;</span> nil nil t<span class="hl opt">))</span> files<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">dolist</span> <span class="hl opt">(</span><span class="hl kwa">f</span> files<span class="hl opt">) (</span><span class="hl kwa">git-append-to-ignore</span> f<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">git-update-status-files</span> files<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">git-success-message</span> <span class="hl str">&quot;Ignored&quot;</span> files<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-remove-file <span class="hl opt">()</span>
  <span class="hl str">&quot;Remove the marked file(s).&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">files</span> <span class="hl opt">(</span><span class="hl kwa">git-get-filenames</span> <span class="hl opt">(</span><span class="hl kwa">git-marked-files-state</span> <span class="hl opt">'</span>added <span class="hl opt">'</span>modified <span class="hl opt">'</span>unknown <span class="hl opt">'</span>uptodate <span class="hl opt">'</span>ignored<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">unless</span> files
      <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">file-relative-name</span> <span class="hl opt">(</span><span class="hl kwa">read-file-name</span> <span class="hl str">&quot;File to remove: &quot;</span> nil nil t<span class="hl opt">))</span> files<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">yes-or-no-p</span>
         <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">cdr</span> files<span class="hl opt">)</span>
             <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Remove %d files? &quot;</span> <span class="hl opt">(</span><span class="hl kwa">length</span> files<span class="hl opt">))</span>
           <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Remove %s? &quot;</span> <span class="hl opt">(</span><span class="hl kwa">car</span> files<span class="hl opt">))))</span>
        <span class="hl opt">(</span><span class="hl kwa">progn</span>
          <span class="hl opt">(</span><span class="hl kwa">dolist</span> <span class="hl opt">(</span><span class="hl kwa">name</span> files<span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">ignore-errors</span>
              <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">file-directory-p</span> name<span class="hl opt">)</span>
                  <span class="hl opt">(</span><span class="hl kwa">delete-directory</span> name<span class="hl opt">)</span>
                <span class="hl opt">(</span><span class="hl kwa">delete-file</span> name<span class="hl opt">))))</span>
          <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">'</span>git-call-process-display-error <span class="hl str">&quot;update-index&quot;</span> <span class="hl str">&quot;--remove&quot;</span> <span class="hl str">&quot;--&quot;</span> files<span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">git-update-status-files</span> files<span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">git-success-message</span> <span class="hl str">&quot;Removed&quot;</span> files<span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Aborting&quot;</span><span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-revert-file <span class="hl opt">()</span>
  <span class="hl str">&quot;Revert changes to the marked file(s).&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">files</span> <span class="hl opt">(</span><span class="hl kwa">git-marked-files-state</span> <span class="hl opt">'</span>added <span class="hl opt">'</span>deleted <span class="hl opt">'</span>modified <span class="hl opt">'</span>unmerged<span class="hl opt">))</span>
        added modified<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">and</span> files
               <span class="hl opt">(</span><span class="hl kwa">yes-or-no-p</span>
                <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">cdr</span> files<span class="hl opt">)</span>
                    <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Revert %d files? &quot;</span> <span class="hl opt">(</span><span class="hl kwa">length</span> files<span class="hl opt">))</span>
                  <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Revert %s? &quot;</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name <span class="hl opt">(</span><span class="hl kwa">car</span> files<span class="hl opt">))))))</span>
      <span class="hl opt">(</span><span class="hl kwa">dolist</span> <span class="hl opt">(</span><span class="hl kwa">info</span> files<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">case</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>state info<span class="hl opt">)</span>
          <span class="hl opt">('</span>added <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">)</span> added<span class="hl opt">))</span>
          <span class="hl opt">('</span>deleted <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">)</span> modified<span class="hl opt">))</span>
          <span class="hl opt">('</span>unmerged <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">)</span> modified<span class="hl opt">))</span>
          <span class="hl opt">('</span>modified <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">)</span> modified<span class="hl opt">))))</span>
      <span class="hl slc">;; check if a buffer contains one of the files and isn't saved</span>
      <span class="hl opt">(</span><span class="hl kwa">dolist</span> <span class="hl opt">(</span><span class="hl kwa">file</span> modified<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">buffer</span> <span class="hl opt">(</span><span class="hl kwa">get-file-buffer</span> file<span class="hl opt">)))</span>
          <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">and</span> buffer <span class="hl opt">(</span><span class="hl kwa">buffer-modified-p</span> buffer<span class="hl opt">))</span>
            <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Buffer %s is modified. Please kill or save modified buffers before reverting.&quot;</span> <span class="hl opt">(</span><span class="hl kwa">buffer-name</span> buffer<span class="hl opt">)))))</span>
      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">ok</span> <span class="hl opt">(</span><span class="hl kwa">and</span>
                 <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">not</span> added<span class="hl opt">)</span>
                     <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">'</span>git-call-process-display-error <span class="hl str">&quot;update-index&quot;</span> <span class="hl str">&quot;--force-remove&quot;</span> <span class="hl str">&quot;--&quot;</span> added<span class="hl opt">))</span>
                 <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">not</span> modified<span class="hl opt">)</span>
                     <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">'</span>git-call-process-display-error <span class="hl str">&quot;checkout&quot;</span> <span class="hl str">&quot;HEAD&quot;</span> modified<span class="hl opt">))))</span>
            <span class="hl opt">(</span><span class="hl kwa">names</span> <span class="hl opt">(</span><span class="hl kwa">git-get-filenames</span> files<span class="hl opt">)))</span>
        <span class="hl opt">(</span><span class="hl kwa">git-update-status-files</span> names<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">when</span> ok
          <span class="hl opt">(</span><span class="hl kwa">dolist</span> <span class="hl opt">(</span><span class="hl kwa">file</span> modified<span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">buffer</span> <span class="hl opt">(</span><span class="hl kwa">get-file-buffer</span> file<span class="hl opt">)))</span>
              <span class="hl opt">(</span><span class="hl kwa">when</span> buffer <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> buffer <span class="hl opt">(</span><span class="hl kwa">revert-buffer</span> t t t<span class="hl opt">)))))</span>
          <span class="hl opt">(</span><span class="hl kwa">git-success-message</span> <span class="hl str">&quot;Reverted&quot;</span> names<span class="hl opt">))))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-remove-handled <span class="hl opt">()</span>
  <span class="hl str">&quot;Remove handled files from the status list.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">ewoc-filter</span> git-status
               <span class="hl opt">(</span><span class="hl kwa">lambda</span> <span class="hl opt">(</span><span class="hl kwa">info</span><span class="hl opt">)</span>
                 <span class="hl opt">(</span><span class="hl kwa">case</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>state info<span class="hl opt">)</span>
                   <span class="hl opt">('</span>ignored git-show-ignored<span class="hl opt">)</span>
                   <span class="hl opt">('</span>uptodate git-show-uptodate<span class="hl opt">)</span>
                   <span class="hl opt">('</span>unknown git-show-unknown<span class="hl opt">)</span>
                   <span class="hl opt">(</span><span class="hl kwa">t</span> t<span class="hl opt">))))</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-nth</span> git-status <span class="hl num">0</span><span class="hl opt">)</span>  <span class="hl slc">; refresh header if list is empty</span>
    <span class="hl opt">(</span><span class="hl kwa">git-refresh-ewoc-hf</span> git-status<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-toggle-show-uptodate <span class="hl opt">()</span>
  <span class="hl str">&quot;Toogle the option for showing up-to-date files.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">setq</span> git-show-uptodate <span class="hl opt">(</span><span class="hl kwa">not</span> git-show-uptodate<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">git-refresh-status</span><span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">git-remove-handled</span><span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-toggle-show-ignored <span class="hl opt">()</span>
  <span class="hl str">&quot;Toogle the option for showing ignored files.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">setq</span> git-show-ignored <span class="hl opt">(</span><span class="hl kwa">not</span> git-show-ignored<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">progn</span>
        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Inserting ignored files...&quot;</span><span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">git-run-ls-files-with-excludes</span> git-status nil <span class="hl opt">'</span>ignored <span class="hl str">&quot;-o&quot;</span> <span class="hl str">&quot;-i&quot;</span><span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">git-refresh-files</span><span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">git-refresh-ewoc-hf</span> git-status<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Inserting ignored files...done&quot;</span><span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">git-remove-handled</span><span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-toggle-show-unknown <span class="hl opt">()</span>
  <span class="hl str">&quot;Toogle the option for showing unknown files.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">setq</span> git-show-unknown <span class="hl opt">(</span><span class="hl kwa">not</span> git-show-unknown<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">progn</span>
        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Inserting unknown files...&quot;</span><span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">git-run-ls-files-with-excludes</span> git-status nil <span class="hl opt">'</span>unknown <span class="hl str">&quot;-o&quot;</span><span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">git-refresh-files</span><span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">git-refresh-ewoc-hf</span> git-status<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Inserting unknown files...done&quot;</span><span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">git-remove-handled</span><span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-expand-directory <span class="hl opt">(</span><span class="hl kwa">info</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Expand the directory represented by INFO to list its files.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">lsh</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>new-perm info<span class="hl opt">)</span> -<span class="hl num">9</span><span class="hl opt">)</span> ?<span class="hl esc">\110</span><span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">dir</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">git-set-filenames-state</span> git-status <span class="hl opt">(</span><span class="hl kwa">list</span> dir<span class="hl opt">)</span> nil<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">git-run-ls-files-with-excludes</span> git-status <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> dir <span class="hl str">&quot;/&quot;</span><span class="hl opt">)) '</span>unknown <span class="hl str">&quot;-o&quot;</span><span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">git-refresh-files</span><span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">git-refresh-ewoc-hf</span> git-status<span class="hl opt">)</span>
      t<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-setup-diff-buffer <span class="hl opt">(</span><span class="hl kwa">buffer</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Setup a buffer for displaying a diff.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">dir</span> default-directory<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> buffer
      <span class="hl opt">(</span><span class="hl kwa">diff-mode</span><span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">setq</span> default-directory dir<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">setq</span> buffer-read-only t<span class="hl opt">)))</span>
  <span class="hl opt">(</span><span class="hl kwa">display-buffer</span> buffer<span class="hl opt">)</span>
  <span class="hl slc">; shrink window only if it displays the status buffer</span>
  <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">(</span><span class="hl kwa">window-buffer</span><span class="hl opt">) (</span><span class="hl kwa">current-buffer</span><span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">shrink-window-if-larger-than-buffer</span><span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-diff-file <span class="hl opt">()</span>
  <span class="hl str">&quot;Diff the marked file(s) against HEAD.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">files</span> <span class="hl opt">(</span><span class="hl kwa">git-marked-files</span><span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">git-setup-diff-buffer</span>
     <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-run-command-buffer <span class="hl str">&quot;*git-diff*&quot;</span> <span class="hl str">&quot;diff-index&quot;</span> <span class="hl str">&quot;-p&quot;</span> <span class="hl str">&quot;-M&quot;</span> <span class="hl str">&quot;HEAD&quot;</span> <span class="hl str">&quot;--&quot;</span> <span class="hl opt">(</span><span class="hl kwa">git-get-filenames</span> files<span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-diff-file-merge-head <span class="hl opt">(</span><span class="hl kwa">arg</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Diff the marked file(s) against the first merge head (or the nth one with a numeric prefix).&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl str">&quot;p&quot;</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">files</span> <span class="hl opt">(</span><span class="hl kwa">git-marked-files</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">merge-heads</span> <span class="hl opt">(</span><span class="hl kwa">git-get-merge-heads</span><span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">unless</span> merge-heads <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;No merge in progress&quot;</span><span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">git-setup-diff-buffer</span>
     <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-run-command-buffer <span class="hl str">&quot;*git-diff*&quot;</span> <span class="hl str">&quot;diff-index&quot;</span> <span class="hl str">&quot;-p&quot;</span> <span class="hl str">&quot;-M&quot;</span>
            <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">nth</span> <span class="hl opt">(</span><span class="hl kwa">1-</span> arg<span class="hl opt">)</span> merge-heads<span class="hl opt">)</span> <span class="hl str">&quot;HEAD&quot;</span><span class="hl opt">)</span> <span class="hl str">&quot;--&quot;</span> <span class="hl opt">(</span><span class="hl kwa">git-get-filenames</span> files<span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-diff-unmerged-file <span class="hl opt">(</span><span class="hl kwa">stage</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Diff the marked unmerged file(s) against the specified stage.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">files</span> <span class="hl opt">(</span><span class="hl kwa">git-marked-files</span><span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">git-setup-diff-buffer</span>
     <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-run-command-buffer <span class="hl str">&quot;*git-diff*&quot;</span> <span class="hl str">&quot;diff-files&quot;</span> <span class="hl str">&quot;-p&quot;</span> stage <span class="hl str">&quot;--&quot;</span> <span class="hl opt">(</span><span class="hl kwa">git-get-filenames</span> files<span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-diff-file-base <span class="hl opt">()</span>
  <span class="hl str">&quot;Diff the marked unmerged file(s) against the common base file.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">git-diff-unmerged-file</span> <span class="hl str">&quot;-1&quot;</span><span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-diff-file-mine <span class="hl opt">()</span>
  <span class="hl str">&quot;Diff the marked unmerged file(s) against my pre-merge version.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">git-diff-unmerged-file</span> <span class="hl str">&quot;-2&quot;</span><span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-diff-file-other <span class="hl opt">()</span>
  <span class="hl str">&quot;Diff the marked unmerged file(s) against the other's pre-merge version.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">git-diff-unmerged-file</span> <span class="hl str">&quot;-3&quot;</span><span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-diff-file-combined <span class="hl opt">()</span>
  <span class="hl str">&quot;Do a combined diff of the marked unmerged file(s).&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">git-diff-unmerged-file</span> <span class="hl str">&quot;-c&quot;</span><span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-diff-file-idiff <span class="hl opt">()</span>
  <span class="hl str">&quot;Perform an interactive diff on the current file.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">files</span> <span class="hl opt">(</span><span class="hl kwa">git-marked-files-state</span> <span class="hl opt">'</span>added <span class="hl opt">'</span>deleted <span class="hl opt">'</span>modified<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl num">1</span> <span class="hl opt">(</span><span class="hl kwa">length</span> files<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Cannot perform an interactive diff on multiple files.&quot;</span><span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">filename</span> <span class="hl opt">(</span><span class="hl kwa">car</span> <span class="hl opt">(</span><span class="hl kwa">git-get-filenames</span> files<span class="hl opt">)))</span>
           <span class="hl opt">(</span><span class="hl kwa">buff1</span> <span class="hl opt">(</span><span class="hl kwa">find-file-noselect</span> filename<span class="hl opt">))</span>
           <span class="hl opt">(</span><span class="hl kwa">buff2</span> <span class="hl opt">(</span><span class="hl kwa">git-run-command-buffer</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> filename <span class="hl str">&quot;.~HEAD~&quot;</span><span class="hl opt">)</span> <span class="hl str">&quot;cat-file&quot;</span> <span class="hl str">&quot;blob&quot;</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;HEAD:&quot;</span> filename<span class="hl opt">))))</span>
      <span class="hl opt">(</span><span class="hl kwa">ediff-buffers</span> buff1 buff2<span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-log-file <span class="hl opt">()</span>
  <span class="hl str">&quot;Display a log of changes to the marked file(s).&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">files</span> <span class="hl opt">(</span><span class="hl kwa">git-marked-files</span><span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">coding-system-for-read</span> git-commits-coding-system<span class="hl opt">)</span>
         <span class="hl opt">(</span><span class="hl kwa">buffer</span> <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-run-command-buffer <span class="hl str">&quot;*git-log*&quot;</span> <span class="hl str">&quot;rev-list&quot;</span> <span class="hl str">&quot;--pretty&quot;</span> <span class="hl str">&quot;HEAD&quot;</span> <span class="hl str">&quot;--&quot;</span> <span class="hl opt">(</span><span class="hl kwa">git-get-filenames</span> files<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> buffer
      <span class="hl slc">; (git-log-mode)  FIXME: implement log mode</span>
      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">setq</span> buffer-read-only t<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">display-buffer</span> buffer<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-log-edit-files <span class="hl opt">()</span>
  <span class="hl str">&quot;Return a list of marked files for use in the log-edit buffer.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> log-edit-parent-buffer
    <span class="hl opt">(</span><span class="hl kwa">git-get-filenames</span> <span class="hl opt">(</span><span class="hl kwa">git-marked-files-state</span> <span class="hl opt">'</span>added <span class="hl opt">'</span>deleted <span class="hl opt">'</span>modified<span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-log-edit-diff <span class="hl opt">()</span>
  <span class="hl str">&quot;Run a diff of the current files being committed from a log-edit buffer.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> log-edit-parent-buffer
    <span class="hl opt">(</span><span class="hl kwa">git-diff-file</span><span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-append-sign-off <span class="hl opt">(</span><span class="hl kwa">name</span> email<span class="hl opt">)</span>
  <span class="hl str">&quot;Append a Signed-off-by entry to the current buffer, avoiding duplicates.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">sign-off</span> <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Signed-off-by: %s &lt;%s&gt;&quot;</span> name email<span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">case-fold-search</span> t<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;^&quot;</span> <span class="hl opt">(</span><span class="hl kwa">regexp-quote</span> sign-off<span class="hl opt">))</span> nil t<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;^Signed-off-by: &quot;</span> nil t<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">setq</span> sign-off <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> sign-off<span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">insert</span> sign-off <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-setup-log-buffer <span class="hl opt">(</span><span class="hl kwa">buffer</span> <span class="hl opt">&amp;</span>optional merge-heads author-name author-email subject date msg<span class="hl opt">)</span>
  <span class="hl str">&quot;Setup the log buffer for a commit.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">dir</span> default-directory<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">committer-name</span> <span class="hl opt">(</span><span class="hl kwa">git-get-committer-name</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">committer-email</span> <span class="hl opt">(</span><span class="hl kwa">git-get-committer-email</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">sign-off</span> git-append-signed-off-by<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> buffer
      <span class="hl opt">(</span><span class="hl kwa">cd</span> dir<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">erase-buffer</span><span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">insert</span>
       <span class="hl opt">(</span><span class="hl kwa">propertize</span>
        <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Author: %s &lt;%s&gt;</span><span class="hl esc">\n</span><span class="hl str">%s%s&quot;</span>
                <span class="hl opt">(</span><span class="hl kwa">or</span> author-name committer-name<span class="hl opt">)</span>
                <span class="hl opt">(</span><span class="hl kwa">or</span> author-email committer-email<span class="hl opt">)</span>
                <span class="hl opt">(</span><span class="hl kwa">if</span> date <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Date: %s</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> date<span class="hl opt">)</span> <span class="hl str">&quot;&quot;</span><span class="hl opt">)</span>
                <span class="hl opt">(</span><span class="hl kwa">if</span> merge-heads
                    <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Merge: %s</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
                            <span class="hl opt">(</span><span class="hl kwa">mapconcat</span> <span class="hl opt">'</span>identity merge-heads <span class="hl str">&quot; &quot;</span><span class="hl opt">))</span>
                  <span class="hl str">&quot;&quot;</span><span class="hl opt">))</span>
        <span class="hl opt">'</span>face <span class="hl opt">'</span>git-header-face<span class="hl opt">)</span>
       <span class="hl opt">(</span><span class="hl kwa">propertize</span> git-log-msg-separator <span class="hl opt">'</span>face <span class="hl opt">'</span>git-separator-face<span class="hl opt">)</span>
       <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">when</span> subject <span class="hl opt">(</span><span class="hl kwa">insert</span> subject <span class="hl str">&quot;</span><span class="hl esc">\n\n</span><span class="hl str">&quot;</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">cond</span> <span class="hl opt">(</span><span class="hl kwa">msg</span> <span class="hl opt">(</span><span class="hl kwa">insert</span> msg <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">))</span>
            <span class="hl opt">((</span><span class="hl kwa">file-readable-p</span> <span class="hl str">&quot;.git/rebase-apply/msg&quot;</span><span class="hl opt">)</span>
             <span class="hl opt">(</span><span class="hl kwa">insert-file-contents</span> <span class="hl str">&quot;.git/rebase-apply/msg&quot;</span><span class="hl opt">))</span>
            <span class="hl opt">((</span><span class="hl kwa">file-readable-p</span> <span class="hl str">&quot;.git/MERGE_MSG&quot;</span><span class="hl opt">)</span>
             <span class="hl opt">(</span><span class="hl kwa">insert-file-contents</span> <span class="hl str">&quot;.git/MERGE_MSG&quot;</span><span class="hl opt">)))</span>
      <span class="hl slc">; delete empty lines at end</span>
      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">+</span><span class="hl esc">\\</span><span class="hl str">'&quot;</span> nil t<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">replace-match</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> t t<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">when</span> sign-off <span class="hl opt">(</span><span class="hl kwa">git-append-sign-off</span> committer-name committer-email<span class="hl opt">)))</span>
    buffer<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">define-derived-mode</span> git-log-edit-mode log-edit-mode <span class="hl str">&quot;Git-Log-Edit&quot;</span>
  <span class="hl str">&quot;Major mode for editing git log messages.</span>
<span class="hl str"></span>
<span class="hl str">Set up git-specific `font-lock-keywords' for `log-edit-mode'.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">set</span> <span class="hl opt">(</span><span class="hl kwa">make-local-variable</span> <span class="hl opt">'</span>font-lock-defaults<span class="hl opt">)</span>
       <span class="hl opt">'(</span><span class="hl kwa">git-log-edit-font-lock-keywords</span> t t<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-commit-file <span class="hl opt">()</span>
  <span class="hl str">&quot;Commit the marked file(s), asking for a commit message.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">git-run-pre-commit-hook</span><span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">buffer</span> <span class="hl opt">(</span><span class="hl kwa">get-buffer-create</span> <span class="hl str">&quot;*git-commit*&quot;</span><span class="hl opt">))</span>
          <span class="hl opt">(</span><span class="hl kwa">coding-system</span> <span class="hl opt">(</span><span class="hl kwa">git-get-commits-coding-system</span><span class="hl opt">))</span>
          author-name author-email subject date<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl num">0</span> <span class="hl opt">(</span><span class="hl kwa">buffer-size</span> buffer<span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">file-readable-p</span> <span class="hl str">&quot;.git/rebase-apply/info&quot;</span><span class="hl opt">)</span>
          <span class="hl opt">(</span><span class="hl kwa">with-temp-buffer</span>
            <span class="hl opt">(</span><span class="hl kwa">insert-file-contents</span> <span class="hl str">&quot;.git/rebase-apply/info&quot;</span><span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
            <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;^Author:</span> <span class="hl esc">\\</span><span class="hl str">(.*</span><span class="hl esc">\\</span><span class="hl str">)</span><span class="hl esc">\n</span><span class="hl str">Email:</span> <span class="hl esc">\\</span><span class="hl str">(.*</span><span class="hl esc">\\</span><span class="hl str">)$&quot;</span> nil t<span class="hl opt">)</span>
              <span class="hl opt">(</span><span class="hl kwa">setq</span> author-name <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">))</span>
              <span class="hl opt">(</span><span class="hl kwa">setq</span> author-email <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">2</span><span class="hl opt">)))</span>
            <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
            <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;^Subject:</span> <span class="hl esc">\\</span><span class="hl str">(.*</span><span class="hl esc">\\</span><span class="hl str">)$&quot;</span> nil t<span class="hl opt">)</span>
              <span class="hl opt">(</span><span class="hl kwa">setq</span> subject <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">)))</span>
            <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
            <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;^Date:</span> <span class="hl esc">\\</span><span class="hl str">(.*</span><span class="hl esc">\\</span><span class="hl str">)$&quot;</span> nil t<span class="hl opt">)</span>
              <span class="hl opt">(</span><span class="hl kwa">setq</span> date <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">)))))</span>
        <span class="hl opt">(</span><span class="hl kwa">git-setup-log-buffer</span> buffer <span class="hl opt">(</span><span class="hl kwa">git-get-merge-heads</span><span class="hl opt">)</span> author-name author-email subject date<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">boundp</span> <span class="hl opt">'</span>log-edit-diff-function<span class="hl opt">)</span>
	  <span class="hl opt">(</span><span class="hl kwa">log-edit</span> <span class="hl opt">'</span>git-do-commit nil <span class="hl opt">'((</span><span class="hl kwa">log-edit-listfun</span> . git-log-edit-files<span class="hl opt">)</span>
					 <span class="hl opt">(</span><span class="hl kwa">log-edit-diff-function</span> . git-log-edit-diff<span class="hl opt">))</span> buffer <span class="hl opt">'</span>git-log-edit-mode<span class="hl opt">)</span>
	<span class="hl opt">(</span><span class="hl kwa">log-edit</span> <span class="hl opt">'</span>git-do-commit nil <span class="hl opt">'</span>git-log-edit-files buffer
                  <span class="hl opt">'</span>git-log-edit-mode<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">setq</span> paragraph-separate <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl opt">(</span><span class="hl kwa">regexp-quote</span> git-log-msg-separator<span class="hl opt">)</span> <span class="hl str">&quot;$</span><span class="hl esc">\\</span><span class="hl str">|Author:</span> <span class="hl esc">\\</span><span class="hl str">|Date:</span> <span class="hl esc">\\</span><span class="hl str">|Merge:</span> <span class="hl esc">\\</span><span class="hl str">|Signed-off-by:</span> <span class="hl esc">\\</span><span class="hl str">|</span><span class="hl esc">\f\\</span><span class="hl str">|[ 	]*$&quot;</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">setq</span> buffer-file-coding-system coding-system<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl opt">(</span><span class="hl kwa">regexp-quote</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> git-log-msg-separator <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">))</span> nil t<span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-setup-commit-buffer <span class="hl opt">(</span><span class="hl kwa">commit</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Setup the commit buffer with the contents of COMMIT.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">(</span><span class="hl kwa">parents</span> author-name author-email subject date msg<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">with-temp-buffer</span>
      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">coding-system</span> <span class="hl opt">(</span><span class="hl kwa">git-get-logoutput-coding-system</span><span class="hl opt">)))</span>
        <span class="hl opt">(</span><span class="hl kwa">git-call-process</span> t <span class="hl str">&quot;log&quot;</span> <span class="hl str">&quot;-1&quot;</span> <span class="hl str">&quot;--pretty=medium&quot;</span> <span class="hl str">&quot;--abbrev=40&quot;</span> commit<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;^Merge: *</span><span class="hl esc">\\</span><span class="hl str">(.*</span><span class="hl esc">\\</span><span class="hl str">)$&quot;</span> nil t<span class="hl opt">)</span>
          <span class="hl opt">(</span><span class="hl kwa">setq</span> parents <span class="hl opt">(</span><span class="hl kwa">cdr</span> <span class="hl opt">(</span><span class="hl kwa">split-string</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">)</span> <span class="hl str">&quot; +&quot;</span><span class="hl opt">))))</span>
        <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;^Author: *</span><span class="hl esc">\\</span><span class="hl str">(.*</span><span class="hl esc">\\</span><span class="hl str">) &lt;</span><span class="hl esc">\\</span><span class="hl str">(.*</span><span class="hl esc">\\</span><span class="hl str">)&gt;$&quot;</span> nil t<span class="hl opt">)</span>
          <span class="hl opt">(</span><span class="hl kwa">setq</span> author-name <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">))</span>
          <span class="hl opt">(</span><span class="hl kwa">setq</span> author-email <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">2</span><span class="hl opt">)))</span>
        <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;^Date: *</span><span class="hl esc">\\</span><span class="hl str">(.*</span><span class="hl esc">\\</span><span class="hl str">)$&quot;</span> nil t<span class="hl opt">)</span>
          <span class="hl opt">(</span><span class="hl kwa">setq</span> date <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">)))</span>
        <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;^</span>    <span class="hl esc">\\</span><span class="hl str">(.*</span><span class="hl esc">\\</span><span class="hl str">)$&quot;</span> nil t<span class="hl opt">)</span>
          <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">)</span> msg<span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">setq</span> msg <span class="hl opt">(</span><span class="hl kwa">nreverse</span> msg<span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">setq</span> subject <span class="hl opt">(</span><span class="hl kwa">pop</span> msg<span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> msg <span class="hl opt">(</span><span class="hl kwa">zerop</span> <span class="hl opt">(</span><span class="hl kwa">length</span> <span class="hl opt">(</span><span class="hl kwa">car</span> msg<span class="hl opt">))) (</span><span class="hl kwa">pop</span> msg<span class="hl opt">)))))</span>
    <span class="hl opt">(</span><span class="hl kwa">git-setup-log-buffer</span> <span class="hl opt">(</span><span class="hl kwa">get-buffer-create</span> <span class="hl str">&quot;*git-commit*&quot;</span><span class="hl opt">)</span>
                          parents author-name author-email subject date
                          <span class="hl opt">(</span><span class="hl kwa">mapconcat</span> <span class="hl opt">#'</span>identity msg <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-get-commit-files <span class="hl opt">(</span><span class="hl kwa">commit</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Retrieve a sorted list of files modified by COMMIT.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">(</span><span class="hl kwa">files</span><span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">with-temp-buffer</span>
      <span class="hl opt">(</span><span class="hl kwa">git-call-process</span> t <span class="hl str">&quot;diff-tree&quot;</span> <span class="hl str">&quot;-m&quot;</span> <span class="hl str">&quot;-r&quot;</span> <span class="hl str">&quot;-z&quot;</span> <span class="hl str">&quot;--name-only&quot;</span> <span class="hl str">&quot;--no-commit-id&quot;</span> <span class="hl str">&quot;--root&quot;</span> commit<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;</span><span class="hl esc">\\</span><span class="hl str">([^\0]*</span><span class="hl esc">\\</span><span class="hl str">)\0&quot;</span> nil t <span class="hl num">1</span><span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span><span class="hl opt">)</span> files<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">sort</span> files <span class="hl opt">#'</span>string-lessp<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-read-commit-name <span class="hl opt">(</span><span class="hl kwa">prompt</span> <span class="hl opt">&amp;</span>optional default<span class="hl opt">)</span>
  <span class="hl str">&quot;Ask for a commit name, with completion for local branch, remote branch and tag.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">completing-read</span> prompt
                   <span class="hl opt">(</span><span class="hl kwa">list</span><span class="hl opt">*</span> <span class="hl str">&quot;HEAD&quot;</span> <span class="hl str">&quot;ORIG_HEAD&quot;</span> <span class="hl str">&quot;FETCH_HEAD&quot;</span> <span class="hl opt">(</span><span class="hl kwa">mapcar</span> <span class="hl opt">#'</span>car <span class="hl opt">(</span><span class="hl kwa">git-for-each-ref</span><span class="hl opt">)))</span>
		   nil nil nil nil default<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-checkout <span class="hl opt">(</span><span class="hl kwa">branch</span> <span class="hl opt">&amp;</span>optional merge<span class="hl opt">)</span>
  <span class="hl str">&quot;Checkout a branch, tag, or any commit.</span>
<span class="hl str">Use a prefix arg if git should merge while checking out.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span>
   <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">git-read-commit-name</span> <span class="hl str">&quot;Checkout: &quot;</span><span class="hl opt">)</span>
         current-prefix-arg<span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">args</span> <span class="hl opt">(</span><span class="hl kwa">list</span> branch <span class="hl str">&quot;--&quot;</span><span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> merge <span class="hl opt">(</span><span class="hl kwa">push</span> <span class="hl str">&quot;-m&quot;</span> args<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">apply</span> <span class="hl opt">#'</span>git-call-process-display-error <span class="hl str">&quot;checkout&quot;</span> args<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">git-update-status-files</span><span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-branch <span class="hl opt">(</span><span class="hl kwa">branch</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Create a branch from the current HEAD and switch to it.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">git-read-commit-name</span> <span class="hl str">&quot;Branch: &quot;</span><span class="hl opt">)))</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">git-rev-parse</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl str">&quot;refs/heads/&quot;</span> branch<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">yes-or-no-p</span> <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Branch %s already exists, replace it? &quot;</span> branch<span class="hl opt">))</span>
          <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">git-call-process-display-error</span> <span class="hl str">&quot;branch&quot;</span> <span class="hl str">&quot;-f&quot;</span> branch<span class="hl opt">)</span>
               <span class="hl opt">(</span><span class="hl kwa">git-call-process-display-error</span> <span class="hl str">&quot;checkout&quot;</span> branch<span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Canceled.&quot;</span><span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">git-call-process-display-error</span> <span class="hl str">&quot;checkout&quot;</span> <span class="hl str">&quot;-b&quot;</span> branch<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">git-refresh-ewoc-hf</span> git-status<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-amend-commit <span class="hl opt">()</span>
  <span class="hl str">&quot;Undo the last commit on HEAD, and set things up to commit an</span>
<span class="hl str">amended version of it.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">git-empty-db-p</span><span class="hl opt">) (</span><span class="hl kwa">error</span> <span class="hl str">&quot;No commit to amend.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">commit</span> <span class="hl opt">(</span><span class="hl kwa">git-rev-parse</span> <span class="hl str">&quot;HEAD&quot;</span><span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">files</span> <span class="hl opt">(</span><span class="hl kwa">git-get-commit-files</span> commit<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">git-rev-parse</span> <span class="hl str">&quot;HEAD^&quot;</span><span class="hl opt">)</span>
              <span class="hl opt">(</span><span class="hl kwa">git-call-process-display-error</span> <span class="hl str">&quot;reset&quot;</span> <span class="hl str">&quot;--soft&quot;</span> <span class="hl str">&quot;HEAD^&quot;</span><span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">and</span> <span class="hl opt">(</span><span class="hl kwa">git-update-ref</span> <span class="hl str">&quot;ORIG_HEAD&quot;</span> commit<span class="hl opt">)</span>
                 <span class="hl opt">(</span><span class="hl kwa">git-update-ref</span> <span class="hl str">&quot;HEAD&quot;</span> nil commit<span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">git-update-status-files</span> files t<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">git-setup-commit-buffer</span> commit<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">git-commit-file</span><span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-cherry-pick-commit <span class="hl opt">(</span><span class="hl kwa">arg</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Cherry-pick a commit.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">git-read-commit-name</span> <span class="hl str">&quot;Cherry-pick commit: &quot;</span><span class="hl opt">)))</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">commit</span> <span class="hl opt">(</span><span class="hl kwa">git-rev-parse</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> arg <span class="hl str">&quot;^0&quot;</span><span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">unless</span> commit <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not a valid commit '%s'.&quot;</span> arg<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">git-rev-parse</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> commit <span class="hl str">&quot;^2&quot;</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Cannot cherry-pick a merge commit.&quot;</span><span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">files</span> <span class="hl opt">(</span><span class="hl kwa">git-get-commit-files</span> commit<span class="hl opt">))</span>
          <span class="hl opt">(</span><span class="hl kwa">ok</span> <span class="hl opt">(</span><span class="hl kwa">git-call-process-display-error</span> <span class="hl str">&quot;cherry-pick&quot;</span> <span class="hl str">&quot;-n&quot;</span> commit<span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">git-update-status-files</span> files ok<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> <span class="hl opt">(</span><span class="hl kwa">git-setup-commit-buffer</span> commit<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">re-search-forward</span> <span class="hl str">&quot;^</span><span class="hl esc">\n</span><span class="hl str">*Signed-off-by:&quot;</span> nil t <span class="hl num">1</span><span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">match-beginning</span> <span class="hl num">0</span><span class="hl opt">))</span>
          <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-max</span><span class="hl opt">)))</span>
        <span class="hl opt">(</span><span class="hl kwa">insert</span> <span class="hl str">&quot;(cherry picked from commit &quot;</span> commit <span class="hl str">&quot;)</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">when</span> ok <span class="hl opt">(</span><span class="hl kwa">git-commit-file</span><span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-revert-commit <span class="hl opt">(</span><span class="hl kwa">arg</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Revert a commit.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl opt">(</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">git-read-commit-name</span> <span class="hl str">&quot;Revert commit: &quot;</span><span class="hl opt">)))</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">commit</span> <span class="hl opt">(</span><span class="hl kwa">git-rev-parse</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> arg <span class="hl str">&quot;^0&quot;</span><span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">unless</span> commit <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not a valid commit '%s'.&quot;</span> arg<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">git-rev-parse</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> commit <span class="hl str">&quot;^2&quot;</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Cannot revert a merge commit.&quot;</span><span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">files</span> <span class="hl opt">(</span><span class="hl kwa">git-get-commit-files</span> commit<span class="hl opt">))</span>
          <span class="hl opt">(</span><span class="hl kwa">subject</span> <span class="hl opt">(</span><span class="hl kwa">git-get-commit-description</span> commit<span class="hl opt">))</span>
          <span class="hl opt">(</span><span class="hl kwa">ok</span> <span class="hl opt">(</span><span class="hl kwa">git-call-process-display-error</span> <span class="hl str">&quot;revert&quot;</span> <span class="hl str">&quot;-n&quot;</span> commit<span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">git-update-status-files</span> files ok<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;^[0-9a-f]+ -</span> <span class="hl esc">\\</span><span class="hl str">(.*</span><span class="hl esc">\\</span><span class="hl str">)$&quot;</span> subject<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">setq</span> subject <span class="hl opt">(</span><span class="hl kwa">match-string</span> <span class="hl num">1</span> subject<span class="hl opt">)))</span>
      <span class="hl opt">(</span><span class="hl kwa">git-setup-log-buffer</span> <span class="hl opt">(</span><span class="hl kwa">get-buffer-create</span> <span class="hl str">&quot;*git-commit*&quot;</span><span class="hl opt">)</span>
                            <span class="hl opt">(</span><span class="hl kwa">git-get-merge-heads</span><span class="hl opt">)</span> nil nil <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Revert</span> <span class="hl esc">\&quot;</span><span class="hl str">%s</span><span class="hl esc">\&quot;</span><span class="hl str">&quot;</span> subject<span class="hl opt">)</span> nil
                            <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;This reverts commit %s.</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> commit<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">when</span> ok <span class="hl opt">(</span><span class="hl kwa">git-commit-file</span><span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-find-file <span class="hl opt">()</span>
  <span class="hl str">&quot;Visit the current file in its own buffer.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">info</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-data</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-locate</span> git-status<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">git-expand-directory</span> info<span class="hl opt">)</span>
      <span class="hl opt">(</span><span class="hl kwa">find-file</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">'</span>unmerged <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>state info<span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">smerge-mode</span> <span class="hl num">1</span><span class="hl opt">)))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-find-file-other-window <span class="hl opt">()</span>
  <span class="hl str">&quot;Visit the current file in its own buffer in another window.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">info</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-data</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-locate</span> git-status<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">find-file-other-window</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">eq</span> <span class="hl opt">'</span>unmerged <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>state info<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">smerge-mode</span><span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-find-file-imerge <span class="hl opt">()</span>
  <span class="hl str">&quot;Visit the current file in interactive merge mode.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">info</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-data</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-locate</span> git-status<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">find-file</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">smerge-ediff</span><span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-view-file <span class="hl opt">()</span>
  <span class="hl str">&quot;View the current file in its own buffer.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">info</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-data</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-locate</span> git-status<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">view-file</span> <span class="hl opt">(</span><span class="hl kwa">git-fileinfo-</span><span class="hl opt">&gt;</span>name info<span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-refresh-status <span class="hl opt">()</span>
  <span class="hl str">&quot;Refresh the git status buffer.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">unless</span> git-status <span class="hl opt">(</span><span class="hl kwa">error</span> <span class="hl str">&quot;Not in git-status buffer.&quot;</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Refreshing git status...&quot;</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">git-update-status-files</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;Refreshing git status...done&quot;</span><span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-status-quit <span class="hl opt">()</span>
  <span class="hl str">&quot;Quit git-status mode.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">bury-buffer</span><span class="hl opt">))</span>

<span class="hl slc">;;;; Major Mode</span>
<span class="hl slc">;;;; ------------------------------------------------------------</span>

<span class="hl opt">(</span><span class="hl kwa">defvar</span> git-status-mode-hook nil
  <span class="hl str">&quot;Run after `git-status-mode' is setup.&quot;</span><span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defvar</span> git-status-mode-map nil
  <span class="hl str">&quot;Keymap for git major mode.&quot;</span><span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defvar</span> git-status nil
  <span class="hl str">&quot;List of all files managed by the git-status mode.&quot;</span><span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">unless</span> git-status-mode-map
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">map</span> <span class="hl opt">(</span><span class="hl kwa">make-keymap</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">commit-map</span> <span class="hl opt">(</span><span class="hl kwa">make-sparse-keymap</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">diff-map</span> <span class="hl opt">(</span><span class="hl kwa">make-sparse-keymap</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">toggle-map</span> <span class="hl opt">(</span><span class="hl kwa">make-sparse-keymap</span><span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">suppress-keymap</span> map<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;?&quot;</span>   <span class="hl opt">'</span>git-help<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;h&quot;</span>   <span class="hl opt">'</span>git-help<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot; &quot;</span>   <span class="hl opt">'</span>git-next-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;a&quot;</span>   <span class="hl opt">'</span>git-add-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;c&quot;</span>   <span class="hl opt">'</span>git-commit-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-c&quot;</span> commit-map<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;d&quot;</span>    diff-map<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;=&quot;</span>   <span class="hl opt">'</span>git-diff-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;f&quot;</span>   <span class="hl opt">'</span>git-find-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;</span><span class="hl esc">\r</span><span class="hl str">&quot;</span>  <span class="hl opt">'</span>git-find-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;g&quot;</span>   <span class="hl opt">'</span>git-refresh-status<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;i&quot;</span>   <span class="hl opt">'</span>git-ignore-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;I&quot;</span>   <span class="hl opt">'</span>git-insert-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;l&quot;</span>   <span class="hl opt">'</span>git-log-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;m&quot;</span>   <span class="hl opt">'</span>git-mark-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;M&quot;</span>   <span class="hl opt">'</span>git-mark-all<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;n&quot;</span>   <span class="hl opt">'</span>git-next-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;N&quot;</span>   <span class="hl opt">'</span>git-next-unmerged-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;o&quot;</span>   <span class="hl opt">'</span>git-find-file-other-window<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;p&quot;</span>   <span class="hl opt">'</span>git-prev-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;P&quot;</span>   <span class="hl opt">'</span>git-prev-unmerged-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;q&quot;</span>   <span class="hl opt">'</span>git-status-quit<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;r&quot;</span>   <span class="hl opt">'</span>git-remove-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;t&quot;</span>    toggle-map<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;T&quot;</span>   <span class="hl opt">'</span>git-toggle-all-marks<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;u&quot;</span>   <span class="hl opt">'</span>git-unmark-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;U&quot;</span>   <span class="hl opt">'</span>git-revert-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;v&quot;</span>   <span class="hl opt">'</span>git-view-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;x&quot;</span>   <span class="hl opt">'</span>git-remove-handled<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\C-?&quot;</span> <span class="hl opt">'</span>git-unmark-file-up<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> map <span class="hl str">&quot;\M-\C-?&quot;</span> <span class="hl opt">'</span>git-unmark-all<span class="hl opt">)</span>
    <span class="hl slc">; the commit submap</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> commit-map <span class="hl str">&quot;\C-a&quot;</span> <span class="hl opt">'</span>git-amend-commit<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> commit-map <span class="hl str">&quot;\C-b&quot;</span> <span class="hl opt">'</span>git-branch<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> commit-map <span class="hl str">&quot;\C-o&quot;</span> <span class="hl opt">'</span>git-checkout<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> commit-map <span class="hl str">&quot;\C-p&quot;</span> <span class="hl opt">'</span>git-cherry-pick-commit<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> commit-map <span class="hl str">&quot;\C-v&quot;</span> <span class="hl opt">'</span>git-revert-commit<span class="hl opt">)</span>
    <span class="hl slc">; the diff submap</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> diff-map <span class="hl str">&quot;b&quot;</span> <span class="hl opt">'</span>git-diff-file-base<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> diff-map <span class="hl str">&quot;c&quot;</span> <span class="hl opt">'</span>git-diff-file-combined<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> diff-map <span class="hl str">&quot;=&quot;</span> <span class="hl opt">'</span>git-diff-file<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> diff-map <span class="hl str">&quot;e&quot;</span> <span class="hl opt">'</span>git-diff-file-idiff<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> diff-map <span class="hl str">&quot;E&quot;</span> <span class="hl opt">'</span>git-find-file-imerge<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> diff-map <span class="hl str">&quot;h&quot;</span> <span class="hl opt">'</span>git-diff-file-merge-head<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> diff-map <span class="hl str">&quot;m&quot;</span> <span class="hl opt">'</span>git-diff-file-mine<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> diff-map <span class="hl str">&quot;o&quot;</span> <span class="hl opt">'</span>git-diff-file-other<span class="hl opt">)</span>
    <span class="hl slc">; the toggle submap</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> toggle-map <span class="hl str">&quot;u&quot;</span> <span class="hl opt">'</span>git-toggle-show-uptodate<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> toggle-map <span class="hl str">&quot;i&quot;</span> <span class="hl opt">'</span>git-toggle-show-ignored<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> toggle-map <span class="hl str">&quot;k&quot;</span> <span class="hl opt">'</span>git-toggle-show-unknown<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">define-key</span> toggle-map <span class="hl str">&quot;m&quot;</span> <span class="hl opt">'</span>git-toggle-all-marks<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">setq</span> git-status-mode-map map<span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">easy-menu-define</span> git-menu git-status-mode-map
    <span class="hl str">&quot;Git Menu&quot;</span>
    <span class="hl opt">`(</span><span class="hl str">&quot;Git&quot;</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Refresh&quot;</span> git-refresh-status t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Commit&quot;</span> git-commit-file t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Checkout...&quot;</span> git-checkout t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;New Branch...&quot;</span> git-branch t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Cherry-pick Commit...&quot;</span> git-cherry-pick-commit t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Revert Commit...&quot;</span> git-revert-commit t<span class="hl opt">]</span>
      <span class="hl opt">(</span><span class="hl str">&quot;Merge&quot;</span>
	<span class="hl opt">[</span><span class="hl str">&quot;Next Unmerged File&quot;</span> git-next-unmerged-file t<span class="hl opt">]</span>
	<span class="hl opt">[</span><span class="hl str">&quot;Prev Unmerged File&quot;</span> git-prev-unmerged-file t<span class="hl opt">]</span>
	<span class="hl opt">[</span><span class="hl str">&quot;Interactive Merge File&quot;</span> git-find-file-imerge t<span class="hl opt">]</span>
	<span class="hl opt">[</span><span class="hl str">&quot;Diff Against Common Base File&quot;</span> git-diff-file-base t<span class="hl opt">]</span>
	<span class="hl opt">[</span><span class="hl str">&quot;Diff Combined&quot;</span> git-diff-file-combined t<span class="hl opt">]</span>
	<span class="hl opt">[</span><span class="hl str">&quot;Diff Against Merge Head&quot;</span> git-diff-file-merge-head t<span class="hl opt">]</span>
	<span class="hl opt">[</span><span class="hl str">&quot;Diff Against Mine&quot;</span> git-diff-file-mine t<span class="hl opt">]</span>
	<span class="hl opt">[</span><span class="hl str">&quot;Diff Against Other&quot;</span> git-diff-file-other t<span class="hl opt">])</span>
      <span class="hl str">&quot;--------&quot;</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Add File&quot;</span> git-add-file t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Revert File&quot;</span> git-revert-file t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Ignore File&quot;</span> git-ignore-file t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Remove File&quot;</span> git-remove-file t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Insert File&quot;</span> git-insert-file t<span class="hl opt">]</span>
      <span class="hl str">&quot;--------&quot;</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Find File&quot;</span> git-find-file t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;View File&quot;</span> git-view-file t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Diff File&quot;</span> git-diff-file t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Interactive Diff File&quot;</span> git-diff-file-idiff t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Log&quot;</span> git-log-file t<span class="hl opt">]</span>
      <span class="hl str">&quot;--------&quot;</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Mark&quot;</span> git-mark-file t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Mark All&quot;</span> git-mark-all t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Unmark&quot;</span> git-unmark-file t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Unmark All&quot;</span> git-unmark-all t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Toggle All Marks&quot;</span> git-toggle-all-marks t<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Hide Handled Files&quot;</span> git-remove-handled t<span class="hl opt">]</span>
      <span class="hl str">&quot;--------&quot;</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Show Uptodate Files&quot;</span> git-toggle-show-uptodate <span class="hl opt">:</span>style toggle <span class="hl opt">:</span>selected git-show-uptodate<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Show Ignored Files&quot;</span> git-toggle-show-ignored <span class="hl opt">:</span>style toggle <span class="hl opt">:</span>selected git-show-ignored<span class="hl opt">]</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Show Unknown Files&quot;</span> git-toggle-show-unknown <span class="hl opt">:</span>style toggle <span class="hl opt">:</span>selected git-show-unknown<span class="hl opt">]</span>
      <span class="hl str">&quot;--------&quot;</span>
      <span class="hl opt">[</span><span class="hl str">&quot;Quit&quot;</span> git-status-quit t<span class="hl opt">])))</span>


<span class="hl slc">;; git mode should only run in the *git status* buffer</span>
<span class="hl opt">(</span><span class="hl kwa">put</span> <span class="hl opt">'</span>git-status-mode <span class="hl opt">'</span>mode-class <span class="hl opt">'</span>special<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-status-mode <span class="hl opt">()</span>
  <span class="hl str">&quot;Major mode for interacting with Git.</span>
<span class="hl str">Commands:</span>
<span class="hl str"></span><span class="hl esc">\\</span><span class="hl str">{git-status-mode-map}&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">kill-all-local-variables</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">buffer-disable-undo</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">setq</span> mode-name <span class="hl str">&quot;git status&quot;</span>
        major-mode <span class="hl opt">'</span>git-status-mode
        goal-column <span class="hl num">17</span>
        buffer-read-only t<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">use-local-map</span> git-status-mode-map<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">buffer-read-only</span> nil<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">erase-buffer</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">status</span> <span class="hl opt">(</span><span class="hl kwa">ewoc-create</span> <span class="hl opt">'</span>git-fileinfo-prettyprint <span class="hl str">&quot;&quot;</span> <span class="hl str">&quot;&quot;</span><span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">set</span> <span class="hl opt">(</span><span class="hl kwa">make-local-variable</span> <span class="hl opt">'</span>git-status<span class="hl opt">)</span> status<span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">set</span> <span class="hl opt">(</span><span class="hl kwa">make-local-variable</span> <span class="hl opt">'</span>list-buffers-directory<span class="hl opt">)</span> default-directory<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">make-local-variable</span> <span class="hl opt">'</span>git-show-uptodate<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">make-local-variable</span> <span class="hl opt">'</span>git-show-ignored<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">make-local-variable</span> <span class="hl opt">'</span>git-show-unknown<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">run-hooks</span> <span class="hl opt">'</span>git-status-mode-hook<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-find-status-buffer <span class="hl opt">(</span><span class="hl kwa">dir</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Find the git status buffer handling a specified directory.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">list</span> <span class="hl opt">(</span><span class="hl kwa">buffer-list</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">fulldir</span> <span class="hl opt">(</span><span class="hl kwa">expand-file-name</span> dir<span class="hl opt">))</span>
        found<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">and</span> list <span class="hl opt">(</span><span class="hl kwa">not</span> found<span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">buffer</span> <span class="hl opt">(</span><span class="hl kwa">car</span> list<span class="hl opt">)))</span>
        <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> buffer
          <span class="hl opt">(</span><span class="hl kwa">when</span> <span class="hl opt">(</span><span class="hl kwa">and</span> list-buffers-directory
                     <span class="hl opt">(</span><span class="hl kwa">string-equal</span> fulldir <span class="hl opt">(</span><span class="hl kwa">expand-file-name</span> list-buffers-directory<span class="hl opt">))</span>
		     <span class="hl opt">(</span><span class="hl kwa">eq</span> major-mode <span class="hl opt">'</span>git-status-mode<span class="hl opt">))</span>
            <span class="hl opt">(</span><span class="hl kwa">setq</span> found buffer<span class="hl opt">))))</span>
      <span class="hl opt">(</span><span class="hl kwa">setq</span> list <span class="hl opt">(</span><span class="hl kwa">cdr</span> list<span class="hl opt">)))</span>
    found<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-status <span class="hl opt">(</span><span class="hl kwa">dir</span><span class="hl opt">)</span>
  <span class="hl str">&quot;Entry point into git-status mode.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span> <span class="hl str">&quot;DSelect directory: &quot;</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">setq</span> dir <span class="hl opt">(</span><span class="hl kwa">git-get-top-dir</span> dir<span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">file-exists-p</span> <span class="hl opt">(</span><span class="hl kwa">concat</span> <span class="hl opt">(</span><span class="hl kwa">file-name-as-directory</span> dir<span class="hl opt">)</span> <span class="hl str">&quot;.git&quot;</span><span class="hl opt">))</span>
      <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">buffer</span> <span class="hl opt">(</span><span class="hl kwa">or</span> <span class="hl opt">(</span><span class="hl kwa">and</span> git-reuse-status-buffer <span class="hl opt">(</span><span class="hl kwa">git-find-status-buffer</span> dir<span class="hl opt">))</span>
                        <span class="hl opt">(</span><span class="hl kwa">create-file-buffer</span> <span class="hl opt">(</span><span class="hl kwa">expand-file-name</span> <span class="hl str">&quot;*git-status*&quot;</span> dir<span class="hl opt">)))))</span>
        <span class="hl opt">(</span><span class="hl kwa">switch-to-buffer</span> buffer<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">cd</span> dir<span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">git-status-mode</span><span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">git-refresh-status</span><span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">goto-char</span> <span class="hl opt">(</span><span class="hl kwa">point-min</span><span class="hl opt">))</span>
        <span class="hl opt">(</span><span class="hl kwa">add-hook</span> <span class="hl opt">'</span>after-save-hook <span class="hl opt">'</span>git-update-saved-file<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">message</span> <span class="hl str">&quot;%s is not a git working tree.&quot;</span> dir<span class="hl opt">)))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-update-saved-file <span class="hl opt">()</span>
  <span class="hl str">&quot;Update the corresponding git-status buffer when a file is saved.</span>
<span class="hl str">Meant to be used in `after-save-hook'.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span><span class="hl opt">* ((</span><span class="hl kwa">file</span> <span class="hl opt">(</span><span class="hl kwa">expand-file-name</span> buffer-file-name<span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">dir</span> <span class="hl opt">(</span><span class="hl kwa">condition-case</span> nil <span class="hl opt">(</span><span class="hl kwa">git-get-top-dir</span> <span class="hl opt">(</span><span class="hl kwa">file-name-directory</span> file<span class="hl opt">)) (</span><span class="hl kwa">error</span> nil<span class="hl opt">)))</span>
         <span class="hl opt">(</span><span class="hl kwa">buffer</span> <span class="hl opt">(</span><span class="hl kwa">and</span> dir <span class="hl opt">(</span><span class="hl kwa">git-find-status-buffer</span> dir<span class="hl opt">))))</span>
    <span class="hl opt">(</span><span class="hl kwa">when</span> buffer
      <span class="hl opt">(</span><span class="hl kwa">with-current-buffer</span> buffer
        <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">filename</span> <span class="hl opt">(</span><span class="hl kwa">file-relative-name</span> file dir<span class="hl opt">)))</span>
          <span class="hl slc">; skip files located inside the .git directory</span>
          <span class="hl opt">(</span><span class="hl kwa">unless</span> <span class="hl opt">(</span><span class="hl kwa">string-match</span> <span class="hl str">&quot;^</span><span class="hl esc">\\</span><span class="hl str">.git/&quot;</span> filename<span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">git-call-process</span> nil <span class="hl str">&quot;add&quot;</span> <span class="hl str">&quot;--refresh&quot;</span> <span class="hl str">&quot;--&quot;</span> filename<span class="hl opt">)</span>
            <span class="hl opt">(</span><span class="hl kwa">git-update-status-files</span> <span class="hl opt">(</span><span class="hl kwa">list</span> filename<span class="hl opt">))))))))</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> git-help <span class="hl opt">()</span>
  <span class="hl str">&quot;Display help for Git mode.&quot;</span>
  <span class="hl opt">(</span><span class="hl kwa">interactive</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">describe-function</span> <span class="hl opt">'</span>git-status-mode<span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">provide</span> <span class="hl opt">'</span>git<span class="hl opt">)</span>
<span class="hl slc">;;; git.el ends here</span>
</code></pre></td></tr></table>
</div> <!-- class=content -->
<div class='footer'>generated  by cgit v0.10.2 at 2015-05-17 13:54:04 (GMT)</div>
</div> <!-- id=cgit -->
</body>
</html>
